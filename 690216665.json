{
  "SaveName": "Secret Hitler: Consolidator Edition",
  "GameMode": "◀Secret Hitler: CE▶",
  "Gravity": 0.5,
  "PlayArea": 0.5,
  "Date": "8/20/2019 12:46:10 AM",
  "Table": "Table_Custom",
  "TableURL": "http://cloud-3.steamusercontent.com/ugc/486767061424367179/FD8732A68152AD58E409CB1E76885D4CC03DE603/",
  "Sky": "Sky_Regal",
  "SkyURL": "http://cloud-3.steamusercontent.com/ugc/491274777994520725/872F820DDEFDA08185A48917AC7E80839D7B8879/",
  "Note": "[FFFF00]Secret Hitler: Consolidator Edition\nVersion 109 (234112)\n\n[-]Based on the board game:\n\n[FF0000]Secret Hitler[-]\ndesigned by\n[0080F8]Max Temkin[-],\n[0080F8]Mike Boxleiter[-],\n[0080F8]Tommy Maranges[-]\nand Illustrated by\n[0080F8]Mackenzie Schubert.[-]\n\nCheck the notebook for additional\ninformation and subscribe on the\nworkshop to make sure you have the\nlatest version.\n\nOnly the president can draw cards.\n\nTo topdeck a card move the election tracker\nto the \"REVEAL & PASS TOP POLICY\" circle.\n\n",
  "Rules": "",
  "XmlUI": "<Defaults>\r\n   <Text class=\"outline\" outline=\"Black\" fontSize=\"28\" visibility=\" \"/>\r\n   <Panel class=\"window\" allowDragging=\"true\" returnToOriginalPositionWhenReleased=\"false\" color=\"#EBEBEB\" outline=\"#000000\" outlineSize=\"1 -1\" />\r\n   <Button class=\"window\" fontSize=\"22\" colors=\"#FFFFFF|#FFFFFF|#C8C8C8|#C8C8C880\" />\r\n   <InputField class=\"window\" fontSize=\"20\" colors=\"#FFFFFF|#FFFFFF|#C8C8C8|#C8C8C880\" />\r\n   <Text class=\"window\" fontSize=\"28\" />\r\n   <Button class=\"tp50\" fontSize=\"22\" colors=\"#FFFFFF80|#FFFFFF|#C8C8C880|#C8C8C840\" />\r\n   <Dropdown class=\"tp50\" fontSize=\"16\" colors=\"#FFFFFF80|#FFFFFF|#C8C8C880|#C8C8C840\" />\r\n   <InputField class=\"tp50\" fontSize=\"16\" colors=\"#FFFFFF80|#FFFFFF|#C8C8C880|#C8C8C840\" width=\"0.1\" />\r\n</Defaults>\r\n\r\n<VerticalLayout padding=\"0 0 100 0\" width=\"30%\" rectAlignment=\"UpperLeft\" childAlignment=\"UpperCenter\" childForceExpandHeight=\"false\">\r\n   <Text class=\"outline\" id=\"playerWhite\" color=\"#FFFFFF\">Player White:</Text>\r\n   <Text class=\"outline\" id=\"playerBrown\" color=\"#703A16\">Player Brown:</Text>\r\n   <Text class=\"outline\" id=\"playerRed\" color=\"#DA1917\">Player Red:</Text>\r\n   <Text class=\"outline\" id=\"playerOrange\" color=\"#F3631C\">Player Orange:</Text>\r\n   <Text class=\"outline\" id=\"playerYellow\" color=\"#E6E42B\">Player Yellow:</Text>\r\n   <Text class=\"outline\" id=\"playerGreen\" color=\"#30B22A\">Player Green:</Text>\r\n   <Text class=\"outline\" id=\"playerTeal\" color=\"#20B09A\">Player Teal:</Text>\r\n   <Text class=\"outline\" id=\"playerBlue\" color=\"#1E87FF\">Player Blue:</Text>\r\n   <Text class=\"outline\" id=\"playerPurple\" color=\"#9F1FEF\">Player Purple:</Text>\r\n   <Text class=\"outline\" id=\"playerPink\" color=\"#F36FCD\">Player Pink:</Text>\r\n   <Text class=\"outline\" id=\"youLib\" color=\"#0080F8\">ERROR: youLib</Text>\r\n   <Text class=\"outline\" id=\"youFas\" color=\"#FF0000\">ERROR: youFas</Text>\r\n   <Text class=\"outline\" id=\"youHitler\" color=\"#FF0000\">ERROR: youHitler</Text>\r\n   <Text class=\"outline\" id=\"youNotPlaying\" color=\"#7F7F7F\">You are not playing!</Text>\r\n   <Text class=\"outline\" id=\"hitWhite\" color=\"#FFFFFF\">ERROR: hitWhite</Text>\r\n   <Text class=\"outline\" id=\"hitBrown\" color=\"#703A16\">ERROR: hitBrown</Text>\r\n   <Text class=\"outline\" id=\"hitRed\" color=\"#DA1917\">ERROR: hitRed</Text>\r\n   <Text class=\"outline\" id=\"hitOrange\" color=\"#F3631C\">ERROR: hitOrange</Text>\r\n   <Text class=\"outline\" id=\"hitYellow\" color=\"#E6E42B\">ERROR: hitYellow</Text>\r\n   <Text class=\"outline\" id=\"hitGreen\" color=\"#30B22A\">ERROR: hitGreen</Text>\r\n   <Text class=\"outline\" id=\"hitTeal\" color=\"#20B09A\">ERROR: hitTeal</Text>\r\n   <Text class=\"outline\" id=\"hitBlue\" color=\"#1E87FF\">ERROR: hitBlue</Text>\r\n   <Text class=\"outline\" id=\"hitPurple\" color=\"#9F1FEF\">ERROR: hitPurple</Text>\r\n   <Text class=\"outline\" id=\"hitPink\" color=\"#F36FCD\">ERROR: hitPink</Text>\r\n   <Text class=\"outline\" id=\"hitTan\" color=\"#D2B48C\">ERROR: hitTan</Text>\r\n   <Text class=\"outline\" id=\"hitMaroon\" color=\"#800000\">ERROR: hitMaroon</Text>\r\n   <Text class=\"outline\" id=\"fasWhite\" color=\"#FFFFFF\">ERROR: fasWhite</Text>\r\n   <Text class=\"outline\" id=\"fasBrown\" color=\"#703A16\">ERROR: fasBrown</Text>\r\n   <Text class=\"outline\" id=\"fasRed\" color=\"#DA1917\">ERROR: fasRed</Text>\r\n   <Text class=\"outline\" id=\"fasOrange\" color=\"#F3631C\">ERROR: fasOrange</Text>\r\n   <Text class=\"outline\" id=\"fasYellow\" color=\"#E6E42B\">ERROR: fasYellow</Text>\r\n   <Text class=\"outline\" id=\"fasGreen\" color=\"#30B22A\">ERROR: fasGreen</Text>\r\n   <Text class=\"outline\" id=\"fasTeal\" color=\"#20B09A\">ERROR: fasTeal</Text>\r\n   <Text class=\"outline\" id=\"fasBlue\" color=\"#1E87FF\">ERROR: fasBlue</Text>\r\n   <Text class=\"outline\" id=\"fasPurple\" color=\"#9F1FEF\">ERROR: fasPurple</Text>\r\n   <Text class=\"outline\" id=\"fasPink\" color=\"#F36FCD\">ERROR: fasPink</Text>\r\n   <Text class=\"outline\" id=\"fasTan\" color=\"#D2B48C\">ERROR: fasTan</Text>\r\n   <Text class=\"outline\" id=\"fasMaroon\" color=\"#800000\">ERROR: fasMaroon</Text>\r\n</VerticalLayout>\r\n\r\n<Panel class=\"window\" id=\"admin\" width=\"680\" height=\"140\" rectAlignment=\"Center\" active=\"false\" visibility=\" \">\r\n   <Text class=\"window\" alignment=\"UpperLeft\" offsetXY=\"5 -5\">GREY PLAYER ADMIN</Text>\r\n   <Button class=\"window\" width=\"30\" height=\"30\" rectAlignment=\"UpperRight\" offsetXY=\"-5 -5\" fontSize=\"18\" textColor=\"#B60808\" onClick=\"closeAdminUIB\">X</Button>\r\n   <VerticalLayout padding=\"5 5 40 5\" spacing=\"5\">\r\n      <InputField class=\"window\" onValueChanged=\"playerNameUIIF\">Enter player name (partial allowed but must be distinct) or steam id</InputField>\r\n      <HorizontalLayout spacing=\"5\">\r\n         <Button class=\"window\" onClick=\"sitMaroonUIB\">Sit in Maroon</Button>\r\n         <Button class=\"window\" onClick=\"sitTanUIB\">Sit in Tan</Button>\r\n         <Button class=\"window\" onClick=\"removeColorGreyUIB\">Remove from Seat</Button>\r\n      </HorizontalLayout>\r\n   </VerticalLayout>\r\n</Panel>\r\n\r\n<Panel id=\"adminButton\" width=\"128\" height=\"58\" rectAlignment=\"UpperCenter\" offsetXY=\"260 -100\" active=\"false\" visibility=\" \">\r\n   <Button class=\"tp50\" onClick=\"showAdminUIB\">Grey Player Admin</Button>\r\n</Panel>\r\n\r\n<HorizontalLayout id=\"greyCommands\" padding=\"110 0 0 0\" height=\"8%\" width=\"33%\" rectAlignment=\"LowerLeft\" visibility=\" \">\r\n   <Dropdown class=\"tp50\" onValueChanged=\"actionUID\">\r\n      <Option selected=\"true\" >Choose Action</Option>\r\n      <Option>Choose Chancellor</Option>\r\n      <Option>Inspect Player</Option>\r\n      <Option>Give Presidency To</Option>\r\n   </Dropdown>\r\n   <Dropdown class=\"tp50\" onValueChanged=\"colorUID\">\r\n      <Option selected=\"true\">Choose Player</Option>\r\n      <Option>White</Option>\r\n      <Option>Brown</Option>\r\n      <Option>Red</Option>\r\n      <Option>Orange</Option>\r\n      <Option>Yellow</Option>\r\n      <Option>Green</Option>\r\n      <Option>Teal</Option>\r\n      <Option>Blue</Option>\r\n      <Option>Purple</Option>\r\n      <Option>Pink</Option>\r\n      <Option>Tan</Option>\r\n      <Option>Maroon</Option>\r\n   </Dropdown>\r\n   <Button class=\"tp50\" onClick=\"startUIB\">Start</Button>\r\n</HorizontalLayout>\r\n\r\n<VerticalLayout id=\"greyCommandsExp\" height=\"8%\" width=\"33%\" rectAlignment=\"LowerLeft\" visibility=\" \">\r\n   <HorizontalLayout padding=\"110 0 0 0\">\r\n      <Dropdown class=\"tp50\" onValueChanged=\"actionUID\">\r\n         <Option selected=\"true\">Choose Action</Option>\r\n         <Option>Choose Chancellor</Option>\r\n         <Option>Inspect Player</Option>\r\n         <Option>Give Presidency To</Option>\r\n         <Option>Discard Ability</Option>\r\n         <Option>Reveal Ability</Option>\r\n         <Option>Examine Ability Deck</Option>\r\n         <Option>Take from Ability Deck</Option>\r\n         <Option>Give Card to</Option>\r\n      </Dropdown>\r\n   </HorizontalLayout>\r\n   <HorizontalLayout padding=\"110 0 0 0\">\r\n      <InputField class=\"tp50\" onValueChanged=\"inputUIIF\" width=\"5%\">Enter Card Name</InputField>\r\n      <Dropdown class=\"tp50\" onValueChanged=\"colorUID\">\r\n         <Option selected=\"true\">Choose Player</Option>\r\n         <Option>White</Option>\r\n         <Option>Brown</Option>\r\n         <Option>Red</Option>\r\n         <Option>Orange</Option>\r\n         <Option>Yellow</Option>\r\n         <Option>Green</Option>\r\n         <Option>Teal</Option>\r\n         <Option>Blue</Option>\r\n         <Option>Purple</Option>\r\n         <Option>Pink</Option>\r\n         <Option>Tan</Option>\r\n         <Option>Maroon</Option>\r\n      </Dropdown>\r\n      <Button class=\"tp50\" onClick=\"startUIB\">Start</Button>\r\n   </HorizontalLayout>\r\n</VerticalLayout>\r\n\r\n<HorizontalLayout id=\"greyPolicy\" height=\"8%\" width=\"33%\" rectAlignment=\"LowerCenter\" visibility=\" \">\r\n   <Button class=\"tp50\" onClick=\"drawCardsUIB\">Draw Cards</Button>\r\n   <Button class=\"tp50\" onClick=\"discardLUIB\">Discard L</Button>\r\n   <Button class=\"tp50\" onClick=\"discardFUIB\">Discard F</Button>\r\n   <Button class=\"tp50\" onClick=\"checkCardsUIB\">Check Cards</Button>\r\n</HorizontalLayout>\r\n\r\n<HorizontalLayout id=\"greyVote\" padding=\"0 110 0 0\" height=\"8%\" width=\"33%\" rectAlignment=\"LowerRight\" visibility=\" \">\r\n   <Button class=\"tp50\" onClick=\"voteJaUIB\">Vote ja!</Button>\r\n   <Button class=\"tp50\" onClick=\"voteNeinUIB\">Vote nein</Button>\r\n   <Button class=\"tp50\" onClick=\"voteRemoveUIB\">Remove vote</Button>\r\n   <Button class=\"tp50\" onClick=\"tellRoleButtonUIB\">Role?</Button>\r\n</HorizontalLayout>\r\n\r\n<HorizontalLayout padding=\"0 110 0 0\" height=\"8%\" width=\"14%\" rectAlignment=\"LowerRight\" visibility=\"White|Brown|Red|Orange|Yellow|Green|Teal|Blue|Purple|Pink|Black\">\r\n   <Button class=\"tp50\" onClick=\"tellRoleButtonUIB\">Role?</Button>\r\n</HorizontalLayout>",
  "LuaScript": "-- Created by LostGod on 5/8/2016\n-- Heavily modified by Lost Savage\n-- Lots of code from Sionar\n-- Also used code from smiling Aktheon, SwiftPanda,\n-- Rodney, Markimus, Morten G and Hmmmpf\n-- Scripts can be found on https://github.com/LostSavage/SecretHitlerCE\nMOD_NAME = \"Secret Hitler: CE\"\nUPDATE_VERSION = 109\nADD_ON_VERSION = 6\n----#include \\SecretHitlerCE\\main.ttslua\n--Static\n\n--Boards and Buttons\nsettingsPannel_guid = '39d283'\nfasPannel_guid = 'c09dbd'\ndrawPileBoard_guid = 'a5b10f'\ndiscardPileBoard_guid = '3e225f'\nradio_string = '●'\ncheck_string = '✓'\n\n--Decks/Cards\nhitler_deck_guid = '5997ea'\nfascist_deck_guids = {'5f2055','fb58cf', '4a3cf4'}\nfascist_deck_extra_guid = 'd60f75'\nliberal_deck_guids = {'b156f7', 'd1735a', 'c8ab2a', 'b2873d', '313939', '40d8f5'}\nliberal_deck_extra_guid = '304115'\nextraRole_card_guids = {'675a6f', '16e480', '0a5960', '02b664', '328440', '05df40', '98f4dd', '7b4b46', 'ccb7ed', 'c2309a'}\nfakeMembership_card_guid = '55d1c3'\nfascistMembership_card_guid = 'e4d489'\nliberalMembership_card_guid = 'a73564'\nGREY_POLICY_RIGHT = -9\nGREY_EXPANSION_RIGHT = 9\n\n--Placards and Tracker\nPRESIDENT_GUID = \"4d3d8f\"\nPREV_PRESIDENT_GUID = \"780217\"\nPREV_PRESIDENT_POS = {x = -16.5, y = 1.06, z = -17}\nPREV_PRESIDENT_ROT = {x = 0, y = 270, z = 0}\nCHANCELOR_GUID = \"7dba7e\"\nPREV_CHANCELOR_GUID = \"448483\"\nPREV_CHANCELOR_POS = {x = 16.5, y = 1.06, z = -17}\nPREV_CHANCELOR_ROT = {x = 0, y = 90, z = 0}\nELECTION_TRACKER_GUID = \"dd57c4\"\n\n--Scripting Zones\nDRAW_ZONE_GUID = '6463d3'\nDISCARD_ZONE_GUID = 'b9bd6e'\nABILITIESPILE_ZONE_GUID = 'eea120'\nEFFECTSPILE_ZONE_GUID = '374a16'\nfascist_zone_guids = {'1f0149', '390247', '6c3840', '13e460', '441bbf', '6a906e', '488053'}\nliberal_zone_guids = {'12b8ce', '3cabfa', '6f02b7', '939e6d', '3f80ba', 'a6b76f'}\ntopdeck_zone_guid = 'c0b577'\npolicySafety_zone_guids = {White = 'e99663', Brown = '13b335', Red = 'd7774a', Orange = 'f601b1', Yellow = '620e09', Green = 'b7c2d8', Teal = '162d55', Blue = '0aa61b', Purple = 'fdc17a', Pink = 'c4d8e8'}\n\n--Other\nHIDDEN_ZONE_GUIDS = {White = \"f13d0b\", Brown = \"90049b\", Red = \"134297\", Orange = \"344002\", Yellow = \"9b5558\", Green = \"7a8301\", Teal = \"568a75\", Blue = \"dbd95e\", Purple = \"cc1b94\", Pink = \"d954ee\"}\ntrusted_players = {'76561197992512677'}\nboardGreen_rgb = {14/255, 45/255, 18/255}\nboardBrown_rgb = {53/255, 27/255, 17/255}\nlastVote_guids = {'88c953', 'ba4919', 'b7dcde', '4598da'}\n-- @{100, 100, 100+} hidden zones\n-- @{-100, 100, -100} is used to delete/spawn objects\n\n--Variable\ncustomOnly = nil\nbannerZoneGuid = nil\ntopdeck = false\nlastDrawCt = nil\nlastPlayerCt = nil\nhold = false\nvotes = {}\ndisableVote = false\nvotePassed = false\nblockDraw = false\n\n--Wait timers\nvoteWaitId = nil\npolicyWaitId = nil\nboardCardWaitId = nil\n\n--Saved data\nactivePowerColor = nil\nbannerGuids = {}\nbulletInfo = {\n\ttype = 'Custom_Model',\n\tmesh = 'http://cloud-3.steamusercontent.com/ugc/487893695357489958/2749FC201350D558AC9DF373861E4323C8B354BB/',\n\tdiffuse = '',\n\tassetbundle = nil,\n\tassetbundle_secondary = nil,\n\tconvex = true,\n\timage = nil,\n\tmaterial = 2,\n\tspecular_color = {1, 1, 0.5882353},\n\tspecular_intensity = 1.7,\n\tspecular_sharpness = 8.0,\n\tfresnel_strength = 0,\n\tuse_grid = false,\n\tcolorTint = {0, 0, 0.0382530019},\n\tscale = {0.75, 0.75, 0.75},\n\taction = 'Shoots',\n\tstatus = 'Dead',\n\tshooterColor = nil\n}\nfascists = {}\nforcePres = nil\ngreyAvatarGuids = {}\ngreyPlayerSteamIds = {}\ngreyPlayerHandGuids = {}\nhitler = {}\nimprisonInfo = {\n\ttype = 'Custom_Model',\n\tmesh = 'http://cloud-3.steamusercontent.com/ugc/993492686551248783/B83B87475B885192F8F820E381F1D70A2E3F1919/',\n\tdiffuse = 'http://cloud-3.steamusercontent.com/ugc/993492686551247160/63699220060380A49761207FF81A12E1AB00A597/',\n\tassetbundle = nil,\n\tassetbundle_secondary = nil,\n\tconvex = true,\n\timage = nil,\n\tmaterial = 2,\n\tspecular_color = {0.737, 0.737, 0.737},\n\tspecular_intensity = 0.9,\n\tspecular_sharpness = 7.0,\n\tfresnel_strength = 0,\n\tuse_grid = false,\n\tcolorTint = {1, 1, 1},\n\tscale = {4, 4, 4},\n\taction = 'Imprisons',\n\tstatus = 'Imprisoned',\n\tshooterColor = nil\n}\ninspected = {}\njaCardGuids = {}\nlastFascistPlayed = 0\nlastLiberalPlayed = 0\nlastChan = nil\nlastPres = nil\nlastVote = ''\nmainNotes = ''\nneinCardGuids = {}\nnotate = {\n\tline = nil,\n\taction = ''\n}\nnoteTakerNotes = {}\nnoteTakerCurrLine = 0\noptions = {\n\tautoNotate = false,\n\tdealPartyCards = false,\n\tdealRoleCards = false,\n\texpansionAmount = 2,\n\texpansionOptionEnabled = 0, -- [1 SwapGov, 2 Reverse, 4 SwapPower, 8 SetupPowerAbilities]\n\texpansionOptionStatus = 0, -- [1 SwapGov, 2 Reverse]\n\texpansionOptionText = {'Pres -> Chan', 'Chan -> Pres', 'Clockwise', 'Counterclockwise'},\n\tfascistCards = 11,\n\tgreyCards = 0,\n\tgameType = 0, -- [0 Original, 2 Custom]\n\tliberalCards = 6,\n\tnoteType = 1, -- [1 Dark wood, 2 Light wood, 3 Red wood, 4 Black plastic, 5 Board image, 6 Swiss cheese, 7 Private only, 8 Cooperative]\n\tpolicySafety = true,\n\tscriptedVoting = true,\n\tshufflePlayers = false,\n\tshuffleHost = true,\n\tvoteHistory = false,\n\tzoneType = 4 -- [1 None, 2 Small, 3 Gap (version 1), 4 Gap (version 2), 5 Large, 6 11-12 Players]\n}\nplayers = {}\nplayerRoleCardGuids = {}\nplayerStatusButtonGuids = {}\nplayerStatus = { --[1 Board, 2 Not Hitler, 3 Vote Only, 4 Silenced, 5 Dead, 6 Dead not Hitler]\n\tWhite = 1,\n\tBrown = 1,\n\tRed = 1,\n\tOrange = 1,\n\tYellow = 1,\n\tGreen = 1,\n\tTeal = 1,\n\tBlue = 1,\n\tPurple = 1,\n\tPink = 1,\n\tTan = 1,\n\tMaroon = 1\n}\nroles = {}\nstarted = nil\ntext = {\n\thitler = 'Hitler',\n\tliberal = 'Liberal',\n\tliberalAbbr = 'Liberal',\n\tliberalArticle = 'a',\n\tliberalLetter = 'L',\n\tfascist = 'Fascist',\n\tfascistAbbr = 'Fascist',\n\tfascistArticle = 'a',\n\tfascistLetter = 'F',\n\tgrey = 'Grey',\n\tgreyAbbr = 'Grey',\n\tgreyArticle = 'a',\n\tgreyLetter = 'G',\n\tpolicy = 'policy'\n}\nvoteNotes = ''\nvoteNotebook = ''\n\n-- Called when a game finishes loading\nfunction onLoad(saveString)\n\tif not (saveString == '') then\n\t\tlocal save = JSON.decode(saveString)\n\t\tactivePowerColor = save['a']\n\t\tbannerGuids = save['b']\n\t\tbulletInfo = save['bi']\n\t\tfascists = save['f']\n\t\tforcePres = save['fp']\n\t\tgreyAvatarGuids = save['gag']\n\t\tgreyPlayerSteamIds = save['gp']\n\t\tgreyPlayerHandGuids = save['gphg']\n\t\thitler = save['h']\n\t\timprisonInfo = save['ii']\n\t\tinspected = save['in']\n\t\tjaCardGuids = save['ja']\n\t\tlastFascistPlayed = save['lfp']\n\t\tlastLiberalPlayed = save['llp']\n\t\tlastChan = save['lc']\n\t\tlastPres = save['lp']\n\t\tlastVote = save['lv']\n\t\tmainNotes = save['mn']\n\t\tneinCardGuids = save['nein']\n\t\tnotate = save['note']\n\t\tnoteTakerNotes = save['ntn']\n\t\tnoteTakerCurrLine = save['ntcl']\n\t\toptions = save['o']\n\t\tplayers = save['p']\n\t\tplayerRoleCardGuids = save['prcg']\n\t\tplayerStatus = save['ps']\n\t\tplayerStatusButtonGuids = save['psbg']\n\t\troles = save['r']\n\t\tstarted = save['s']\n\t\ttext = save['t']\n\t\tvoteNotes = save['vn']\n\t\tvoteNotebook = save['vnb']\n\tend\n\talwaysInit()\n\tif not started then\n\t\tmainNotes = '[FFFF00]Secret Hitler: Consolidator Edition\\n' ..\n\t\t\t\t\t\t'Version ' ..  UPDATE_VERSION .. ' (' .. string.len(Global.getLuaScript()) .. ')\\n' ..\n\t\t\t\t\t\t'\\n[-]Based on the board game:\\n\\n[FF0000]Secret Hitler[-]\\ndesigned by\\n[0080F8]Max Temkin[-],\\n[0080F8]Mike Boxleiter[-],\\n[0080F8]Tommy Maranges[-]\\nand Illustrated by\\n[0080F8]Mackenzie Schubert.[-]\\n\\n' ..\n\t\t\t\t\t\t'Check the notebook for additional\\ninformation and subscribe on the\\nworkshop to make sure you have the\\nlatest version.\\n\\n' ..\n\t\t\t\t\t\t'Only the president can draw cards.\\n\\nTo topdeck a card move the election tracker\\nto the \\34REVEAL & PASS TOP POLICY\\34 circle.\\n\\n'\n\t\tsetNotes(mainNotes)\n\t\tlocal status, err = pcall(init)\n\t\tif not status then\n\t\t\tprintToAll('ERROR LOADING: ' .. err, {1,0,0})\n\t\tend\n\t\tsettingsPannelMakeButtons()\n\t\trefreshBoardCards()\n\tend\n\tif not noteTakerCurrLine or noteTakerCurrLine == 0 then\n\t\tnoteTakerNotes = {}\n\t\tnoteTakerCurrLine = 0\n\t\taddNewLine()\n\tend\nend\n\nfunction onSave()\n\tlocal save = {}\n\tsave['a'] = activePowerColor\n\tsave['b'] = bannerGuids\n\tsave['bi'] = bulletInfo\n\tsave['f'] = fascists\n\tsave['fp'] = forcePres\n\tsave['gag'] = greyAvatarGuids\n\tsave['gp'] = greyPlayerSteamIds\n\tsave['gphg'] = greyPlayerHandGuids\n\tsave['h'] = hitler\n\tsave['ii'] = imprisonInfo\n\tsave['in'] = inspected\n\tsave['ja'] = jaCardGuids\n\tsave['lfp'] = lastFascistPlayed\n\tsave['llp'] = lastLiberalPlayed\n\tsave['lc'] = lastChan\n\tsave['lp'] = lastPres\n\tsave['lv'] = lastVote\n\tsave['mn'] = mainNotes\n\tsave['nein'] = neinCardGuids\n\tsave['note'] = notate\n\tsave['ntn'] = noteTakerNotes\n\tsave['ntcl'] = noteTakerCurrLine\n\tsave['o'] = options\n\tsave['p'] = players\n\tsave['prcg'] = playerRoleCardGuids\n\tsave['ps'] = playerStatus\n\tsave['psbg'] = playerStatusButtonGuids\n\tsave['r'] = roles\n\tsave['s'] = started\n\tsave['t'] = text\n\tsave['vn'] = voteNotes\n\tsave['vnb'] = voteNotebook\n\tlocal saveString = JSON.encode(save)\n\n\treturn saveString\nend\n\nfunction refreshHiddenZones()\n\tfor _, player in pairs(MAIN_PLAYABLE_COLORS) do\n\t\tif options.zoneType == 1 then\n\t\t\t--Hide the hidden zone so we can still use it later\n\t\t\ttmpObj = getObjectFromGUID(HIDDEN_ZONE_GUIDS[player])\n\t\t\ttmpObj.setScale({0.01, 0.01, 0.01})\n\t\t\tlocal colorToNumber = {White = 1, Brown = 2, Red = 3, Orange = 4, Yellow = 5, Green = 6, Teal = 7, Blue = 8, Purple = 9, Pink = 10}\n\t\t\ttmpObj.setPosition({100, 100, 100 + colorToNumber[player] * 2})\n\t\telseif options.zoneType == 2 then\n\t\t\ttmpObj = getObjectFromGUID(HIDDEN_ZONE_GUIDS[player])\n\t\t\ttmpObj.setScale({15.3268776, 5.1, 6.35014629})\n\t\t\tforceObjectToPlayer(tmpObj, player, {forward = 0, right = 0, up = 0, forceHeight = 3.51}, NO_ROT)\n\t\telseif options.zoneType == 3 then\n\t\t\tlocal pos = {White = {29.65, 3.51, -32.75}, Brown = {0, 3.51, -32.75}, Red = {-29.65, 3.51, -32.75}, Orange = {-50.2, 3.51, -19.25}, Yellow = {-50.2, 3.51, 19.25}, Green = {-29.65, 3.51, 32.75}, Teal = {0, 3.51, 32.75}, Blue = {29.65, 3.51, 32.75}, Purple = {50.2, 3.51, 19.25}, Pink = {50.2, 3.51, -19.25}}\n\t\t\tlocal scale = {White = {28.4, 5.1, 10.1}, Brown = {28.4, 5.1, 10.1}, Red = {28.4, 5.1, 10.1}, Orange = {9.55, 5.1, 37.25}, Yellow = {9.55, 5.1, 37.25}, Green = {28.4, 5.1, 10.1}, Teal = {28.4, 5.1, 10.1}, Blue = {28.4, 5.1, 10.1}, Purple = {9.55, 5.1, 37.25}, Pink = {9.55, 5.1, 37.25}}\n\n\t\t\ttmpObj = getObjectFromGUID(HIDDEN_ZONE_GUIDS[player])\n\t\t\ttmpObj.setPosition(pos[player])\n\t\t\ttmpObj.setScale(scale[player])\n\t\t\ttmpObj.setRotation(NO_ROT)\n\t\telseif options.zoneType == 4 then\n\t\t\tlocal pos = {White = {29.65, 3.51, -31.9}, Brown = {0, 3.51, -31.9}, Red = {-29.65, 3.51, -31.9}, Orange = {-50.2, 3.51, -19.25}, Yellow = {-50.2, 3.51, 19.25}, Green = {-29.65, 3.51, 31.9}, Teal = {0, 3.51, 31.9}, Blue = {29.65, 3.51, 31.9}, Purple = {50.2, 3.51, 19.25}, Pink = {50.2, 3.51, -19.25}}\n\t\t\tlocal scale = {White = {28.4, 5.1, 11.8}, Brown = {28.4, 5.1, 11.8}, Red = {28.4, 5.1, 11.8}, Orange = {9.55, 5.1, 37.25}, Yellow = {9.55, 5.1, 37.25}, Green = {28.4, 5.1, 11.8}, Teal = {28.4, 5.1, 11.8}, Blue = {28.4, 5.1, 11.8}, Purple = {9.55, 5.1, 37.25}, Pink = {9.55, 5.1, 37.25}}\n\n\t\t\ttmpObj = getObjectFromGUID(HIDDEN_ZONE_GUIDS[player])\n\t\t\ttmpObj.setPosition(pos[player])\n\t\t\ttmpObj.setScale(scale[player])\n\t\t\ttmpObj.setRotation(NO_ROT)\n\t\telseif options.zoneType == 5 then\n\t\t\tlocal pos = {White = {29.3, 3.51, -31.9}, Brown = {0, 3.51, -31.9}, Red = {-29.3, 3.51, -31.9}, Orange = {-49.4, 3.51, -19}, Yellow = {-49.4, 3.51, 19}, Green = {-29.3, 3.51, 31.9}, Teal = {0, 3.51, 31.9}, Blue = {29.3, 3.51, 31.9}, Purple = {49.4, 3.51, 19}, Pink = {49.4, 3.51, -19}}\n\t\t\tlocal scale = {White = {29.3, 5.1, 11.8}, Brown = {29.3, 5.1, 11.8}, Red = {29.3, 5.1, 11.8}, Orange = {10.8, 5.1, 38.0}, Yellow = {10.8, 5.1, 38.0}, Green = {29.3, 5.1, 11.8}, Teal = {29.3, 5.1, 11.8}, Blue = {29.3, 5.1, 11.8}, Purple = {10.8, 5.1, 38.0}, Pink = {10.8, 5.1, 38.0}}\n\n\t\t\ttmpObj = getObjectFromGUID(HIDDEN_ZONE_GUIDS[player])\n\t\t\ttmpObj.setPosition(pos[player])\n\t\t\ttmpObj.setScale(scale[player])\n\t\t\ttmpObj.setRotation(NO_ROT)\n\t\telseif options.zoneType == 6 then\n\t\t\tlocal pos = {White = {-29.3, 3.51, -49.4}, Brown = {-49.4, 3.51, -29.3}, Red = {-49.4, 3.51, 0}, Orange = {-49.4, 3.51, 29.3}, Yellow = {-29.3, 3.51, 49.4}, Green = {0, 3.51, 49.4}, Teal = {29.3, 3.51, 49.4}, Blue = {49.4, 3.51, 29.3}, Purple = {49.4, 3.51, 0}, Pink = {49.4, 3.51, -29.3}}\n\t\t\tlocal scale = {White = {28.4, 5.1, 10.8}, Brown = {10.8, 5.1, 28.4}, Red = {10.8, 5.1, 28.4}, Orange = {10.8, 5.1, 28.4}, Yellow = {28.4, 5.1, 10.8}, Green = {28.4, 5.1, 10.8}, Teal = {28.4, 5.1, 10.8}, Blue = {10.8, 5.1, 28.4}, Purple = {10.8, 5.1, 28.4}, Pink = {10.8, 5.1, 28.4}}\n\n\t\t\ttmpObj = getObjectFromGUID(HIDDEN_ZONE_GUIDS[player])\n\t\t\ttmpObj.setPosition(pos[player])\n\t\t\ttmpObj.setScale(scale[player])\n\t\t\ttmpObj.setRotation(NO_ROT)\n\n\t\t\tlocal handPos = {White = {-29.3, 4.46, -51.66}, Brown = {-51.66, 4.46, -29.3}, Red = {-51.66, 4.46, 0}, Orange = {-51.66, 4.46, 29.3}, Yellow = {-29.3, 4.46, 51.66}, Green = {0, 4.46, 51.66}, Teal = {29.3, 4.46, 51.66}, Blue = {51.66, 4.46, 29.3}, Purple = {51.66, 4.46, 0}, Pink = {51.66, 4.46, -29.3}}\n\t\t\tlocal handRot = {White = {0, 0, 0}, Brown = {0, 90, 0}, Red = {0, 90, 0}, Orange = {0, 90, 0}, Yellow = {0, 180, 0}, Green = {0, 180, 0}, Teal = {0, 180, 0}, Blue = {0, 270, 0}, Purple = {0, 270, 0}, Pink = {0, 270, 0}}\n\t\t\tlocal handParams = {\n\t\t\t\tscale = {11.66, 5.4, 4.87}\n\t\t\t}\n\n\t\t\thandParams.position = handPos[player]\n\t\t\thandParams.rotation = handRot[player]\n\t\t\tPlayer[player].setHandTransform(handParams)\n\n\t\t\ttmpObj = getObjectFromGUID(policySafety_zone_guids[player])\n\t\t\tforceObjectToPlayer(tmpObj, player, {forward = 0, right = 0, up = 0, forceHeight = 3.51}, NO_ROT)\n\t\tend\n\tend\n\tif options.zoneType == 6 then\n\t\tbroadcastToAll('Alpha release ... still work in progress.', {1,1,1})\n\t\tlocal params = {type = 'Custom_Model', sound = false}\n\t\tlocal tableExt = {}\n\t\tlocal custom = {\n\t\t\tmesh = 'http://cloud-3.steamusercontent.com/ugc/933812827275737908/4A39E65F99D7809D6055BED44C2B2AF420776850/',\n\t\t\tdiffuse = 'http://cloud-3.steamusercontent.com/ugc/933812827275738471/DBC87C418A1CBD45F4EB56EB0F63B65E7F042F1F/',\n\t\t\ttype = 4,\n\t\t\tmaterial = 1,\n\t\t\tspecular_color = {223/255, 207/255, 190/255},\n\t\t\tspecular_intensity = 0.05,\n\t\t\tspecular_sharpness = 6.3\n\t\t}\n\t\tfor i = 1, 2 do\n\t\t\ttableExt[i] = spawnObject(params)\n\t\t\ttableExt[i].setCustomObject(custom)\n\t\t\ttableExt[i].setLock(true)\n\t\t\ttableExt[i].setRotation({0, 270, 0})\n\t\t\ttableExt[i].setScale({0.74, 1, 1})\n\t\t\ttableExt[i].setLuaScript(\n\t\t\t\t'function onLoad()\\r\\n' ..\n\t\t\t\t'\tself.interactable = false\\r\\n' ..\n\t\t\t\t'end\\r\\n')\n\t\tend\n\t\ttableExt[1].setPosition({0, 0.1, -46.2})\n\t\ttableExt[2].setPosition({0, 0.1, 46.2})\n\t\tparams = {\n\t\t\ttype = 'Custom_Assetbundle',\n\t\t\tscale = {14.2, 2.55, 5.4},\n\t\t\tcallback = 'greyPlayerHandCallback',\n\t\t\tsound = false\n\t\t}\n\t\tcustom = {\n\t\t\tassetbundle = 'http://cloud-3.steamusercontent.com/ugc/933813375181578705/3961A9B3B73895140CA5055A8745BEE4A3E39299/'\n\t\t}\n\t\tlocal playerHands = {}\n\t\tfor i, color in ipairs(GREY_PLAYABLE_COLORS) do\n\t\t\tplayerHands[i] = spawnObject(params)\n\t\t\tplayerHands[i].setCustomObject(custom)\n\t\t\tplayerHands[i].setColorTint(GREY_PLAYABLE_COLORS_RGB[color])\n\t\t\tplayerHands[i].setDescription(color .. ' Hand')\n\t\t\tplayerHands[i].setLock(true)\n\t\tend\n\t\tplayerHands[1].setPosition({29.3, 3.5, -49.4}) -- Tan\n\t\tplayerHands[2].setPosition({0, 3.5, -49.4}) -- Maroon\n\t\trefreshUI()\n\tend\nend\n\nfunction onObjectEnterScriptingZone(zone, enterObject)\n\tif enterObject then\n\t\tif zone.guid == topdeck_zone_guid and enterObject.guid == ELECTION_TRACKER_GUID then\n\t\t\teditButtonByLabel(drawPileBoard_guid, 'Draw 3', 'Topdeck', 'topdeckCard')\n\t\tend\n\tend\nend\n\nfunction onObjectLeaveScriptingZone(zone, leaveObject)\n\tif leaveObject then\n\t\tif zone.guid == topdeck_zone_guid and leaveObject.guid == ELECTION_TRACKER_GUID then\n\t\t\teditButtonByLabel(drawPileBoard_guid, 'Topdeck', 'Draw 3', 'drawThree')\n\t\telseif options.policySafety then\n\t\t\tif inTable(policySafety_zone_guids, zone.guid) and leaveObject.tag == 'Card' and\n\t\t\t\t(leaveObject.getDescription() == FASCISTPOLICY_STRING or\n\t\t\t\t leaveObject.getDescription() == LIBERALPOLICY_STRING) then\n\t\t\t\tif not leaveObject.is_face_down and leaveObject.held_by_color then\n\t\t\t\t\tbroadcastToColor('Keep your policy cards face down\\nwhen removing them from your hand!', leaveObject.held_by_color, {1, 0, 0})\n\t\t\t\t\tleaveObject.deal(1, leaveObject.held_by_color)\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\nend\n\nfunction alwaysInit()\n\tlocal tmpObj\n\n\t-- Initialize the pseudo random number generator\n\tmath.randomseed(os.time())\n\n\trefreshUI()\n\trefreshStatusButtons()\n\trefreshExpansionButtons()\n\n\tlocal drawPileBoard = getObjectFromGUID(drawPileBoard_guid)\n\tif drawPileBoard then\n\t\tlocal button = {\n\t\t\tclick_function = 'drawThree',\n\t\t\tlabel = 'Draw 3',\n\t\t\tfunction_owner = Global,\n\t\t\tposition = {0, 0.14, 3.7},\n\t\t\trotation = {0, 0, 0},\n\t\t\twidth = 2700,\n\t\t\theight = 1300,\n\t\t\tfont_size = 650\n\t\t}\n\t\tdrawPileBoard.createButton(button)\n\tend\n\n\tfor _, cardGUID in ipairs(extraRole_card_guids) do\n\t\tlocal card = getObjectFromGUID(cardGUID)\n\t\tif card then card.interactable = false\tend\n\tend\n\ttmpObj = getObjectFromGUID(fakeMembership_card_guid)\n\tif tmpObj then\ttmpObj.interactable = false end\n\ttmpObj = getObjectFromGUID(fascistMembership_card_guid)\n\tif tmpObj then\ttmpObj.interactable = false end\n\ttmpObj = getObjectFromGUID(liberalMembership_card_guid)\n\tif tmpObj then\ttmpObj.interactable = false end\nend\n\nfunction refreshStatusButtons()\n\tlocal tmpObj\n\tlocal buttonGUID\n\n\tfor _, buttonGUID in ipairs(playerStatusButtonGuids) do\n\t\ttmpObj = getObjectFromGUID(buttonGUID)\n\t\tif tmpObj then\n\t\t\ttmpObj.clearButtons()\n\t\t\tlocal ownerColor = tmpObj.getName()\n\t\t\tlocal button = {\n\t\t\t\tfunction_owner = self,\n\t\t\t\tposition = {0, 0.2, 0},\n\t\t\t\trotation = {0, 180, 0},\n\t\t\t\twidth = 2900,\n\t\t\t\theight = 1500,\n\t\t\t\tfont_size = 600,\n\t\t\t\tclick_function = 'changePlayerStatus'\n\t\t\t}\n\t\t\tif _G.playerStatus[ownerColor] == 1 then\n\t\t\t\tif options.zoneType == 6 then\n\t\t\t\t\tlocal greenColors = {'Brown', 'Red', 'Blue', 'Purple'}\n\t\t\t\t\tif inTable(greenColors, ownerColor) then\n\t\t\t\t\t\tbutton.color = boardGreen_rgb\n\t\t\t\t\telse\n\t\t\t\t\t\tbutton.color = boardBrown_rgb\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\tbutton.color = boardGreen_rgb\n\t\t\t\tend\n\t\t\t\tbutton.label = ''\n\t\t\telseif _G.playerStatus[ownerColor] == 2 then\n\t\t\t\tbutton.color = stringColorToRGB('Green')\n\t\t\t\tbutton.label = 'Not ' .. text.hitler\n\t\t\telseif _G.playerStatus[ownerColor] == 3 then\n\t\t\t\tbutton.color = stringColorToRGB('Yellow')\n\t\t\t\tbutton.label = 'Vote Only'\n\t\t\telseif _G.playerStatus[ownerColor] == 4 then\n\t\t\t\tbutton.color = stringColorToRGB('Blue')\n\t\t\t\tbutton.label = 'Silenced'\n\t\t\telseif _G.playerStatus[ownerColor] == 5 then\n\t\t\t\tbutton.color = stringColorToRGB('Red')\n\t\t\t\tbutton.label = bulletInfo.status\n\t\t\telseif _G.playerStatus[ownerColor] == 6 then\n\t\t\t\tbutton.color = stringColorToRGB('Red')\n\t\t\t\tbutton.label = bulletInfo.status .. '\\nNot ' .. text.hitler\n\t\t\telse\n\t\t\t\tbutton.color = stringColorToRGB('Red')\n\t\t\t\tbutton.label = imprisonInfo.status\n\t\t\t\tbutton.font_size = 550\n\t\t\tend\n\t\t\ttmpObj.createButton(button)\n\t\tend\n\tend\nend\n\nfunction refreshExpansionButtons()\n\tlocal fasBoard = getObjectFromGUID(fasPannel_guid)\n\tif fasBoard then\n\t\tfasBoard.clearButtons()\n\t\tlocal button = {\n\t\t\tclick_function = 'expansionOptionStatusSwapGov',\n\t\t\tfunction_owner = self,\n\t\t\tposition = {12, 0.2, 6},\n\t\t\trotation = {0, 0, 0},\n\t\t\twidth = 2600,\n\t\t\theight = 800,\n\t\t\tfont_size = 360\n\t\t}\n\t\tif bit32.band(options.expansionOptionStatus, 1) == 1 then\n\t\t\tbutton.font_color = {0, 0, 0}\n\t\t\tbutton.color =  stringColorToRGB('Orange')\n\t\t\tbutton.label = options.expansionOptionText[2]\n\t\telse\n\t\t\tbutton.font_color = stringColorToRGB('White')\n\t\t\tbutton.color =  boardGreen_rgb\n\t\t\tbutton.label = options.expansionOptionText[1]\n\t\tend\n\t\tif bit32.band(options.expansionOptionEnabled, 1) == 1 then\n\t\t\tfasBoard.createButton(button)\n\t\tend\n\n\t\tbutton.click_function = 'expansionOptionStatusReverse'\n\t\tbutton.position = {-12, 0.2, 6}\n\t\tbutton.width = 2800\n\t\tif bit32.band(options.expansionOptionStatus, 2) == 2 then\n\t\t\tbutton.font_color = {0, 0, 0}\n\t\t\tbutton.color =  stringColorToRGB('Orange')\n\t\t\tbutton.label = options.expansionOptionText[4]\n\t\telse\n\t\t\tbutton.font_color = stringColorToRGB('White')\n\t\t\tbutton.color =  boardGreen_rgb\n\t\t\tbutton.label = options.expansionOptionText[3]\n\t\tend\n\t\tif bit32.band(options.expansionOptionEnabled, 2) == 2 then\n\t\t\tfasBoard.createButton(button)\n\t\tend\n\tend\nend\n\nfunction init()\n\tlocal tmpObj\n\n\ttmpObj = getObjectFromGUID(hitler_deck_guid)\n\tif tmpObj == nil then error('Hitler Deck') end\n\ttmpObj.interactable = false\n\ttmpObj.setLock(true)\n\n\tfor i = 1, #fascist_deck_guids do\n\t\ttmpObj = getObjectFromGUID(fascist_deck_guids[i])\n\t\tif tmpObj == nil then error('Fascist Deck ' .. fascist_deck_guids[i]) end\n\t\ttmpObj.interactable = false\n\t\ttmpObj.setLock(true)\n\tend\n\n\tfor i = 1, #liberal_deck_guids do\n\t\ttmpObj = getObjectFromGUID(liberal_deck_guids[i])\n\t\tif tmpObj == nil then error('Liberal Deck ' .. liberal_deck_guids[i]) end\n\t\ttmpObj.interactable = false\n\t\ttmpObj.setLock(true)\n\tend\n\n\ttmpObj = getObjectFromGUID(fascist_deck_extra_guid)\n\ttmpObj.interactable = false\n\ttmpObj.setLock(true)\n\n\ttmpObj = getObjectFromGUID(liberal_deck_extra_guid)\n\ttmpObj.interactable = false\n\ttmpObj.setLock(true)\n\n\ttmpObj = getObjectFromGUID(PRESIDENT_GUID)\n\tif tmpObj == nil then error('President') end\n\ttmpObj.interactable = false\n\ttmpObj.setLock(true)\n\ttmpObj = getObjectFromGUID(CHANCELOR_GUID)\n\tif tmpObj == nil then error('Chancellor') end\n\ttmpObj.interactable = false\n\ttmpObj.setLock(true)\n\ttmpObj = getObjectFromGUID(PREV_PRESIDENT_GUID)\n\tif tmpObj == nil then error('Prev President') end\n\ttmpObj.setLock(true)\n\ttmpObj = getObjectFromGUID(PREV_CHANCELOR_GUID)\n\tif tmpObj == nil then error('Prev Chancellor') end\n\ttmpObj.setLock(true)\n\n\ttmpObj = getObjectFromGUID(ELECTION_TRACKER_GUID)\n\tif tmpObj == nil then error('Election Tracker') end\n\ttmpObj.setLock(true)\n\n\tfor i, player in ipairs(MAIN_PLAYABLE_COLORS) do\n\t\ttmpObj = getObjectFromGUID(HIDDEN_ZONE_GUIDS[player])\n\t\tif tmpObj == nil then error(player .. ' Hidden Zone') end\n\tend\n\n\t--Expansion\n\ttmpObj = getDeckFromZoneByGUID(ABILITIESPILE_ZONE_GUID)\n\tif tmpObj then\ttmpObj.interactable = false end\n\ttmpObj = getDeckFromZoneByGUID(EFFECTSPILE_ZONE_GUID)\n\tif tmpObj then\ttmpObj.interactable = false end\n\n\tif options.gameType ~= 2 then\n\t\t--delete board cards\n\t\ttestActionUsedPolicyZones(\n\t\t\tfunction(p) return isBoardCard(p) or isPolicyNotUsedCard(p) end,\n\t\t\tfunction(p) p.destruct() end,\n\t\t\tnil)\n\tend\nend\n\nfunction onChat(messageIn, player)\n\tlocal message = string.gsub(messageIn, '%s+', ' ')\n\tlocal messageTable = string.tokenize(message, ' ')\n\tmessageTable[1] = string.lower(messageTable[1])\n\n\tif messageTable[1] == 'r' then\n\t\tif started then\n\t\t\tplayer:print(tellRole(player.color))\n\t\telse\n\t\t\tplayer:print('[FF0000]ERROR: Game not started.[-]')\n\t\tend\n\t\treturn false\n\telseif messageTable[1] == 'l' then\n\t\tplayer:print(lastVote)\n\t\treturn false\n\telseif messageTable[1] == 'h' then\n\t\tif options.voteHistory then\n\t\t\tplayer:print(string.gsub(voteNotebook, '\\n$', ''))\n\t\telse\n\t\t\tplayer:print('[FF0000]ERROR: Full vote history is not enabled.[-]')\n\t\tend\n\t\treturn false\n\telseif messageTable[1] == 'n' then\n\t\tplayer:print(string.gsub(noteTakerNotesString(100, false, true), '\\n$', ''))\n\t\treturn false\n\telseif messageTable[1] == 'o' then\n\t\tplayer:print(string.gsub(tableToString(options), '\\n$', ''))\n\t\treturn false\n\telseif messageTable[1] == 'v' then\n\t\tplayer:print(versionInfo())\n\t\treturn false\n\telseif messageTable[1] == 'c' and (player.admin or inTable(trusted_players, player.steam_id)) then\n\t\tif messageTable[2] then\n\t\t\tmessageTable[2] = string.titlecase(messageTable[2])\n\t\t\tif inTable(MAIN_PLAYABLE_COLORS, messageTable[2]) or messageTable[2] == 'Black' or messageTable[2] == 'Grey' then\n\t\t\t\tif messageTable[3] then\n\t\t\t\t\tlocal playerFound = getPlayerByNameSteamID(messageTable[3], Player.getPlayers())\n\t\t\t\t\tif playerFound then\n\t\t\t\t\t\tplayerFound:changeColor(messageTable[2])\n\t\t\t\t\telse\n\t\t\t\t\t\tplayer:print('ERROR: ' .. messageTable[3] .. ' not found.', {1, 0, 0})\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\tplayer:changeColor(messageTable[2])\n\t\t\t\tend\n\t\t\telse\n\t\t\t\tplayer:print('ERROR: Unknown color ' .. messageTable[2] .. '.', {1, 0, 0})\n\t\t\tend\n\t\telse\n\t\t\tplayer:print('ERROR: No color given.', {1, 0, 0})\n\t\tend\n\t\treturn false\n\telseif messageTable[1] == 'promote' and (player.admin or inTable(trusted_players, player.steam_id)) then\n\t\tif messageTable[2] then\n\t\t\tlocal playerFound = getPlayerByNameSteamID(messageTable[2], Player.getPlayers())\n\t\t\tif playerFound then\n\t\t\t\tplayerFound.promote()\n\t\t\telse\n\t\t\t\tplayer:print(messageTable[2] .. ' not found.', {1, 0, 0})\n\t\t\tend\n\t\telse\n\t\t\tplayer.promote()\n\t\tend\n\t\treturn false\n\telseif messageTable[1] == 'kick' and (player.admin or inTable(trusted_players, player.steam_id)) then\n\t\tif messageTable[2] then\n\t\t\tlocal playerFound = getPlayerByNameSteamID(messageTable[2], Player.getPlayers())\n\t\t\tif playerFound then\n\t\t\t\tplayerFound.kick()\n\t\t\telse\n\t\t\t\tplayer:print(messageTable[2] .. ' not found.', {1, 0, 0})\n\t\t\tend\n\t\tend\n\t\treturn false\n\telseif messageTable[1] == 'list' and (player.admin or inTable(trusted_players, player.steam_id)) then\n\t\tfor _, p in pairs(Player.getPlayers()) do\n\t\t\tplayer:print(p.steam_name .. ' ' .. p.steam_id)\n\t\tend\n\t\treturn false\n\telseif messageTable[1] == 'help' then\n\t\tplayer:print(chatHelp(player.admin))\n\t\treturn false\n\tend\n\n\tfor _, color in pairs(GREY_PLAYABLE_COLORS) do\n\t\tif greyPlayerSteamIds[color] == player.steam_id then\n\t\t\tprintToAll(\"[\" .. stringColorToHex(color) .. \"]\" .. player.steam_name .. \":[-] \" .. messageIn)\n\t\t\treturn false\n\t\tend\n\tend\nend\n\nfunction chatHelp(admin)\n\tlocal msg = 'chat commands:\\n' ..\n\t\t\t\t\t'   r - All the role information you can know\\n' ..\n\t\t\t\t\t'   l - Shows the last vote\\n' ..\n\t\t\t\t\t'   h - Vote history\\n' ..\n\t\t\t\t\t'   n - All of the notes\\n' ..\n\t\t\t\t\t'   o - current options\\n' ..\n\t\t\t\t\t'   v - Version info\\n' ..\n\t\t\t\t\t'   help - This message'\n\tif admin then\n\t\tmsg = msg .. '\\nadmin chat commands:\\n' ..\n\t\t\t\t\t'   c color [name* or steam id] - sets player to color\\n' ..\n\t\t\t\t\t'   promote [name* or steam id] - promotes/demotes player\\n' ..\n\t\t\t\t\t'   kick name* or steam id - kicks the player\\n' ..\n\t\t\t\t\t'   list - lists steam ids\\n' ..\n\t\t\t\t\t'   * partial name allowed but must be distinct'\n\tend\n\n\treturn msg\nend\n\nfunction settingsPannelMakeButtons()\n\tlocal settingsPannel = getObjectFromGUID(settingsPannel_guid)\n\tif settingsPannel then\n\t\tsettingsPannel.clearButtons()\n\n\t\tlocal buttonParam = {\n\t\t\tfont_color = {0, 0, 0},\n\t\t\trotation = {0, 0, 0},\n\t\t\twidth = 0,\n\t\t\theight = 0,\n\t\t\tfont_size = 480,\n\t\t\tfunction_owner = self,\n\t\t\tclick_function = 'nullFunction'\n\t\t}\n\t\tlocal startX = -6.1\n\t\tlocal offsetZ = 1.32\n\n\t\tlocal startZ = -22.9\n\t\tbuttonParam.label = '[u]Game Type[/u]'\n\t\tbuttonParam.position = {0, 0.2, startZ - 1.4}\n\t\tsettingsPannel.createButton(buttonParam)\n\t\tmakeSquareButtonLabel(settingsPannel, options.gameType == 0, radio_string, '', 'Original', 'gameTypeZero', {startX, 0.2, startZ}, 2.45, not customOnly)\n\t\tmakeSquareButtonLabel(settingsPannel, options.gameType == 2, radio_string, '', 'Custom', 'gameTypeTwo', {startX, 0.2, startZ + offsetZ * 1}, 2.3, true)\n\t\tmakeDecIncButtonsLabel(settingsPannel, options.liberalCards, '-', '+', 'Liberal Cards', 'decLiberalCards', 'incLiberalCards', {startX + 1.3, 0.2, startZ + offsetZ * 2}, 6.1, false, options.gameType == 2)\n\t\tmakeDecIncButtonsLabel(settingsPannel, options.fascistCards, '-', '+', 'Fascist Cards', 'decFascistCards', 'incFascistCards', {startX + 1.3, 0.2, startZ + offsetZ * 3}, 6.1, false, options.gameType == 2)\n\t\tmakeDecIncButtonsLabel(settingsPannel, options.greyCards, '-', '+', 'Grey Cards', 'decGreyCards', 'incGreyCards', {startX + 1.3, 0.2, startZ + offsetZ * 4}, 5.65, false, options.gameType == 2)\n\n\t\tstartZ = -14.5\n\t\tbuttonParam.label = '[u]Note Taker[/u]'\n\t\tbuttonParam.position = {0, 0.2, startZ - 1.4}\n\t\tsettingsPannel.createButton(buttonParam)\n\t\tlocal labels = {'Dark wood', 'Light wood (tintable)', 'Red wood (tintable)', 'Black plastic', 'Board image', 'Swiss cheese', 'Private only', 'Cooperative'}\n\t\tlocal offsets = {4.4, 6.6, 6.3, 4.7, 4.7, 4.7, 4.6, 4.6}\n\t\tmakeDecIncButtonsLabel(settingsPannel, options.noteType, '-', '+', labels, 'decNoteType', 'incNoteType', {startX, 0.2, startZ}, offsets, false, true)\n\n\t\tstartZ = -11.6\n\t\tbuttonParam.label = '[u]Hidden Zones[/u]'\n\t\tbuttonParam.position = {0, 0.2, startZ - 1.4}\n\t\tsettingsPannel.createButton(buttonParam)\n\t\tlabels = {'None', 'Small', 'Gap (version 1)', 'Gap (version 2)', 'Large', '11-12 Players'}\n\t\toffsets = {3.2, 3.3, 5.3, 5.35, 3.3, 4.8}\n\t\tmakeDecIncButtonsLabel(settingsPannel, options.zoneType, '-', '+', labels, 'decZoneType', 'incZoneType', {startX, 0.2, startZ}, offsets, false, options.zoneType ~= 6)\n\n\t\tstartZ = -8.5\n\t\tbuttonParam.label = '[u]Other Options[/u]'\n\t\tbuttonParam.position = {0, 0.2, startZ - 1.4}\n\t\tsettingsPannel.createButton(buttonParam)\n\t\tmakeSquareButtonLabel(settingsPannel, options.dealRoleCards, check_string, '', 'Deal role', 'roleCardFlip', {startX, 0.2, startZ}, 2.7, true)\n\t\tmakeSquareButtonLabel(settingsPannel, options.dealPartyCards, check_string, '', 'Deal party membership', 'partyCardFlip', {startX, 0.2, startZ + offsetZ}, 5.8, true)\n\t\tmakeSquareButtonLabel(settingsPannel, options.scriptedVoting, check_string, '', 'Scripted voting', 'scriptedVotingFlip', {startX, 0.2, startZ + offsetZ * 2}, 4, true)\n\t\tmakeSquareButtonLabel(settingsPannel, options.autoNotate, check_string, '', 'Auto notate', 'autoNotateFlip', {startX, 0.2, startZ + offsetZ * 3}, 3.4, true)\n\t\tmakeSquareButtonLabel(settingsPannel, options.policySafety, check_string, '', 'Policy safety', 'policySafetyFlip', {startX, 0.2, startZ + offsetZ * 4}, 3.5, true)\n\t\tmakeSquareButtonLabel(settingsPannel, options.voteHistory, check_string, '', 'Vote history', 'voteHistoryFlip', {startX, 0.2, startZ + offsetZ * 5}, 3.4, true)\n\t\tmakeSquareButtonLabel(settingsPannel, options.shufflePlayers, check_string, '', 'Shuffle players', 'shufflePlayersFlip', {startX, 0.2, startZ + offsetZ * 6}, 4, true)\n\t\tmakeSquareButtonLabel(settingsPannel, options.shuffleHost, check_string, '', 'Shuffle host', 'shuffleHostFlip', {startX + 1.3, 0.2, startZ + offsetZ * 7}, 3.3, options.shufflePlayers)\n\n\t\t--Expansion\n\t\tlocal abilitiesDeck = getDeckFromZoneByGUID(ABILITIESPILE_ZONE_GUID)\n\t\tif abilitiesDeck then\n\t\t\tstartZ = 3.7\n\t\t\tbuttonParam.label = '[u]Fan Expansion[/u]'\n\t\t\tbuttonParam.position = {0, 0.2, startZ - 1.4}\n\t\t\tsettingsPannel.createButton(buttonParam)\n\t\t\tmakeDecIncButtonsLabel(settingsPannel, options.expansionAmount, '-', '+', 'Cards', 'decExpansionAmount', 'incExpansionAmount', {startX, 0.2, startZ}, 4.7, false, true)\n\t\t\tmakeSquareButtonLabel(settingsPannel, bit32.band(options.expansionOptionEnabled, 1) == 1, check_string, '', 'Swap government', 'expansionOptionEnabledSwapGov', {startX, 0.2, startZ + offsetZ}, 4.7, true)\n\t\t\tmakeSquareButtonLabel(settingsPannel, bit32.band(options.expansionOptionEnabled, 4) == 4, check_string, '', 'Swap power', 'expansionOptionEnabledSwapPower', {startX + 1.3, 0.2, startZ + offsetZ * 2}, 3.4, bit32.band(options.expansionOptionEnabled, 1) == 1)\n\t\t\tmakeSquareButtonLabel(settingsPannel, bit32.band(options.expansionOptionEnabled, 2) == 2, check_string, '', 'Reverse', 'expansionOptionEnabledReverse', {startX, 0.2, startZ + offsetZ * 3}, 2.4, true)\n\t\t\tmakeSquareButtonLabel(settingsPannel, bit32.band(options.expansionOptionEnabled, 8) == 8, check_string, '', 'Setup power abilities', 'expansionOptionEnabledSetupPowerAbilities', {startX, 0.2, startZ + offsetZ * 4}, 5.3, true)\n\t\tend\n\n\t\tbuttonParam = {\n\t\t\tclick_function = 'setupStart',\n\t\t\tlabel = 'Start',\n\t\t\tfunction_owner = self,\n\t\t\tposition = {0, 0.2, 23.5},\n\t\t\trotation = {0, 0, 0},\n\t\t\twidth = 3300,\n\t\t\theight = 1700,\n\t\t\tfont_size = 750\n\t\t}\n\t\tsettingsPannel.createButton(buttonParam)\n\telse\n\t\tprintToAll('ERROR: Settings pannel not found.', {1,0,0})\n\tend\nend\n\nfunction makeSquareButtonLabel(objectIn, valueIn, trueButtonTextIn, falseButtonTextIn, labelTextIn, clickFunctionIn, buttonPositionIn, textOffsetIn, enabledIn)\n\tlocal buttonParam = {\n\t\trotation = {0, 0, 0},\n\t\twidth = 600,\n\t\theight = 600,\n\t\tfont_size = 480,\n\t\tfunction_owner = self,\n\t\tclick_function = clickFunctionIn,\n\t\tposition = buttonPositionIn\n\t}\n\tlocal textParam = {\n\t\tlabel = labelTextIn,\n\t\tfont_color = {0, 0, 0},\n\t\trotation = {0, 0, 0},\n\t\twidth = 0,\n\t\theight = 0,\n\t\tfont_size = 480,\n\t\tfunction_owner = self,\n\t\tclick_function = 'nullFunction',\n\t\tposition = {buttonPositionIn[1] + textOffsetIn, buttonPositionIn[2], buttonPositionIn[3]}\n\t}\n\tif valueIn then\n\t\tbuttonParam.label = trueButtonTextIn\n\telse\n\t\tbuttonParam.label = falseButtonTextIn\n\tend\n\tif not enabledIn then\n\t\tbuttonParam.click_function = 'nullFunction'\n\t\tbuttonParam.color = stringColorToRGB('Grey')\n\t\tbuttonParam.font_color = {0.3, 0.3, 0.3}\n\t\ttextParam.font_color = {0.3, 0.3, 0.3}\n\tend\n\tobjectIn.createButton(buttonParam)\n\tobjectIn.createButton(textParam)\nend\n\nfunction makeDecIncButtonsLabel(objectIn, valueIn, decButtonTextIn, incButtonTextIn, labelTextIn, decFunctionIn, incFunctionIn, positionIn, textOffsetIn, showValueIn, enabledIn)\n\tlocal buttonParam = {\n\t\tfont_color = {0, 0, 0},\n\t\trotation = {0, 0, 0},\n\t\twidth = 0,\n\t\theight = 0,\n\t\tfont_size = 480,\n\t\tfunction_owner = self,\n\t\tclick_function = 'nullFunction'\n\t}\n\n\tlocal valueOffset\n\tif type(labelTextIn) == 'table' then\n\t\tvalueOffset = 0\n\t\tbuttonParam.label = labelTextIn[valueIn]\n\t\tbuttonParam.position = {positionIn[1] + textOffsetIn[valueIn], positionIn[2], positionIn[3]}\n\telse\n\t\tvalueOffset = 1.3\n\t\tbuttonParam.label = labelTextIn\n\t\tbuttonParam.position = {positionIn[1] + textOffsetIn, positionIn[2], positionIn[3]}\n\tend\n\tif not enabledIn then\n\t\tbuttonParam.font_color = {0.3, 0.3, 0.3}\n\tend\n\tobjectIn.createButton(buttonParam)\n\n\tif not enabledIn then\n\t\tbuttonParam.color = stringColorToRGB('Grey')\n\tend\n\tbuttonParam.label = decButtonTextIn\n\tbuttonParam.position = positionIn\n\tbuttonParam.width = 600\n\tbuttonParam.height = 600\n\tif enabledIn then\n\t\tbuttonParam.click_function = decFunctionIn\n\tend\n\tobjectIn.createButton(buttonParam)\n\n\tbuttonParam.label = incButtonTextIn\n\tbuttonParam.position = {positionIn[1] + 1.3 + valueOffset, positionIn[2], positionIn[3]}\n\tif enabledIn then\n\t\tbuttonParam.click_function = incFunctionIn\n\tend\n\tobjectIn.createButton(buttonParam)\n\n\tif valueOffset > 0 then\n\t\tbuttonParam.label = valueIn\n\t\tif enabledIn then\n\t\t\tbuttonParam.click_function = incFunctionIn\n\t\tend\n\t\tbuttonParam.position = {positionIn[1] + valueOffset, positionIn[2], positionIn[3]}\n\t\tobjectIn.createButton(buttonParam)\n\tend\nend\n\nfunction gameTypeZero(clickedObject, playerColor)\n\tif Player[playerColor].admin then\n\t\toptions.gameType = 0\n\t\toptions.fascistCards = 11\n\t\toptions.liberalCards = 6\n\t\toptions.greyCards = 0\n\t\trefreshBoardCards()\n\t\tsettingsPannelMakeButtons()\n\tend\nend\n\nfunction gameTypeTwo(clickedObject, playerColor)\n\tif Player[playerColor].admin then\n\t\toptions.gameType = 2\n\t\trefreshBoardCards()\n\t\tsettingsPannelMakeButtons()\n\tend\nend\n\nfunction decNoteType(clickedObject, playerColor)\n\tif Player[playerColor].admin then\n\t\tif options.noteType > 1 then\n\t\t\toptions.noteType = options.noteType - 1\n\t\tend\n\t\tsettingsPannelMakeButtons()\n\tend\nend\n\nfunction incNoteType(clickedObject, playerColor)\n\tif Player[playerColor].admin then\n\t\tif options.noteType < 8 then\n\t\t\toptions.noteType = options.noteType + 1\n\t\tend\n\t\tsettingsPannelMakeButtons()\n\tend\nend\n\nfunction decZoneType(clickedObject, playerColor)\n\tif Player[playerColor].admin then\n\t\tif options.zoneType > 1 then\n\t\t\toptions.zoneType = options.zoneType - 1\n\t\tend\n\t\trefreshHiddenZones()\n\t\tsettingsPannelMakeButtons()\n\tend\nend\n\nfunction incZoneType(clickedObject, playerColor)\n\tif Player[playerColor].admin then\n\t\tif options.zoneType < 6 then\n\t\t\toptions.zoneType = options.zoneType + 1\n\t\tend\n\t\trefreshHiddenZones()\n\t\tsettingsPannelMakeButtons()\n\tend\nend\n\nfunction roleCardFlip(clickedObject, playerColor)\n\tif Player[playerColor].admin then\n\t\toptions.dealRoleCards = not options.dealRoleCards\n\t\tsettingsPannelMakeButtons()\n\tend\nend\n\nfunction partyCardFlip(clickedObject, playerColor)\n\tif Player[playerColor].admin then\n\t\toptions.dealPartyCards = not options.dealPartyCards\n\t\tsettingsPannelMakeButtons()\n\tend\nend\n\nfunction scriptedVotingFlip(clickedObject, playerColor)\n\tif Player[playerColor].admin then\n\t\toptions.scriptedVoting = not options.scriptedVoting\n\t\tsettingsPannelMakeButtons()\n\tend\nend\n\nfunction autoNotateFlip(clickedObject, playerColor)\n\tif Player[playerColor].admin then\n\t\toptions.autoNotate = not options.autoNotate\n\t\tsettingsPannelMakeButtons()\n\tend\nend\n\nfunction policySafetyFlip(clickedObject, playerColor)\n\tif Player[playerColor].admin then\n\t\toptions.policySafety = not options.policySafety\n\t\tsettingsPannelMakeButtons()\n\tend\nend\n\nfunction voteHistoryFlip(clickedObject, playerColor)\n\tif Player[playerColor].admin then\n\t\toptions.voteHistory = not options.voteHistory\n\t\tsettingsPannelMakeButtons()\n\tend\nend\n\nfunction shufflePlayersFlip(clickedObject, playerColor)\n\tif Player[playerColor].admin then\n\t\toptions.shufflePlayers = not options.shufflePlayers\n\t\tsettingsPannelMakeButtons()\n\tend\nend\n\nfunction shuffleHostFlip(clickedObject, playerColor)\n\tif Player[playerColor].admin then\n\t\toptions.shuffleHost = not options.shuffleHost\n\t\tsettingsPannelMakeButtons()\n\tend\nend\n\nfunction expansionOptionEnabledSwapGov(clickedObject, playerColor)\n\tif Player[playerColor].admin then\n\t\tif bit32.band(options.expansionOptionEnabled, 1) == 1 then\n\t\t\toptions.expansionOptionEnabled = options.expansionOptionEnabled - 1\n\t\telse\n\t\t\toptions.expansionOptionEnabled = options.expansionOptionEnabled + 1\n\t\tend\n\t\trefreshExpansionButtons()\n\t\tsettingsPannelMakeButtons()\n\tend\nend\n\nfunction expansionOptionEnabledReverse(clickedObject, playerColor)\n\tif Player[playerColor].admin then\n\t\tif bit32.band(options.expansionOptionEnabled, 2) == 2 then\n\t\t\toptions.expansionOptionEnabled = options.expansionOptionEnabled - 2\n\t\telse\n\t\t\toptions.expansionOptionEnabled = options.expansionOptionEnabled + 2\n\t\tend\n\t\trefreshExpansionButtons()\n\t\tsettingsPannelMakeButtons()\n\tend\nend\n\nfunction expansionOptionEnabledSwapPower(clickedObject, playerColor)\n\tif Player[playerColor].admin then\n\t\tif bit32.band(options.expansionOptionEnabled, 4) == 4 then\n\t\t\toptions.expansionOptionEnabled = options.expansionOptionEnabled - 4\n\t\telse\n\t\t\toptions.expansionOptionEnabled = options.expansionOptionEnabled + 4\n\t\tend\n\t\tsettingsPannelMakeButtons()\n\tend\nend\n\nfunction expansionOptionEnabledSetupPowerAbilities(clickedObject, playerColor)\n    if Player[playerColor].admin then\n        if bit32.band(options.expansionOptionEnabled, 8) == 8 then\n            options.expansionOptionEnabled = options.expansionOptionEnabled - 8\n        else\n            options.expansionOptionEnabled = options.expansionOptionEnabled + 8\n        end\n        refreshExpansionButtons()\n        settingsPannelMakeButtons()\n    end\nend\n\nfunction expansionOptionStatusSwapGov(clickedObject, playerColor)\n\tif Player[playerColor].admin then\n\t\tif bit32.band(options.expansionOptionStatus, 1) == 1 then\n\t\t\toptions.expansionOptionStatus = options.expansionOptionStatus - 1\n\t\telse\n\t\t\toptions.expansionOptionStatus = options.expansionOptionStatus + 1\n\t\tend\n\t\trefreshExpansionButtons()\n\tend\nend\n\nfunction expansionOptionStatusReverse(clickedObject, playerColor)\n\tif Player[playerColor].admin then\n\t\tif bit32.band(options.expansionOptionStatus, 2) == 2 then\n\t\t\toptions.expansionOptionStatus = options.expansionOptionStatus - 2\n\t\telse\n\t\t\toptions.expansionOptionStatus = options.expansionOptionStatus + 2\n\t\tend\n\t\trefreshExpansionButtons()\n\tend\nend\n\nfunction decLiberalCards(clickedObject, playerColor)\n\tif Player[playerColor].admin then\n\t\tif options.liberalCards > 5 then\n\t\t\toptions.liberalCards = options.liberalCards - 1\n\t\tend\n\t\tsettingsPannelMakeButtons()\n\tend\nend\n\nfunction incLiberalCards(clickedObject, playerColor)\n\tif Player[playerColor].admin then\n\t\tif options.liberalCards < 8 then\n\t\t\toptions.liberalCards = options.liberalCards + 1\n\t\tend\n\t\tsettingsPannelMakeButtons()\n\tend\nend\n\nfunction decFascistCards(clickedObject, playerColor)\n\tif Player[playerColor].admin then\n\t\tif options.fascistCards > 10 then\n\t\t\toptions.fascistCards = options.fascistCards - 1\n\t\tend\n\t\tsettingsPannelMakeButtons()\n\tend\nend\n\nfunction incFascistCards(clickedObject, playerColor)\n\tif Player[playerColor].admin then\n\t\tif options.fascistCards < 15 then\n\t\t\toptions.fascistCards = options.fascistCards + 1\n\t\tend\n\t\tsettingsPannelMakeButtons()\n\tend\nend\n\nfunction decGreyCards(clickedObject, playerColor)\n\tif Player[playerColor].admin then\n\t\tif options.greyCards > 0 then\n\t\t\toptions.greyCards = options.greyCards - 1\n\t\tend\n\t\tsettingsPannelMakeButtons()\n\tend\nend\n\nfunction incGreyCards(clickedObject, playerColor)\n\tif Player[playerColor].admin then\n\t\tif options.greyCards < 2 then\n\t\t\toptions.greyCards = options.greyCards + 1\n\t\tend\n\t\tsettingsPannelMakeButtons()\n\tend\nend\n\nfunction decExpansionAmount(clickedObject, playerColor)\n\tif Player[playerColor].admin then\n\t\tif options.expansionAmount > 0 then\n\t\t\toptions.expansionAmount = options.expansionAmount - 1\n\t\tend\n\t\tsettingsPannelMakeButtons()\n\tend\nend\n\nfunction incExpansionAmount(clickedObject, playerColor)\n\tif Player[playerColor].admin then\n\t\tif options.expansionAmount < 4 then\n\t\t\toptions.expansionAmount = options.expansionAmount + 1\n\t\tend\n\t\tsettingsPannelMakeButtons()\n\tend\nend\n\nfunction addJaCard(cardIn)\n\tlocal player = string.gsub(cardIn.getDescription(), '\\'s Ja Card', '')\n\tjaCardGuids[player] = cardIn.getGUID()\nend\n\nfunction addNeinCard(cardIn)\n\tlocal player = string.gsub(cardIn.getDescription(), '\\'s Nein Card', '')\n\tneinCardGuids[player] = cardIn.getGUID()\nend\n\nfunction displayBannerCardsCoroutine()\n\tlocal tmpZone = getObjectFromGUID(bannerZoneGuid)\n\tlocal inZone = tmpZone.getObjects()\n\tlocal policyCard = nil\n\tlocal boardCard = nil\n\n\t-- get the cards\n\tfor _, j in ipairs(inZone) do\n\t\tif isPolicyCard(j) then\n\t\t\tpolicyCard = j\n\t\telseif isBoardCard(j) and not isSubBoardCard(j) then\n\t\t\tboardCard = j\n\t\tend\n\tend\n\n\t-- kill old banners\n\tif bannerGuids then\n\t\tfor _, j in ipairs(bannerGuids) do\n\t\t\tdestroyObjectByGUID(j)\n\t\tend\n\tend\n\tbannerGuids = {}\n\n\t-- display and board card handler\n\tif policyCard and boardCard and not topdeck then\n\t\tdisplayBannerCard(policyCard, -14.5, 0)\n\t\tdisplayBannerCard(boardCard, 20.5, 4)\n\t\tboardCardHandler(boardCard)\n\telse\n\t\tdisplayBannerCard(policyCard, 0, 0)\n\t\tif lastPres and not topdeck then\n\t\t\tmovePlacards(nextPres(lastPres), true)\n\t\tend\n\tend\n\n\ttopdeck = false\n\n\t-- Win check\n\tif lastLiberalPlayed > 5 or lastFascistPlayed > 6 then\n\t\tif not options.dealRoleCards then giveRoleCards() end\n\tend\n\n\treturn true\nend\n\nfunction displayBannerCard(card, offset, bannerGuidsOffset)\n\tlocal bannerCard = {}\n\tlocal params = {sound = false}\n\tparams.snap_to_grid = false\n\tparams.position = {offset, 33, 144}\n\tbannerCard[1] = card.clone(params)\n\tparams.position = {-offset, 33, -144}\n\tbannerCard[2] = card.clone(params)\n\tparams.position = {144, 33, -offset}\n\tbannerCard[3] = card.clone(params)\n\tparams.position = {-144, 33, offset}\n\tbannerCard[4] = card.clone(params)\n\twait(5)\n\tbannerCard[1].setRotation({90, 180, 0})\n\tbannerCard[2].setRotation({90, 0, 0})\n\tbannerCard[3].setRotation({90, 270, 0})\n\tbannerCard[4].setRotation({90, 90, 0})\n\tfor i, j in ipairs(bannerCard) do\n\t\tbannerCard[i].setScale({13, 0, 13})\n\t\tbannerCard[i].setLock(true)\n\t\tbannerCard[i].interactable = false\n\t\tbannerGuids[i + bannerGuidsOffset] = bannerCard[i].guid\n\tend\nend\n\nfunction boardCardHandler(card)\n\tlocal powerHolder = lastPres\n\tif bit32.band(options.expansionOptionEnabled, 4) == 4 and bit32.band(options.expansionOptionStatus, 1) == 1 then\n\t\tpowerHolder = lastChan\n\tend\n\tif powerHolder then\n\t\tif isBoardCardInspect(card) then\n\t\t\t--expansion\n\t\t\tlocal abilitiesDeck = getDeckFromZoneByGUID(ABILITIESPILE_ZONE_GUID)\n\t\t\tif abilitiesDeck then\n\t\t\t\tbroadcastToAll('Delaying inspect 5 seconds...', {1,1,1})\n\t\t\t\tsleep(5)\n\t\t\tend\n\t\t\tif not options.dealPartyCards then createInspectButtons(powerHolder) end\n\t\t\tif options.autoNotate then\n\t\t\t\tnotateInfo(powerHolder, 'inspects', '', '', true)\n\t\t\tend\n\t\telseif isBoardCardPickPres(card) then\n\t\t\tif options.autoNotate then\n\t\t\t\tnotateInfo(powerHolder, 'gives pres to', '', '', true)\n\t\t\tend\n\t\telseif isBoardCardBullet(card) then\n\t\t\tgiveBullet(powerHolder)\n\t\t\tbulletInfo.shooterColor = powerHolder\n\t\t\tif options.autoNotate then\n\t\t\t\tnotateInfo(powerHolder, string.lower(bulletInfo.action), '', '', true)\n\t\t\tend\n\t\telseif isBoardCardImprison(card) then\n\t\t\tgiveImprison(powerHolder)\n\t\t\timprisonInfo.shooterColor = powerHolder\n\t\t\tif options.autoNotate then\n\t\t\t\tnotateInfo(powerHolder, string.lower(imprisonInfo.action), '', '', true)\n\t\t\tend\n\t\telseif isBoardCardTopCard(card) then\n\t\t\tsmartBroadcastToColor('Examine the top card from the deck and put it back in the draw pile.', powerHolder, {1, 1, 1})\n\t\t\tdrawCards(1, powerHolder)\n\t\t\tif options.autoNotate then\n\t\t\t\tnotateInfo(powerHolder, 'examines deck:', '', '', false)\n\t\t\tend\n\t\telseif isBoardCardTopThree(card) then\n\t\t\tsmartBroadcastToColor('Examine the top three cards from the deck and put them back in the draw pile (right to left to keep the order).', powerHolder, {1, 1, 1})\n\t\t\tdrawCards(3, powerHolder)\n\t\t\tif options.autoNotate then\n\t\t\t\tnotateInfo(powerHolder, 'examines deck:', '', '', false)\n\t\t\tend\n\t\tend\n\telse\n\t\tprintToAll('ERROR: Player ' .. powerHolder .. ' not found.', {1,0,0})\n\tend\n\n\tif powerHolder and lastPres then\n\t\tif isBoardCardPickPres(card) then\n\t\t\tlocal saveForcePres = forcePres\n\t\t\tforcePres = nil\n\t\t\tmovePlacards(powerHolder, true)\n\t\t\tif saveForcePres then\n\t\t\t\tforcePres = saveForcePres\n\t\t\telse\n\t\t\t\tforcePres = nextPres(lastPres)\n\t\t\tend\n\t\telse\n\t\t\tmovePlacards(nextPres(lastPres), true)\n\t\tend\n\tend\nend\n\nfunction nextPres(playerIn)\n\tlocal nextList\n\tif bit32.band(options.expansionOptionStatus, 2) == 2 then\n\t\tnextList = {White = 'Maroon', Brown = 'White', Red = 'Brown', Orange = 'Red', Yellow = 'Orange', Green = 'Yellow', Teal = 'Green', Blue = 'Teal', Purple = 'Blue', Pink = 'Purple', Tan = 'Pink', Maroon = 'Tan'}\n\telse\n\t\tnextList = {White = 'Brown', Brown = 'Red', Red = 'Orange', Orange = 'Yellow', Yellow = 'Green', Green = 'Teal', Teal = 'Blue', Blue = 'Purple', Purple = 'Pink', Pink = 'Tan', Tan = 'Maroon', Maroon = 'White'}\n\tend\n\tlocal checkPres = playerIn\n\tlocal returnVal = nextList[checkPres]\n\n\twhile not inTable(players, returnVal) or (_G.playerStatus[returnVal] == 3) or (_G.playerStatus[returnVal] > 4)  do\n\t\tcheckPres = returnVal\n\t\treturnVal = nextList[checkPres]\n\tend\n\n\treturn returnVal\nend\n\nfunction movePlacards(playerIn, returnVoteCards)\n\tlocal moveToPlayer = playerIn\n\tif forcePres then\n\t\tmoveToPlayer = forcePres\n\t\tforcePres = nil\n\tend\n\n\t--Expansion\n\texpansionCounters()\n\n\tif options.scriptedVoting and returnVoteCards then\n\t\treturnVoteCardsToHand()\n\t\tdisableVote = false\n\t\tblockDraw = false\n\t\tvotePassed = false\n\tend\n\n\tlocal tmpPres = getObjectFromGUID(PRESIDENT_GUID)\n\ttmpPres.setVar('lastPres', moveToPlayer)\n\tif tmpPres then giveObjectToPlayer(tmpPres, moveToPlayer, {forward = 11, right = 0, up = 0, forceHeight = 2.2}, NO_ROT, false, false) end\n\tlocal tmpChan = getObjectFromGUID(CHANCELOR_GUID)\n\tif tmpChan then giveObjectToPlayer(tmpChan, moveToPlayer, {forward = 11, right = 0, up = 0, forceHeight = 2.8}, NO_ROT, false, false) end\nend\n\nfunction giveBullet(playerIn)\n\tgiveBulletImprison(playerIn, bulletInfo, \"markDead\")\nend\n\nfunction markDead(tableIn)\n\tif type(tableIn) == 'table' then\n\t\tlocal victimColor = closestPlayer(tableIn[1], players, 18)\n\t\tif victimColor and victimColor ~= bulletInfo.shooterColor then\n\t\t\tbulletInfo.shooterColor = nil\n\t\t\t_G.playerStatus[victimColor] = 5\n\t\t\trefreshStatusButtons()\n\t\t\tWait.time(function() tableIn[1].setLock(true) end, 2)\n\t\t\tif options.autoNotate then\n\t\t\t\tif notate.line and notate.action == string.lower(bulletInfo.action) then\n\t\t\t\t\tnotateColor2ByObject(tableIn)\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\nend\n\nfunction giveImprison(playerIn)\n\tgiveBulletImprison(playerIn, imprisonInfo, \"markImprisoned\")\nend\n\nfunction markImprisoned(tableIn)\n\tif type(tableIn) == 'table' then\n\t\tlocal victimColor = closestPlayer(tableIn[1], players, 18)\n\t\tif victimColor and victimColor ~= imprisonInfo.shooterColor then\n\t\t\timprisonInfo.shooterColor = nil\n\t\t\t_G.playerStatus[victimColor] = 7\n\t\t\trefreshStatusButtons()\n\t\t\tWait.time(function() tableIn[1].setLock(true) end, 2)\n\t\t\tif options.autoNotate then\n\t\t\t\tif notate.line and notate.action == string.lower(imprisonInfo.action) then\n\t\t\t\t\tnotateColor2ByObject(tableIn)\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\nend\n\nfunction giveBulletImprison(playerIn, itemInfo, funcName)\n\tlocal params = {type = itemInfo.type, sound = false}\n\tlocal item = spawnObject(params)\n\tcustom = {\n\t\tmesh = itemInfo.mesh,\n\t\tdiffuse = itemInfo.diffuse,\n\t\tassetbundle = itemInfo.assetbundle,\n\t\tassetbundle_secondary = itemInfo.assetbundle_secondary,\n\t\timage = itemInfo.image,\n\t\tconvex = itemInfo.convex,\n\t\tmaterial = itemInfo.material,\n\t\tspecular_color = itemInfo.specular_color,\n\t\tspecular_intensity = itemInfo.specular_intensity,\n\t\tspecular_sharpness = itemInfo.specular_sharpness,\n\t\tfresnel_strength = itemInfo.fresnel_strength\n\t}\n\titem.use_grid = itemInfo.use_grid\n\titem.setCustomObject(custom)\n\titem.setColorTint(itemInfo.colorTint)\n\titem.setScale(itemInfo.scale)\n\titem.setLuaScript(\n\t\t\t'function onDrop(playerColor)\\r\\n' ..\n\t\t\t'\tGlobal.call(\\'' .. funcName .. '\\', {self})\\r\\n' ..\n\t\t\t'end\\r\\n')\n\twait(5)\n\titem.setPosition({0, 30, 0})\n\tgiveObjectToPlayer(item, playerIn, {forward = 20, right = 0, up = 0, forceHeight = 6}, NO_ROT)\nend\n\nfunction createPolicyCardWait()\n\tif policyWaitId then\n\t\tWait.stop(policyWaitId)\n\tend\n\tpolicyWaitId = Wait.time(function() startPolicyCardCheck() end, 1)\nend\n\nfunction startPolicyCardCheck()\n\tif not Global.getVar('hold') then\n\t\tGlobal.setVar('hold', true)\n\t\tstartLuaCoroutine(Global, 'policyCardCoroutine')\n\tend\nend\n\nfunction policyCardCoroutine()\n\tlocal cardLists = {}\n\tlocal drawZone = nil\n\tlocal discardZone = nil\n\n\tlocal homeTracker = function()\n\t\tlocal tracker = getObjectFromGUID(ELECTION_TRACKER_GUID)\n\t\tif tracker then\n\t\t\ttracker.setPositionSmooth(electionTrackerOrgPos)\n\t\t\ttracker.setRotationSmooth({0, 315, 0})\n\t\tend\n\tend\n\n\tlocal movePrevPlacards = function()\n\t\tif lastPres and lastChan then\n\t\t\tlocal tmpPres = getObjectFromGUID(PREV_PRESIDENT_GUID)\n\t\t\tif tmpPres then giveObjectToPlayer(tmpPres, lastPres, {forward = 11, right = 0, up = 0, forceHeight = 1.1}, NO_ROT, false, false) end\n\t\t\tlocal tmpChan = getObjectFromGUID(PREV_CHANCELOR_GUID)\n\t\t\tif tmpChan then giveObjectToPlayer(tmpChan, lastChan, {forward = 11, right = 0, up = 0, forceHeight = 1.1}, NO_ROT, false, false) end\n\t\tend\n\tend\n\n\tlocal homePrevPlacards = function()\n\t\tlocal tmpPres = getObjectFromGUID(PREV_PRESIDENT_GUID)\n\t\tif tmpPres then\n\t\t\ttmpPres.setRotationSmooth(PREV_PRESIDENT_ROT, false, false)\n\t\t\ttmpPres.setPositionSmooth(PREV_PRESIDENT_POS, false, false)\n\t\tend\n\t\tlocal tmpChan = getObjectFromGUID(PREV_CHANCELOR_GUID)\n\t\tif tmpChan then\n\t\t\ttmpChan.setRotationSmooth(PREV_CHANCELOR_ROT, false, false)\n\t\t\ttmpChan.setPositionSmooth(PREV_CHANCELOR_POS, false, false)\n\t\tend\n\tend\n\n\tdrawZone = getObjectFromGUID(DRAW_ZONE_GUID)\n\tdiscardZone = getObjectFromGUID(DISCARD_ZONE_GUID)\n\n\tif drawZone == nil or discardZone == nil then\n\t\treturn true\n\tend\n\n\t-- Get the status of all cards and decks from the zones\n\tcardLists = getPolicyCardStatus(true)\n\n\t-- protect the cards\n\tif #cardLists.drawDeckList == 1 and #cardLists.drawList > 1 then\n\t\tlocal tmpDeck = getObjectFromGUID(cardLists.drawDeckList[1])\n\t\tif tmpDeck then\n\t\t\ttmpDeck.interactable = false\n\t\tend\n\tend\n\tif #cardLists.discardDeckList == 1 and #cardLists.discardList > 1 then\n\t\tlocal tmpDeck = getObjectFromGUID(cardLists.discardDeckList[1])\n\t\tif tmpDeck then\n\t\t\ttmpDeck.interactable = false\n\t\tend\n\tend\n\n\t--Expansion\n\ttmpObj = getDeckFromZoneByGUID(ABILITIESPILE_ZONE_GUID)\n\tif tmpObj then tmpObj.interactable = false end\n\ttmpObj = getDeckFromZoneByGUID(EFFECTSPILE_ZONE_GUID)\n\tif tmpObj then tmpObj.interactable = false end\n\n\t-- Msg if cards are added to the draw deck\n\tif lastDrawCt and #cardLists.drawList > lastDrawCt and #cardLists.drawDeckList == 1 then\n\t\tbroadcastToAll('WARNING: One or more cards have been added to the draw deck!', {1,0,0})\n\tend\n\tlastDrawCt = #cardLists.drawList\n\n\tif started and #cardLists.fascistList > options.fascistCards then\n\t\tbroadcastToAll('CHEATING DETECTED: Too many ' .. text.fascistAbbr ..  ' ' .. text.policy .. ' cards.', {1,0,0})\n\tend\n\tif started and #cardLists.liberalList > options.liberalCards then\n\t\tbroadcastToAll('CHEATING DETECTED: Too many ' .. text.liberalAbbr ..  ' ' .. text.policy .. ' cards.', {1,0,0})\n\tend\n\tif started and #cardLists.greyList > options.greyCards then\n\t\tbroadcastToAll('CHEATING DETECTED: Too many ' .. text.greyAbbr ..  ' ' .. text.policy .. ' cards.', {1,0,0})\n\tend\n\n\t-- Location of all cards is known\n\tif started and #cardLists.fascistList == options.fascistCards and #cardLists.liberalList == options.liberalCards and #cardLists.greyList == options.greyCards and (#cardLists.discardDeckList == 0 or #cardLists.discardDeckList == 1) then\n\t\t-- Reshuffle\n\t\tlocal autoNotateReshuffle = false\n\t\tif #cardLists.drawList < 3 and #cardLists.discardDeckList == 1 and (#cardLists.drawDeckList == 0 or #cardLists.drawDeckList == 1) then\n\t\t\tif cardLists.drawDeckList[1] then\n\t\t\t\tlocal tmpDeck = getObjectFromGUID(cardLists.drawDeckList[1])\n\t\t\t\tpos = tmpDeck.getPosition()\n\t\t\telse\n\t\t\t\tpos = getPositionByGUID(DRAW_ZONE_GUID)\n\t\t\tend\n\t\t\tbroadcastToAll('Starting reshuffle...', {1,1,1})\n\t\t\tlocal discardDeck = getObjectFromGUID(cardLists.discardDeckList[1])\n\t\t\tdiscardDeck.setPositionSmooth({pos['x'], 3, pos['z']}, false, true)\n\t\t\tsleep(2)\n\t\t\tlocal expectedCards = #cardLists.drawList + #cardLists.discardList\n\t\t\tlocal drawDeck = getDeckFromZoneByGUID(DRAW_ZONE_GUID)\n\t\t\tif drawDeck and #drawDeck.getObjects() == expectedCards then\n\t\t\t\tlastDrawCt = expectedCards\n\t\t\t\tdrawDeck.shuffle()\n\t\t\t\tbroadcastToAll('reshuffle done.', {1,1,1})\n\t\t\t\tif options.autoNotate then\n\t\t\t\t\tautoNotateReshuffle = true\n\t\t\t\tend\n\t\t\t\tlocal discardPileBoard = getObjectFromGUID(discardPileBoard_guid)\n\t\t\t\tif discardPileBoard then\n\t\t\t\t\tdiscardPileBoard.setName(0)\n\t\t\t\tend\n\t\t\telse\n\t\t\t\tbroadcastToAll('ERROR: reshuffle FAILED! Please fix the issue.', {1,0,0})\n\t\t\t\tstartLuaCoroutine(Global, 'disableSecurityCoroutine')\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\n\t\t-- Banners and board card handler\n\t\tif #cardLists.liberalPlayedList > 0 and (#cardLists.liberalPlayedList + #cardLists.liberalNotUsedList) > lastLiberalPlayed then\n\t\t\tlastLiberalPlayed = #cardLists.liberalPlayedList + #cardLists.liberalNotUsedList\n\t\t\tbannerZoneGuid = liberal_zone_guids[lastLiberalPlayed]\n\t\t\ttmpZone = getObjectFromGUID(bannerZoneGuid)\n\t\t\tinZone = tmpZone.getObjects()\n\t\t\tlocal cardType = nil\n\t\t\tfor i, j in ipairs(inZone) do\n\t\t\t\tif isLiberalPolicyCard(j) and not j.is_face_down then\n\t\t\t\t\tcardType = text.liberalLetter\n\t\t\t\telseif isGreyPolicyCard(j) and not j.is_face_down then\n\t\t\t\t\tcardType = text.greyLetter\n\t\t\t\tend\n\t\t\tend\n\t\t\tif cardType then\n\t\t\t\tif options.autoNotate then\n\t\t\t\t\tif topdeck then\n\t\t\t\t\t\tnotateInfo('', 'Topdeck:', '', '[0080F8]' .. cardType .. '[-]', false)\n\t\t\t\t\telseif bit32.band(options.expansionOptionStatus, 1) == 1 then\n\t\t\t\t\t\tnotateInfo(lastChan, '>', lastPres, '[0080F8]' .. cardType .. '[-]', false)\n\t\t\t\t\telse\n\t\t\t\t\t\tnotateInfo(lastPres, '>', lastChan, '[0080F8]' .. cardType .. '[-]', false)\n\t\t\t\t\tend\n\t\t\t\t\thomeTracker()\n\t\t\t\tend\n\t\t\t\tif topdeck then\n\t\t\t\t\thomePrevPlacards()\n\t\t\t\telse\n\t\t\t\t\tmovePrevPlacards()\n\t\t\t\tend\n\t\t\t\tstartLuaCoroutine(Global, 'displayBannerCardsCoroutine')\n\t\t\telse\n\t\t\t\tlastLiberalPlayed = 0 -- didn't find the card\n\t\t\tend\n\t\telseif #cardLists.fascistPlayedList > 0 and (#cardLists.fascistPlayedList + #cardLists.fascistNotUsedList) > lastFascistPlayed then\n\t\t\tlastFascistPlayed = #cardLists.fascistPlayedList + #cardLists.fascistNotUsedList\n\t\t\tbannerZoneGuid = fascist_zone_guids[lastFascistPlayed]\n\t\t\ttmpZone = getObjectFromGUID(bannerZoneGuid)\n\t\t\tinZone = tmpZone.getObjects()\n\t\t\tlocal cardType = nil\n\t\t\tfor i, j in ipairs(inZone) do\n\t\t\t\tif isFascistPolicyCard(j) and not j.is_face_down then\n\t\t\t\t\tcardType = text.fascistLetter\n\t\t\t\telseif isGreyPolicyCard(j) and not j.is_face_down then\n\t\t\t\t\tcardType = text.greyLetter\n\t\t\t\tend\n\t\t\tend\n\t\t\tif cardType then\n\t\t\t\tif options.autoNotate then\n\t\t\t\t\tif topdeck then\n\t\t\t\t\t\tnotateInfo('', 'Topdeck:', '', '[FF0000]' .. cardType .. '[-]', false)\n\t\t\t\t\telseif bit32.band(options.expansionOptionStatus, 1) == 1 then\n\t\t\t\t\t\tnotateInfo(lastChan, '>', lastPres, '[FF0000]' .. cardType .. '[-]', false)\n\t\t\t\t\telse\n\t\t\t\t\t\tnotateInfo(lastPres, '>', lastChan, '[FF0000]' .. cardType .. '[-]', false)\n\t\t\t\t\tend\n\t\t\t\t\thomeTracker()\n\t\t\t\t\tif lastFascistPlayed == 4 then notateInfo('', '', '', '[FF0000]' .. text.hitler .. ' territory![-]', false) end\n\t\t\t\tend\n\t\t\t\tif topdeck then\n\t\t\t\t\thomePrevPlacards()\n\t\t\t\telse\n\t\t\t\t\tmovePrevPlacards()\n\t\t\t\tend\n\t\t\t\tstartLuaCoroutine(Global, 'displayBannerCardsCoroutine')\n\t\t\telse\n\t\t\t\tlastFascistPlayed = 0 -- didn't find the card\n\t\t\tend\n\t\tend\n\t\tif autoNotateReshuffle then notateInfo('', '', '', '*Reshuffle*', false) end\n\t\tif lastLiberalPlayed or lastFascistPlayed then\n\t\t\t-- Lock placed policy cards\n\t\t\tif boardCardWaitId then\n\t\t\t\tWait.stop(boardCardWaitId)\n\t\t\tend\n\t\t\tboardCardWaitId = Wait.time(\n\t\t\t\tfunction()\n\t\t\t\t\ttestReadyToLock(\n\t\t\t\t\t\tfunction(p)\n\t\t\t\t\t\t\treturn isPolicyCard(p) and not p.is_face_down\n\t\t\t\t\t\tend, boardCardWaitId)\n\t\t\t\tend, 1, -1)\n\t\tend\n\tend\n\n\tGlobal.setVar('hold', false)\n\n\treturn true\nend\n\nfunction getPolicyCardStatus(removeCards)\n\tlocal returnTable = {}\n\treturnTable.fascistList = {}\n\treturnTable.fascistPlayedList = {}\n\treturnTable.fascistNotUsedList = {}\n\treturnTable.liberalList = {}\n\treturnTable.liberalPlayedList = {}\n\treturnTable.liberalNotUsedList = {}\n\treturnTable.greyList = {}\n\treturnTable.drawList = {}\n\treturnTable.drawDeckList = {}\n\treturnTable.discardList = {}\n\treturnTable.discardDeckList = {}\n\tlocal removeCt = 0\n\tlocal cardError = false\n\tlocal drawZone = nil\n\tlocal discardZone = nil\n\n\tdrawZone = getObjectFromGUID(DRAW_ZONE_GUID)\n\tdiscardZone = getObjectFromGUID(DISCARD_ZONE_GUID)\n\n\tlocal inZone = drawZone.getObjects()\n\tfor i, j in ipairs(inZone) do\n\t\tif isFascistPolicyCard(j) then\n\t\t\tsmartTableInsert(returnTable.fascistList, j.guid)\n\t\t\tsmartTableInsert(returnTable.drawList, j.guid)\n\t\t\tsmartTableInsert(returnTable.drawDeckList, j.guid)\n\t\telseif isLiberalPolicyCard(j) then\n\t\t\tsmartTableInsert(returnTable.liberalList, j.guid)\n\t\t\tsmartTableInsert(returnTable.drawList, j.guid)\n\t\t\tsmartTableInsert(returnTable.drawDeckList, j.guid)\n\t\telseif isGreyPolicyCard(j) then\n\t\t\tsmartTableInsert(returnTable.greyList, j.guid)\n\t\t\tsmartTableInsert(returnTable.drawList, j.guid)\n\t\t\tsmartTableInsert(returnTable.drawDeckList, j.guid)\n\t\telseif j.tag == 'Deck' then\n\t\t\tsmartTableInsert(returnTable.drawDeckList, j.guid)\n\t\t\tlocal inDeck = j.getObjects()\n\t\t\tfor k, l in ipairs(inDeck) do\n\t\t\t\tif l.description == FASCISTPOLICY_STRING then\n\t\t\t\t\tsmartTableInsert(returnTable.fascistList, l.guid)\n\t\t\t\t\tsmartTableInsert(returnTable.drawList, l.guid)\n\t\t\t\telseif l.description == LIBERALPOLICY_STRING then\n\t\t\t\t\tsmartTableInsert(returnTable.liberalList, l.guid)\n\t\t\t\t\tsmartTableInsert(returnTable.drawList, l.guid)\n\t\t\t\telseif l.description == GREYPOLICY_STRING then\n\t\t\t\t\tsmartTableInsert(returnTable.greyList, l.guid)\n\t\t\t\t\tsmartTableInsert(returnTable.drawList, l.guid)\n\t\t\t\telseif removeCards and removeCt < (#inDeck - 1) then\n\t\t\t\t\tlocal params = {}\n\t\t\t\t\tparams.position = {0,5,0}\n\t\t\t\t\tparams.guid = l.guid\n\t\t\t\t\tlocal card = j.takeObject(params)\n\t\t\t\t\tif not cardError then\n\t\t\t\t\t\tcardError = true\n\t\t\t\t\t\tprintToAll('ERROR: That is not a policy card.', {1,0,0})\n\t\t\t\t\tend\n\t\t\t\t\tremoveCt = removeCt + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tremoveCt = 0\n\tinZone = discardZone.getObjects()\n\tfor i, j in ipairs(inZone) do\n\t\tif j.tag == 'Deck' then\n\t\t\tsmartTableInsert(returnTable.discardDeckList, j.guid)\n\t\t\tlocal inDeck = j.getObjects()\n\t\t\tfor k, l in ipairs(inDeck) do\n\t\t\t\tif l.description == FASCISTPOLICY_STRING then\n\t\t\t\t\tsmartTableInsert(returnTable.fascistList, l.guid)\n\t\t\t\t\tsmartTableInsert(returnTable.discardList, l.guid)\n\t\t\t\telseif l.description == LIBERALPOLICY_STRING then\n\t\t\t\t\tsmartTableInsert(returnTable.liberalList, l.guid)\n\t\t\t\t\tsmartTableInsert(returnTable.discardList, l.guid)\n\t\t\t\telseif l.description == GREYPOLICY_STRING then\n\t\t\t\t\tsmartTableInsert(returnTable.greyList, l.guid)\n\t\t\t\t\tsmartTableInsert(returnTable.discardList, l.guid)\n\t\t\t\telseif removeCards and removeCt < (#inDeck - 1) then\n\t\t\t\t\tlocal params = {}\n\t\t\t\t\tparams.position = {0,5,0}\n\t\t\t\t\tparams.guid = l.guid\n\t\t\t\t\tlocal card = j.takeObject(params)\n\t\t\t\t\tif not cardError then\n\t\t\t\t\t\tcardError = true\n\t\t\t\t\t\tprintToAll('ERROR: That is not a policy card.', {1,0,0})\n\t\t\t\t\tend\n\t\t\t\t\tremoveCt = removeCt + 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tlocal tmpZoneGuid\n\tlocal tmpZone\n\tlocal cardFound = false\n\tfor i = #liberal_zone_guids, 1, -1 do\n\t\ttmpZone = getObjectFromGUID(liberal_zone_guids[i])\n\t\tif tmpZone then\n\t\t\tinZone = tmpZone.getObjects()\n\t\t\tfor _, j in ipairs(inZone) do\n\t\t\t\tif isLiberalPolicyCard(j) then\n\t\t\t\t\tsmartTableInsert(returnTable.liberalList, j.guid)\n\t\t\t\t\tsmartTableInsert(returnTable.liberalPlayedList, j.guid)\n\t\t\t\t\tcardFound = true\n\t\t\t\telseif isGreyPolicyCard(j) then\n\t\t\t\t\tsmartTableInsert(returnTable.greyList, j.guid)\n\t\t\t\t\tsmartTableInsert(returnTable.liberalPlayedList, j.guid)\n\t\t\t\t\tcardFound = true\n\t\t\t\telseif isPolicyNotUsedCard(j) and cardFound then\n\t\t\t\t\tsmartTableInsert(returnTable.liberalNotUsedList, j.guid)\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tcardFound = false\n\tfor i = #fascist_zone_guids, 1, -1 do\n\t\ttmpZone = getObjectFromGUID(fascist_zone_guids[i])\n\t\tif tmpZone then\n\t\t\tinZone = tmpZone.getObjects()\n\t\t\tfor _, j in ipairs(inZone) do\n\t\t\t\tif isFascistPolicyCard(j) then\n\t\t\t\t\tsmartTableInsert(returnTable.fascistList, j.guid)\n\t\t\t\t\tsmartTableInsert(returnTable.fascistPlayedList, j.guid)\n\t\t\t\t\tcardFound = true\n\t\t\t\telseif isGreyPolicyCard(j) then\n\t\t\t\t\tsmartTableInsert(returnTable.greyList, j.guid)\n\t\t\t\t\tsmartTableInsert(returnTable.fascistPlayedList, j.guid)\n\t\t\t\t\tcardFound = true\n\t\t\t\telseif isPolicyNotUsedCard(j) and cardFound then\n\t\t\t\t\tsmartTableInsert(returnTable.fascistNotUsedList, j.guid)\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\n\treturn returnTable\nend\n\nfunction allPolicyCardsKnown()\n\tlocal cardLists = {}\n\n\tcardLists = getPolicyCardStatus(false)\n\tif started and #cardLists.fascistList == options.fascistCards and #cardLists.liberalList == options.liberalCards and #cardLists.greyList == options.greyCards and #cardLists.drawDeckList == 1 and (#cardLists.discardDeckList == 0 or #cardLists.discardDeckList == 1) then\n\t\treturn true\n\tend\n\n\treturn false\nend\n\nfunction createVoteWait()\n\tif not disableVote then\n\t\tif voteWaitId then\n\t\t\tWait.stop(voteWaitId)\n\t\tend\n\t\tvoteWaitId = Wait.time(function() startVoteCheck() end, 1)\n\tend\nend\n\nfunction startVoteCheck()\n\tlocal jaVote\n\tlocal neinVote\n\tlocal voteDone = true\n\tlocal pos\n\tvotes = {}\n\n\tfor i, playerColor in pairs(players) do\n\t\tjaVote = 0\n\t\tneinVote = 0\n\t\tjaCard = getObjectFromGUID(jaCardGuids[playerColor])\n\t\tneinCard = getObjectFromGUID(neinCardGuids[playerColor])\n\t\tif greyPlayer(playerColor) then\n\t\t\tph = getObjectFromGUID(greyPlayerHandGuids[playerColor])\n\t\t\tif ph then\n\t\t\t\tpos = ph.getPosition()\n\t\t\t\tpos = {x = pos['x'], y = pos['y'], z = pos['z'] - 2.26}\n\t\t\tend\n\t\telse\n\t\t\tlocal ph = Player[playerColor].getPlayerHand()\n\t\t\tif ph then\n\t\t\t\tpos = {x = ph['pos_x'], y = ph['pos_y'], z = ph['pos_z']}\n\t\t\tend\n\t\tend\n\t\tif pos and jaCard and neinCard and not (_G.playerStatus[playerColor] > 3) then\n\t\t\tlocal distance = findDistance(jaCard.getPosition(), pos);\n\t\t\tif distance > 8 then\n\t\t\t\tif jaCard.is_face_down and not jaCard.held_by_color then\n\t\t\t\t\tjaVote = 1\n\t\t\t\telse\n\t\t\t\t\tvoteDone = false\n\t\t\t\tend\n\t\t\tend\n\t\t\tdistance = findDistance(neinCard.getPosition(), pos);\n\t\t\tif distance > 8 then\n\t\t\t\tif neinCard.is_face_down and not neinCard.held_by_color then\n\t\t\t\t\tneinVote = -1\n\t\t\t\telse\n\t\t\t\t\tvoteDone = false\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\tvotes[playerColor] = jaVote + neinVote\n\t\tif (jaVote + neinVote) == 0 and not (_G.playerStatus[playerColor] > 3) then\n\t\t\tvoteDone = false\n\t\tend\n\tend\n\n\tif voteDone then\n\t\tvoteNotes = getFinalVoteString()\n\t\tsetNotes(voteNotes .. '\\n\\n' .. mainNotes)\n\t\tlocal presColor = getPres()\n\t\tlocal chanColor = getChan()\n\t\tlocal out = '[' .. stringColorToHex(presColor) .. ']' .. presColor .. '[-] > '\n\t\tout = out .. '[' .. stringColorToHex(chanColor) .. ']' .. chanColor .. '[-]\\n'\n\t\tout = out .. voteNotes\n\t\tif voteNotebook == '' then\n\t\t\tvoteNotebook = out\n\t\telse\n\t\t\tvoteNotebook = voteNotebook .. '\\n\\n' .. out\n\t\tend\n\t\tlastVote = out\n\t\tfor _, lastVoteGuid in ipairs(lastVote_guids) do\n\t\t\tlocal lastVoteObj = getObjectFromGUID(lastVoteGuid)\n\t\t\tif lastVoteObj then lastVoteObj.TextTool.setValue(removeBBCode(out)) end\n\t\tend\n\t\tflipVotes()\n\t\tdisableVote = true\n\t\tif string.find(out, 'Vote passes') then\n\t\t\tvotePassed = true\n\t\telse\n\t\t\tvotePassed = false\n\t\tend\n\telse\n\t\tvoteNotes = getPrelimVoteString()\n\t\tsetNotes(voteNotes .. '\\n\\n' .. mainNotes)\n\tend\nend\n\nfunction expansionCounters()\n\tlocal allObjs = getAllObjects()\n\tlocal tmpObj\n\n\tfor _, tmpObj in ipairs(allObjs) do\n\t\tif tmpObj then\n\t\t\tif tmpObj.tag == 'Counter' and (string.match(tmpObj.getName(), 'Turns') or string.match(tmpObj.getName(), 'Rounds')) then\n\t\t\t\ttmpObj.Counter.decrement()\n\t\t\tend\n\t\tend\n\tend\nend\n\nfunction waitReturnVoteCardsCoroutine()\n\tsleep(5)\n\treturnVoteCardsToHand()\n\tdisableVote = false\n\tblockDraw = false\n\tvotePassed = false\n\n\treturn true\nend\n\nfunction flipVotes()\n\tfor i, playerColor in pairs(players) do\n\t\tjaCard = getObjectFromGUID(jaCardGuids[playerColor])\n\t\tneinCard = getObjectFromGUID(neinCardGuids[playerColor])\n\t\tif greyPlayer(playerColor) then\n\t\t\tph = getObjectFromGUID(greyPlayerHandGuids[playerColor])\n\t\t\tif ph then\n\t\t\t\tpos = ph.getPosition()\n\t\t\t\tpos = {x = pos['x'], y = pos['y'], z = pos['z'] - 2.26}\n\t\t\tend\n\t\telse\n\t\t\tlocal ph = Player[playerColor].getPlayerHand()\n\t\t\tif ph then\n\t\t\t\tpos = {x = ph['pos_x'], y = ph['pos_y'], z = ph['pos_z']}\n\t\t\tend\n\t\tend\n\t\tif pos and jaCard and neinCard and not (_G.playerStatus[playerColor] > 3) then\n\t\t\tlocal distance = findDistance(jaCard.getPosition(), pos);\n\t\t\tif distance > 8 then jaCard.flip() end\n\t\t\tdistance = findDistance(neinCard.getPosition(), pos);\n\t\t\tif distance > 8 then neinCard.flip() end\n\t\tend\n\tend\nend\n\nfunction returnVoteCardsToHand()\n\tfor i, playerColor in pairs(players) do\n\t\tjaCard = getObjectFromGUID(jaCardGuids[playerColor])\n\t\tneinCard = getObjectFromGUID(neinCardGuids[playerColor])\n\t\tif jaCard and neinCard then\n\t\t\tif greyPlayer(playerColor) then\n\t\t\t\tgiveObjectToPlayer(jaCard, playerColor, {forward = GREY_FORWARD, right = GREY_RIGHT, up = GREY_UP}, {x = 0, y = 180, z = 180, exactRot = true}, false, true)\n\t\t\t\tgiveObjectToPlayer(neinCard, playerColor, {forward = GREY_FORWARD, right = GREY_RIGHT, up = GREY_UP}, {x = 0, y = 180, z = 180, exactRot = true}, false, true)\n\t\t\telse\n\t\t\t\tlocal jaCardRot = jaCard.getRotation()\n\t\t\t\tlocal neinCardRot = neinCard.getRotation()\n\t\t\t\tgiveObjectToPlayer(jaCard, playerColor, {forward = 0, right = 0, up = 0}, {x = jaCardRot[\"x\"], y = jaCardRot[\"y\"], z = jaCardRot[\"z\"], exactRot = true}, false, true)\n\t\t\t\tgiveObjectToPlayer(neinCard, playerColor, {forward = 0, right = 0, up = 0}, {x = neinCardRot[\"x\"], y = neinCardRot[\"y\"], z = neinCardRot[\"z\"], exactRot = true}, false, true)\n\t\t\tend\n\t\tend\n\tend\nend\n\nfunction getFinalVoteString()\n\tlocal jaCount = 0\n\tlocal neinCount = 0\n\tlocal out = '[i]Ja votes[/i]: '\n\tfor i, playerColor in pairs(ALL_PLAYABLE_COLORS) do -- used for the order\n\t\tif votes[playerColor] == 1 and inTable(players, playerColor) then\n\t\t\tif string.sub(out, -1) == ']' then out = out .. ', ' end\n\t\t\tout = out .. '[' .. stringColorToHex(playerColor) .. ']' .. playerColor .. '[-]'\n\t\t\tjaCount = jaCount + 1\n\t\tend\n\tend\n\tif jaCount == 0 then out = out .. 'None' end\n\tout = out .. '[/i]\\n[i]Nein votes[/i]:[i] '\n\tfor i, playerColor in pairs(ALL_PLAYABLE_COLORS) do -- used for the order\n\t\tif votes[playerColor] == -1 and inTable(players, playerColor) then\n\t\t\tif string.sub(out, -1) == ']' then out = out .. ', ' end\n\t\t\tout = out .. '[' .. stringColorToHex(playerColor) .. ']' .. playerColor .. '[-]'\n\t\t\tneinCount = neinCount + 1\n\t\tend\n\tend\n\tif neinCount == 0 then out = out .. 'None' end\n\tout = out .. '[/i]'\n\tif jaCount > neinCount then\n\t\tbroadcastToAll('Vote passes', stringColorToRGB('Green'))\n\t\tout = '[' .. stringColorToHex('Green') .. ']-<<<<· Vote passes <══¦-•\\n' .. '[-]' .. out\n\telse\n\t\tbroadcastToAll('Vote fails', stringColorToRGB('Red'))\n\t\tout = '[' .. stringColorToHex('Red') .. ']-<<<<· Vote fails <══¦-•\\n' .. '[-]' .. out\n\t\tif options.autoNotate then\n\t\t\tlocal lineSave = noteTakerCurrLine\n\t\t\tnoteTakerCurrLine = #noteTakerNotes\n\t\t\tif not noteTakerBlankLine(noteTakerCurrLine) then\n\t\t\t\taddNewLine()\n\t\t\t\tnoteTakerCurrLine = #noteTakerNotes\n\t\t\tend\n\t\t\tnoteTakerNotes[noteTakerCurrLine].color1 = getPres()\n\t\t\tnoteTakerNotes[noteTakerCurrLine].action = '>'\n\t\t\tnoteTakerNotes[noteTakerCurrLine].color2 = getChan()\n\t\t\tnoteTakerNotes[noteTakerCurrLine].result = '[222222]Downvoted[-]'\n\t\t\tnoteTakerCurrLine = lineSave\n\t\t\trefreshNotes(nil)\n\t\t\tlocal tracker = getObjectFromGUID(ELECTION_TRACKER_GUID)\n\t\t\tif tracker then\n\t\t\t\ttracker.translate({electionTrackerMoveX, 0, 0})\n\t\t\tend\n\t\tend\n\t\tmovePlacards(nextPres(getPres()), false)\n\t\tstartLuaCoroutine(Global, 'waitReturnVoteCardsCoroutine')\n\tend\n\n\treturn out\nend\n\nfunction getPrelimVoteString()\n\tlocal out = '[u]Voted[/u]:[i] '\n\tfor i, playerColor in pairs(ALL_PLAYABLE_COLORS) do -- used for the order\n\t\tif votes[playerColor] ~= 0 and inTable(players, playerColor) and not (_G.playerStatus[playerColor] > 3) then\n\t\t\tif string.sub(out, -1) == ']' then out = out .. ', ' end\n\t\t\tout = out .. '[' .. stringColorToHex(playerColor) .. ']' .. playerColor .. '[-]'\n\t\tend\n\tend\n\tout = out .. '[/i]\\n[u]Waiting on[/u]:[i] '\n\tfor i, playerColor in pairs(ALL_PLAYABLE_COLORS) do -- used for the order\n\t\tif votes[playerColor] == 0 and inTable(players, playerColor) and not (_G.playerStatus[playerColor] > 3) then\n\t\t\tif string.sub(out, -1) == ']' then out = out .. ', ' end\n\t\t\tout = out .. '[' .. stringColorToHex(playerColor) .. ']' .. playerColor .. '[-]'\n\t\tend\n\tend\n\tout = out .. '[/i]'\n\n\treturn out\nend\n\nfunction editButtonByLabel(objectGUIDIn, oldLabelIn, newLabelIn, newFunctionIn)\n\tlocal bObject = getObjectFromGUID(objectGUIDIn)\n\tif bObject then\n\t\tlocal buttonList = bObject.getButtons()\n\t\tif buttonList then\n\t\t\tlocal button\n\t\t\tfor _, button in ipairs(buttonList) do\n\t\t\t\tif button.label == oldLabelIn then\n\t\t\t\t\tbutton.label = newLabelIn\n\t\t\t\t\tbutton.click_function = newFunctionIn\n\t\t\t\t\tbObject.editButton(button)\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\nend\n\nfunction topdeckCard(clickedObject, playerColor)\n\tif started then\n\t\tif playerColor == getPres() then\n\t\t\tdrawDeck = getDeckFromZoneByGUID(DRAW_ZONE_GUID)\n\t\t\tif drawDeck then\n\t\t\t\tlastPres = playerColor\n\t\t\t\ttopdeck = true\n\t\t\t\tlocal params = {}\n\t\t\t\tparams.position = {0, 2, 0}\n\t\t\t\tparams.flip = true\n\t\t\t\tlocal card = drawDeck.takeObject(params)\n\t\t\t\tif isLiberalPolicyCard(card) then\n\t\t\t\t\tbroadcastToAll('The topdeck is '.. text.liberalArticle .. ' ' .. text.liberal .. ' ' .. text.policy .. '!', {0.1, 0.3, 1})\n\t\t\t\telse\n\t\t\t\t\tbroadcastToAll('The topdeck is '.. text.fascistArticle .. ' ' .. text.fascist .. ' ' .. text.policy .. '!', {1,0,0})\n\t\t\t\tend\n\t\t\telse\n\t\t\t\tbroadcastToAll('ERROR: Draw deck not found.', {1, 0, 0})\n\t\t\tend\n\t\telse\n\t\t\tprintToColor('ERROR: You are not the president.', playerColor, {1, 0, 0})\n\t\tend\n\telse\n\t\tprintToColor('ERROR: Game not started.', playerColor, {1, 0, 0})\n\tend\nend\n\nfunction drawThree(clickedObject, playerColor)\n\tif started then\n\t\tlocal drawPlayer = getPres()\n\t\tlocal drawPlayerText = 'president'\n\t\tif bit32.band(options.expansionOptionStatus, 1) == 1 then\n\t\t\tdrawPlayer = getChan()\n\t\t\tdrawPlayerText = 'chancellor'\n\t\tend\n\t\tif playerColor == drawPlayer then\n\t\t\tif blockDraw then\n\t\t\t\tsmartBroadcastToColor('ERROR: You can only draw once (move the Chancellor placard to reset).', playerColor, {1, 0, 0})\n\t\t\telse\n\t\t\t\tif not options.scriptedVoting or votePassed then\n\t\t\t\t\tblockDraw = true\n\t\t\t\t\tdrawCards(3, playerColor)\n\t\t\t\telse\n\t\t\t\t\tsmartBroadcastToColor('ERROR: Vote did not pass.', playerColor, {1, 0, 0})\n\t\t\t\tend\n\t\t\tend\n\t\telse\n\t\t\tsmartBroadcastToColor('ERROR: You are not the ' .. drawPlayerText .. '.', playerColor, {1, 0, 0})\n\t\tend\n\telse\n\t\tsmartBroadcastToColor('ERROR: Game not started.', playerColor, {1, 0, 0})\n\tend\nend\n\nfunction drawCards(amount, playerColor)\n\tlocal drawCt = 0\n\tlocal drawDeck = nil\n\n\tdrawDeck = getDeckFromZoneByGUID(DRAW_ZONE_GUID)\n\tif drawDeck then\n\t\tdrawCt = #drawDeck.getObjects()\n\t\tif drawCt > (amount - 1) then\n\t\t\tlastPres = getPres()\n\t\t\tlastChan = getChan()\n\t\t\tif greyPlayer(playerColor) then\n\t\t\t\tdeal12P(amount, playerColor)\n\t\t\telse\n\t\t\t\tdrawDeck.deal(amount, playerColor)\n\t\t\tend\n\t\t\tif amount == 1 then\n\t\t\t\tbroadcastToAll('Dealing 1 card to ' .. playerColor .. '.', stringColorToRGBExtra(playerColor))\n\t\t\telse\n\t\t\t\tbroadcastToAll('Dealing ' .. amount .. ' cards to ' .. playerColor .. '.', stringColorToRGBExtra(playerColor))\n\t\t\tend\n\t\telse\n\t\t\tbroadcastToAll('ERROR: Too few cards to deal.', {1, 0, 0})\n\t\tend\n\telse\n\t\tbroadcastToAll('ERROR: Draw deck not found.', {1, 0, 0})\n\tend\nend\n\nfunction getPres()\n\tlocal tempObj = getObjectFromGUID(PRESIDENT_GUID)\n\treturn closestPlayer(tempObj, players, 1000)\nend\n\nfunction getChan()\n\tlocal tempObj = getObjectFromGUID(CHANCELOR_GUID)\n\treturn closestPlayer(tempObj, players, 1000)\nend\n\nfunction onPlayerChangedColor(color)\n\trefreshUI()\n\tif started then\n\t\tif color ~= 'Grey' and color ~= 'Black' then\n\t\t\tprintToColor('--------------------------------------',color, {1, 1, 1})\n\t\t\tprintToColor('Welcome! ' .. Player[color].steam_name,color, {1, 1, 1})\n\t\t\tprintToColor('--------------------------------------',color, {1, 1, 1})\n\t\t\tPlayer[color]:print(tellRole(color))\n\t\t\tprintToColor('--------------------------------------',color, {1, 1, 1})\n\t\t\tPlayer[color]:print(chatHelp(Player[color].admin))\n\t\telseif color == 'Black' then\n\t\t\tprintToAll('--------------------------------------', {1, 1, 1})\n\t\t\tlocal hcol = stringColorToRGBExtra(color)\n\t\t\tprintToAll('All hail the omniscient Black player ' .. Player[color].steam_name, {hcol['r'], hcol['g'], hcol['b']})\n\t\t\tprintToAll('--------------------------------------', {1, 1, 1})\n\t\t\tPlayer[color]:print(tellRole(color))\n\t\t\tprintToColor('--------------------------------------',color, {1, 1, 1})\n\t\t\tPlayer[color]:print(chatHelp(Player[color].admin))\n\t\tend\n\telse\n\t\tlocal needRefresh = true\n\t\tif lastPlayerCt then\n\t\t\tif lastPlayerCt < 7 and #getSeatedPlayers() < 7 then\n\t\t\t\tneedRefresh = false\n\t\t\telseif lastPlayerCt > 6 and lastPlayerCt < 9 and\n\t\t\t\t\t #getSeatedPlayers() > 6 and #getSeatedPlayers() < 9 then\n\t\t\t\tneedRefresh = false\n\t\t\telseif lastPlayerCt > 8 and #getSeatedPlayers() > 8 then\n\t\t\t\tneedRefresh = false\n\t\t\tend\n\t\tend\n\t\tif needRefresh then\n\t\t\trefreshBoardCards()\n\t\tend\n\tend\n\n\tif options.zoneType == 6 and color ~= 'Grey' then\n\t\tlocal colorFound = nil\n\n\t\tfor testColor, steamId in pairs(greyPlayerSteamIds) do\n\t\t\tif steamId == Player[color].steam_id then\n\t\t\t\tcolorFound = testColor\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\tif colorFound then\n\t\t\tgreyPlayerSteamIds[colorFound] = nil\n\t\t\tdestroyObjectByGUID(greyAvatarGuids[colorFound])\n\t\t\tlocal textObj = getObjectFromGUID(GREY_TEXT_GUIDS[colorFound])\n\t\t\tif textObj then\n\t\t\t\ttextObj.TextTool.setValue(' ')\n\t\t\tend\n\t\tend\n\tend\nend\n\nfunction setupStart(clickedObject, playerColor)\n\tif Player[playerColor].admin then\n\t\tstartLuaCoroutine(Global, 'setupCoroutine')\n\telse\n\t\tbroadcastToColor('Only the host or a promoted player can start the game.', playerColor, {1,0,0})\n\tend\nend\n\nfunction setupCoroutine()\n\tlocal tmpObj\n\n\t--Get seated players\n\tplayers = getSeatedPlayers()\n\n\tif #players < 5 then\n\t\tprintToAll('Not enough players!', {1,1,1})\n\t\treturn true\n\tend\n\n\tlocal playerOneName = Player[players[1]].steam_name\n\tif not playerOneName or string.match(playerOneName, 'Player %d') then\n\t\tprintToAll('Hotseat game detected.', {1,1,1})\n\t\tif options.shufflePlayers then\n\t\t\toptions.shufflePlayers = false\n\t\t\tprintToAll('Shuffle players is now disabled.', {1,0,0})\n\t\tend\n\t\tif options.policySafety then\n\t\t\toptions.policySafety = false\n\t\t\tprintToAll('Policy safety is now disabled.', {1,0,0})\n\t\tend\n\tend\n\n\tif options.shufflePlayers then\n\t\tprintToAll('Shuffling Players...', {1,1,1})\n\t\tshufflePlayers()\n\t\tprintToAll('shuffling done.', {1,1,1})\n\tend\n\n\t--Hidden zones and status buttons\n\tfor i, player in pairs(MAIN_PLAYABLE_COLORS) do\n\t\tif not inTable(players, player) then\n\t\t\tdestroyObjectByGUID(HIDDEN_ZONE_GUIDS[player])\n\t\telse\n\t\t\tif options.zoneType == 1 then\n\t\t\t\tlocal params = {\n\t\t\t\t\ttype = 'BlockRectangle',\n\t\t\t\t\tscale = {15, 0.25, 0.5},\n\t\t\t\t\tposition = {-100, 100, -100},\n\t\t\t\t\tsound = false\n\t\t\t\t}\n\t\t\t\tlocal block = spawnObject(params)\n\t\t\t\tblock.setColorTint(stringColorToRGB(player))\n\t\t\t\tblock.setLock(true)\n\t\t\t\tforceObjectToPlayer(block, player, {forward = 7, right = 0, up = 0, forceHeight = 1.09}, FACE_UP_ROT)\n\t\t\tend\n\t\t\t-- Player Status Buttons\n\t\t\tlocal paramsStatus = {\n\t\t\t\ttype = 'backgammon_piece_white',\n\t\t\t\tposition = {-100, 100, -100},\n\t\t\t\tcallback = 'statusButtonCallback',\n\t\t\t\tsound = false\n\t\t\t}\n\t\t\tlocal buttonStatusBase = spawnObject(paramsStatus)\n\t\t\tbuttonStatusBase.setName(player)\n\t\t\tbuttonStatusBase.setColorTint(stringColorToRGB(player))\n\t\t\tbuttonStatusBase.setLock(true)\n\t\t\tforceObjectToPlayer(buttonStatusBase, player, {forward = 11, right = -8.5, up = 0, forceHeight = 1.09}, FACE_UP_ROT)\n\t\tend\n\tend\n\tif options.zoneType == 6 then -- Tan and Maroon\n\t\tlocal paramsStatus = {\n\t\t\ttype = 'backgammon_piece_white',\n\t\t\tcallback = 'statusButtonCallback',\n\t\t\tsound = false\n\t\t}\n\t\tfor _, color in ipairs(GREY_PLAYABLE_COLORS) do\n\t\t\tif greyPlayerSteamIds[color] then\n\t\t\t\ttable.insert(players, 1, color)\n\t\t\t\tlocal buttonStatusBase = spawnObject(paramsStatus)\n\t\t\t\tbuttonStatusBase.setName(color)\n\t\t\t\tbuttonStatusBase.setColorTint(stringColorToRGBExtra(color))\n\t\t\t\tbuttonStatusBase.setRotation({0, 180, 0})\n\t\t\t\tbuttonStatusBase.setLock(true)\n\t\t\t\tforceObjectToPlayer(buttonStatusBase, color, {forward = 11, right = -8.5, up = 0, forceHeight = 1.09}, FACE_UP_ROT)\n\t\t\telse\n\t\t\t\tdestroyObjectByGUID(greyPlayerHandGuids[color])\n\t\t\tend\n\t\tend\n\tend\n\tif #players > 10 then\n\t\ttable.insert(fascist_deck_guids, 1, fascist_deck_extra_guid)\n\telse\n\t\tdestroyObjectByGUID(fascist_deck_extra_guid)\n\tend\n\tif #players > 11 then\n\t\ttable.insert(liberal_deck_guids, 1, liberal_deck_extra_guid)\n\telse\n\t\tdestroyObjectByGUID(liberal_deck_extra_guid)\n\tend\n\n\t--Expansion\n\tlocal abilitiesDeck = getDeckFromZoneByGUID(ABILITIESPILE_ZONE_GUID)\n\tif abilitiesDeck then\n\t\tabilitiesDeck.randomize()\n\t\tfor _, player in pairs(players) do\n\t\t\tif greyPlayer(player) then\n\t\t\t\tfor i = 1, options.expansionAmount, 1 do\n\t\t\t\t\tlocal params = {}\n\t\t\t\t\tlocal card = abilitiesDeck.takeObject(params)\n\t\t\t\t\tif card then\n\t\t\t\t\t\tgiveObjectToPlayer(card, player, {forward = GREY_FORWARD, right = GREY_EXPANSION_RIGHT, up = GREY_UP}, FACE_DOWN_ROT, false, true)\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\telse\n\t\t\t\tabilitiesDeck.deal(options.expansionAmount, player)\n\t\t\tend\n\t\tend\n\t\tif bit32.band(options.expansionOptionEnabled, 8) == 8 then\n\t\t\tWait.frames(function() setupPowerAbilities(abilitiesDeck) end, 2)\n\t\tend\n\telse\n\t\tlocal tmpZone = getObjectFromGUID(ABILITIESPILE_ZONE_GUID)\n\t\tif tmpZone then\n\t\t\tlocal inZone = tmpZone.getObjects()\n\t\t\tfor _, j in ipairs(inZone) do\n\t\t\t\tdestroyObject(j)\n\t\t\tend\n\t\t\tdestroyObject(tmpZone)\n\t\tend\n\t\ttmpZone = getObjectFromGUID(EFFECTSPILE_ZONE_GUID)\n\t\tif tmpZone then\n\t\t\tinZone = tmpZone.getObjects()\n\t\t\tfor _, j in ipairs(inZone) do\n\t\t\t\tdestroyObject(j)\n\t\t\tend\n\t\t\tdestroyObject(tmpZone)\n\t\tend\n\tend\n\n\t--spawn note taker(s)\n\tlocal params = {position = {-100, 100, -100}, sound = false}\n\tif options.noteType == 1 then\n\t\tparams.type = 'Chess_Board'\n\t\tparams.scale = {1.55, 1.55, 1.55}\n\telseif options.noteType == 2 then\n\t\tparams.type = 'Go_Board'\n\t\tparams.scale = {1.45, 1.45, 1.45}\n\telseif options.noteType == 3 then\n\t\tparams.type = 'Checker_Board'\n\t\tparams.scale = {1.55, 1.55, 1.55}\n\telseif options.noteType == 4 then\n\t\tparams.type = 'reversi_board'\n\t\tparams.scale = {1.45, 1.45, 1.45}\n\telseif options.noteType == 5 then\n\t\tparams.type = 'Custom_Board'\n\t\tparams.scale = {1, 1, 1}\n\telseif options.noteType == 6 then\n\t\tparams.type = 'Custom_Model'\n\t\tparams.scale = {1.05, 1.05, 1.05}\n\telseif options.noteType > 6 then\n\t\tparams.type = 'backgammon_board'\n\t\tparams.scale = {1.8, 1.8, 1.8}\n\tend\n\tfor _, player in pairs(players) do\n\t\tif not greyPlayer(player) then\n\t\t\tif Player[player].admin or options.noteType > 6 then\n\t\t\t\tlocal notetaker = spawnObject(params)\n\t\t\t\tif options.noteType < 7 then\n\t\t\t\t\tnotetaker.setLuaScript(newNoteTakerLuaScript(player, 'true', 'false', 'false', 'false', 'false', 'true'))\n\t\t\t\telseif options.noteType == 7 then\n\t\t\t\t\tnotetaker.setLuaScript(newNoteTakerLuaScript(player, 'false', 'false', 'false', 'false', 'false', 'false'))\n\t\t\t\telseif options.noteType == 8 then\n\t\t\t\t\tnotetaker.setLuaScript(newNoteTakerLuaScript(player, 'false', 'true', 'false', 'false', 'false', 'false'))\n\t\t\t\tend\n\t\t\t\tif options.noteType == 5 then\n\t\t\t\t\tlocal custom = {}\n\t\t\t\t\tcustom.image = 'http://cloud-3.steamusercontent.com/ugc/486766424829587499//FDF54ECD5D1706DE0A590239E84D62CDE757FE46/'\n\t\t\t\t\tnotetaker.setCustomObject(custom)\n\t\t\t\telseif options.noteType == 6 then\n\t\t\t\t\t\tlocal custom = {}\n\t\t\t\t\t\tcustom.diffuse = 'http://cloud-3.steamusercontent.com/ugc/478894184492866532/6639B6E1AB511AB10D53DB91B2A47A0A63410DDF/'\n\t\t\t\t\t\tcustom.mesh = 'http://cloud-3.steamusercontent.com/ugc/478894184492865468/51C18F993BBDD5D1B55FE5261A625B2CE0B2FD9F/'\n\t\t\t\t\t\tcustom.type = 4\n\t\t\t\t\t\tcustom.material = 3\n\t\t\t\t\t\tnotetaker.setCustomObject(custom)\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\n\t--destroy the settings pannel\n\tdestroyObjectByGUID(settingsPannel_guid)\n\n\tlocal numFascists = 0\n\n\t--figure out number of fascists\n\tif #players > 10 then\n\t\tnumFascists = 4\n\telseif #players > 8 then\n\t\tnumFascists = 3\n\telseif #players > 6 then\n\t\tnumFascists = 2\n\telse\n\t\tnumFascists = 1\n\tend\n\n\tprintToAll( #players .. ' player game starting!', {1,1,1})\n\n\tlocal fascistDecks = {}\n\tlocal liberalDecks = {}\n\n\tfor i = 1, #fascist_deck_guids do\n \t\tfascistDecks[i] = getObjectFromGUID(fascist_deck_guids[i])\n \tend\n \tfor i = 1, #liberal_deck_guids do\n \t\tliberalDecks[i] = getObjectFromGUID(liberal_deck_guids[i])\n \tend\n\n\tshuffleTable(fascistDecks)\n\tshufflePosition(fascistDecks)\n\tshuffleTable(liberalDecks)\n\tshufflePosition(liberalDecks)\n\n\twait(5)\n\n\t--Figure out which decks we're using\n\tlocal player_decks = {}\n\tfor i = 1, #players do\n\t\tif i == 1 then\n\t\t\tplayer_decks[i] = getObjectFromGUID(hitler_deck_guid)\n\t\telseif i <= numFascists+1 then\n\t\t\tplayer_decks[i] = fascistDecks[i-1]\n\t\telse\n\t\t\tplayer_decks[i] = liberalDecks[i-numFascists-1]\n\t\tend\n\tend\n\n\t--Cleanup Extra Cards\n\tfor i = numFascists + 1, #fascist_deck_guids do\n\t\tdestroyObject(fascistDecks[i])\n\tend\n\tfor i = #players - numFascists, #liberal_deck_guids do\n\t\tdestroyObject(liberalDecks[i])\n\tend\n\n\t--Shuffle Roles/Players\n\tshuffleTable(player_decks)\n\tshufflePosition(player_decks)\n\tshuffleTable(players)\n\n\twait(5)\n\n\t--Deal the Cards\n\tfor i, player in ipairs(players) do\n\t\tfor j = 1, #player_decks[i].getObjects() do\n\t\t\tlocal params = {}\n\t\t\tlocal card = player_decks[i].takeObject(params)\n\n\t\t\tlocal description = card.getDescription()\n\t\t\tlocal offset = 0;\n\n\t\t\tif description == 'Hitler Role Card' then\n\t\t\t\troles[player] = 'hitler'\n\t\t\t\ttable.insert(hitler, 1, player)\n\t\t\t\toffset = -2\n\t\t\telseif description == 'Fascist Role Card' then\n\t\t\t\troles[player] = 'fascist'\n\t\t\t\ttable.insert(fascists, 1, player)\n\t\t\t\toffset = -2\n\t\t\telseif description == 'Liberal Role Card' then\n\t\t\t\troles[player] = 'liberal'\n\t\t\t\toffset = -2\n\t\t\telseif description == 'Fascist Party Card' or\n\t\t\t\tdescription == 'Liberal Party Card' then\n\t\t\t\toffset = -1\n\t\t\t\tif options.dealPartyCards then\n\t\t\t\t\tif greyPlayer(player) then\n\t\t\t\t\t\tgiveObjectToPlayer(card, player, {forward = GREY_FORWARD, right = GREY_RIGHT, up = GREY_UP}, FACE_DOWN_ROT, false, true)\n\t\t\t\t\telse\n\t\t\t\t\t\tgiveObjectToPlayer(card, player, {forward = 0, right = offset, up = 0}, FACE_DOWN_ROT, false, true)\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\tdestroyObject(card)\n\t\t\t\tend\n\t\t\telseif description == 'Ja Card' then\n\t\t\t\tcard.setDescription(player .. '\\'s Ja Card')\n\t\t\t\tcard.setLuaScript(\n\t\t\t\t\t'collision = false -- workaround for rewind error\\r\\n' ..\n\t\t\t\t\t'\\r\\n' ..\n\t\t\t\t\t'function onObjectSpawn(spawnObject)\\r\\n' ..\n\t\t\t\t\t'\tGlobal.call(\\'callFunction\\', {fcn = \\'addJaCard\\', params = {self}})\\r\\n' ..\n\t\t\t\t\t'end\\r\\n' ..\n\t\t\t\t\t'\\r\\n' ..\n\t\t\t\t\t'function onDrop(playerColor)\\r\\n' ..\n\t\t\t\t\t'\tlocal options = Global.getTable(\\'options\\')\\r\\n' ..\n\t\t\t\t\t'\tif options.scriptedVoting then\\r\\n' ..\n\t\t\t\t\t'\t\tcollision = true\\r\\n' ..\n\t\t\t\t\t'\t\tGlobal.call(\\'createVoteWait\\')\\r\\n' ..\n\t\t\t\t\t'\tend\\r\\n' ..\n\t\t\t\t\t'end\\r\\n' ..\n\t\t\t\t\t'\\r\\n' ..\n\t\t\t\t\t'function onCollisionEnter(collisionInfo)\\r\\n' ..\n\t\t\t\t\t'\tlocal options = Global.getTable(\\'options\\')\\r\\n' ..\n\t\t\t\t\t'\tif collision and options.scriptedVoting then\\r\\n' ..\n\t\t\t\t\t'\t\tGlobal.call(\\'createVoteWait\\')\\r\\n' ..\n\t\t\t\t\t'\tend\\r\\n' ..\n\t\t\t\t\t'end\\r\\n')\n\t\t\t\tcard.setScale({1.51, 1, 1.51})\n\t\t\t\toffset = 1\n\t\t\t\tif greyPlayer(player) then\n\t\t\t\t\tgiveObjectToPlayer(card, player, {forward = GREY_FORWARD, right = GREY_RIGHT, up = GREY_UP}, FACE_DOWN_ROT, false, true)\n\t\t\t\telse\n\t\t\t\t\tgiveObjectToPlayer(card, player, {forward = 0, right = offset, up = 0}, FACE_DOWN_ROT, false, true)\n\t\t\t\tend\n\t\t\telseif description == 'Nein Card' then\n\t\t\t\tcard.setDescription(player .. '\\'s Nein Card')\n\t\t\t\tcard.setLuaScript(\n\t\t\t\t\t'collision = false -- workaround for rewind error\\r\\n' ..\n\t\t\t\t\t'\\r\\n' ..\n\t\t\t\t\t'function onObjectSpawn(spawnObject)\\r\\n' ..\n\t\t\t\t\t'\tGlobal.call(\\'callFunction\\', {fcn = \\'addNeinCard\\', params = {self}})\\r\\n' ..\n\t\t\t\t\t'end\\r\\n' ..\n\t\t\t\t\t'\\r\\n' ..\n\t\t\t\t\t'function onDrop(playerColor)\\r\\n' ..\n\t\t\t\t\t'\tlocal options = Global.getTable(\\'options\\')\\r\\n' ..\n\t\t\t\t\t'\tif options.scriptedVoting then\\r\\n' ..\n\t\t\t\t\t'\t\tcollision = true\\r\\n' ..\n\t\t\t\t\t'\t\tGlobal.call(\\'createVoteWait\\')\\r\\n' ..\n\t\t\t\t\t'\tend\\r\\n' ..\n\t\t\t\t\t'end\\r\\n' ..\n\t\t\t\t\t'\\r\\n' ..\n\t\t\t\t\t'function onCollisionEnter(collisionInfo)\\r\\n' ..\n\t\t\t\t\t'\tlocal options = Global.getTable(\\'options\\')\\r\\n' ..\n\t\t\t\t\t'\tif collision and options.scriptedVoting then\\r\\n' ..\n\t\t\t\t\t'\t\tGlobal.call(\\'createVoteWait\\')\\r\\n' ..\n\t\t\t\t\t'\tend\\r\\n' ..\n\t\t\t\t\t'end\\r\\n')\n\t\t\t\tcard.setScale({1.51, 1, 1.51})\n\t\t\t\toffset = 2\n\t\t\t\tif greyPlayer(player) then\n\t\t\t\t\tgiveObjectToPlayer(card, player, {forward = GREY_FORWARD, right = GREY_RIGHT, up = GREY_UP}, FACE_DOWN_ROT, false, true)\n\t\t\t\telse\n\t\t\t\t\tgiveObjectToPlayer(card, player, {forward = 0, right = offset, up = 0}, FACE_UP_ROT, false, true)\n\t\t\t\tend\n\t\t\tend\n\t\t\tif offset == -2 then\n\t\t\t\tif options.dealRoleCards then\n\t\t\t\t\tif greyPlayer(player) then\n\t\t\t\t\t\tgiveObjectToPlayer(card, player, {forward = GREY_FORWARD, right = GREY_RIGHT, up = GREY_UP}, FACE_DOWN_ROT, false, true)\n\t\t\t\t\telse\n\t\t\t\t\t\tgiveObjectToPlayer(card, player, {forward = 0, right = offset, up = 0}, FACE_DOWN_ROT, false, true)\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\tlocal tmpGUID = player_decks[i].getVar('displayGuid')\n\t\t\t\t\tif not tmpGUID then\n\t\t\t\t\t\ttmpGUID = string.format('%06x', tonumber(card.getGUID(), 16) + 1)\n\t\t\t\t\tend\n\t\t\t\t\tplayerRoleCardGuids[player] = tmpGUID\n\t\t\t\t\tdestroyObject(card)\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\n\tmainNotes = 'For long games the old notes will be\\nremoved automatically by the note taker.\\nThis is functionality does not work well when\\nenabling player names in the notes.\\n\\n'\n\tmainNotes = mainNotes .. 'Only the president can draw cards.\\n\\nTo topdeck a card move the election tracker\\nto the \\34REVEAL & PASS TOP POLICY\\34 circle.\\n\\n'\n\tif not options.dealRoleCards then\n\t\tmainNotes = mainNotes .. '[FFFF00]No role cards will be dealt.[-]\\n\\n'\n\tend\n\tif not options.dealPartyCards then\n\t\tmainNotes = mainNotes .. '[FFFF00]No party membership cards will be dealt.[-]\\n\\n'\n\tend\n\tmainNotes = mainNotes .. 'There are [0000FF][b]' .. #players - #fascists - #hitler .. ' ' .. string.upper(text.liberal) .. 'S[/b][-]\\nagainst '\n\tif #fascists > 0 then\n\t\tmainNotes = mainNotes .. '[FF0000][b]' .. #fascists .. ' ' .. string.upper(text.fascist) .. '[/b][-]'\n\tend\n\tif #hitler > 1 and #fascists > 0 then\n\t\tmainNotes = mainNotes .. ','\n\tend\n\tif #hitler > 1 then\n\t\tmainNotes = mainNotes .. ' [FF0000][b]' .. #hitler - 1 .. ' FAKE ' .. string.upper(text.hitler)\n\tend\n\tif #hitler == 2 then\n\t\tmainNotes = mainNotes .. '[/b][-]'\n\telseif #hitler > 2 then\n\t\tmainNotes = mainNotes .. 'S[/b][-]'\n\tend\n\tmainNotes = mainNotes .. ' and [FF0000][b]' .. string.upper(text.hitler) .. '[/b][-].\\n'\n\tmainNotes = mainNotes .. string.upper(text.hitler)\n\tif #players < 7 then\n\t\tmainNotes = mainNotes .. ' [b]knows[/b] who the '\n\telse\n\t\tmainNotes = mainNotes .. ' [b]doesn\\'t know[/b] who the '\n\tend\n\tmainNotes = mainNotes .. string.upper(text.fascist) .. 'S are.\\n\\n'\n\tsetNotes(mainNotes)\n\n\t-- Pick a random first president\n\tlocal randomPlayer = math.random(#players)\n\tlocal president = getObjectFromGUID(PRESIDENT_GUID)\n\tlocal pos = president.getPosition()\n\tpresident.setVar('lastPres', players[randomPlayer])\n\tpresident.setPositionSmooth({0, pos['y']+7, 0})\n\tlocal chancelor = getObjectFromGUID(CHANCELOR_GUID)\n\tpos = chancelor.getPosition()\n\tchancelor.setPositionSmooth({0, pos['y']+14, 0})\n\n\t-- Policy card setup\n\tfor i = 1, options.liberalCards do\n\t\tspawnLiberalPolicy(getPositionByGUID(DRAW_ZONE_GUID), FACE_DOWN_ROT)\n\tend\n\tfor i = 1, options.fascistCards do\n\t\tspawnFascistPolicy(getPositionByGUID(DRAW_ZONE_GUID), FACE_DOWN_ROT)\n\tend\n\tfor i = 1, options.greyCards do\n\t\tspawnGreyPolicy(getPositionByGUID(DRAW_ZONE_GUID), FACE_DOWN_ROT)\n\tend\n\n\tsleep(0.5)\n\n\t-- Tell everyone their role\n\tprintToAll('--------------------------------------', {1,1,1})\n\tfor _, color in ipairs(players) do\n\t\tif greyPlayer(color) then\n\t\t\tlocal playerObj = getPlayerObj(color)\n\t\t\tif playerObj then\n\t\t\t\tplayerObj:print(tellRole(color))\n\t\t\tend\n\t\telse\n\t\t\tPlayer[color]:print(tellRole(color))\n\t\tend\n\tend\n\tprintToAll('--------------------------------------', {1,1,1})\n\n\t-- Move and tell first pres\n\tgiveObjectToPlayer(president, players[randomPlayer], {forward = 11, right = 0, up = 0, forceHeight = 3}, NO_ROT)\n\tgiveObjectToPlayer(chancelor, players[randomPlayer], {forward = 11, right = 0, up = 0, forceHeight = 5.5}, NO_ROT)\n\tlocal hcol = stringColorToRGBExtra(players[randomPlayer])\n\tprintToAll(players[randomPlayer] .. ' is first president!', hcol)\n\tprintToAll('--------------------------------------', {1,1,1})\n\tfor _, color in ipairs(players) do\n\t\tif greyPlayer(color) then\n\t\t\tlocal playerObj = getPlayerObj(color)\n\t\t\tif playerObj then\n\t\t\t\tplayerObj:print(chatHelp(playerObj.admin))\n\t\t\tend\n\t\telse\n\t\t\tPlayer[color]:print(chatHelp(Player[color].admin))\n\t\tend\n\tend\n\n\tdeleteCustomBoardCards()\n\n\tsleep(1)\n\n\t--Shuffle the policy deck\n\tif not shuffleDrawDeck() then\n\t\tbroadcastToAll('ERROR: Unable to shuffle draw deck! Restart required.', {1,0,0})\n\t\treturn true\n\tend\n\n\t-- interactable/unlock other items\n\tpresident.setLock(false)\n\tpresident.interactable = true\n\tchancelor.setLock(false)\n\tchancelor.interactable = true\n\ttmpObj = getObjectFromGUID(ELECTION_TRACKER_GUID)\n\ttmpObj.setLock(false)\n\tif #players == 5 then\n\t\tdestroyObjectByGUID(PREV_PRESIDENT_GUID)\n\telse\n\t\ttmpObj = getObjectFromGUID(PREV_PRESIDENT_GUID)\n\t\ttmpObj.setLock(false)\n\tend\n\ttmpObj = getObjectFromGUID(PREV_CHANCELOR_GUID)\n\ttmpObj.setLock(false)\n\n\t-- Lock placed board cards\n\ttestActionUsedPolicyZones(\n\t\tfunction(p) return isBoardCard(p) or isPolicyNotUsedCard(p) end,\n\t\tfunction(p) p.setLock(true) end,\n\t\tboardCardWaitId)\n\n\t--Set the started variable to true\n\tstarted = true\n\trefreshStatusButtons()\n\trefreshUI()\n\n\treturn true\nend\n\nfunction setupPowerAbilities(abilitiesDeck)\n\tlocal tmpZoneGuid\n\tlocal params = {index = 1}\n\tlocal card\n\tfor _, tmpZoneGuid in ipairs(liberal_zone_guids) do\n\t\ttmpZone = getObjectFromGUID(tmpZoneGuid)\n\t\tif tmpZone then\n\t\t\tinZone = tmpZone.getObjects()\n\t\t\tfor _, j in ipairs(inZone) do\n\t\t\t\tif isBoardCardBelowAbility(j) then\n\t\t\t\t\tlocal pos = j.getPosition()\n\t\t\t\t\tpos[\"z\"] = pos[\"z\"] - 7.8\n\t\t\t\t\tcard = abilitiesDeck.takeObject(params)\n\t\t\t\t\tcard.setPositionSmooth(pos)\n\t\t\t\t\tcard.setRotationSmooth(FACE_UP_ROT)\n\t\t\t\telseif isBoardCardBelowHiddenAbility(j) then\n\t\t\t\t\tlocal pos = j.getPosition()\n\t\t\t\t\tpos[\"z\"] = pos[\"z\"] - 7.8\n\t\t\t\t\tcard = abilitiesDeck.takeObject(params)\n\t\t\t\t\tcard.setPositionSmooth(pos)\n\t\t\t\t\tcard.setRotationSmooth(FACE_DOWN_ROT)\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\tfor _, tmpZoneGuid in ipairs(fascist_zone_guids) do\n\t\ttmpZone = getObjectFromGUID(tmpZoneGuid)\n\t\tif tmpZone then\n\t\t\tinZone = tmpZone.getObjects()\n\t\t\tfor _, j in ipairs(inZone) do\n\t\t\t\tif isBoardCardAboveAbility(j) then\n\t\t\t\t\tlocal pos = j.getPosition()\n\t\t\t\t\tpos[\"z\"] = pos[\"z\"] + 7.7\n\t\t\t\t\tcard = abilitiesDeck.takeObject(params)\n\t\t\t\t\tcard.setPositionSmooth(pos)\n\t\t\t\t\tcard.setRotationSmooth(FACE_UP_ROT)\n\t\t\t\telseif isBoardCardAboveHiddenAbility(j) then\n\t\t\t\t\tlocal pos = j.getPosition()\n\t\t\t\t\tpos[\"z\"] = pos[\"z\"] + 7.7\n\t\t\t\t\tcard = abilitiesDeck.takeObject(params)\n\t\t\t\t\tcard.setPositionSmooth(pos)\n\t\t\t\t\tcard.setRotationSmooth(FACE_DOWN_ROT)\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\nend\n\nfunction statusButtonCallback(objIn, paramsIn)\n\ttable.insert(playerStatusButtonGuids, 1, objIn.getGUID())\nend\n\nfunction greyPlayerHandCallback(objIn, paramsIn)\n\tlocal color = string.gsub(objIn.getDescription(), ' Hand', '')\n\tgreyPlayerHandGuids[color] = objIn.getGUID()\n\tobjIn.AssetBundle.playLoopingEffect(1)\nend\n\nfunction changePlayerStatus(clickedObject, playerColor)\n\tif Player[playerColor].admin then\n\t\tlocal ownerColor = clickedObject.getName()\n\t\t_G.playerStatus[ownerColor] = _G.playerStatus[ownerColor] + 1\n\t\tlocal abilitiesDeck = getDeckFromZoneByGUID(ABILITIESPILE_ZONE_GUID)\n\t\tif not abilitiesDeck then\n\t\t\tif _G.playerStatus[ownerColor] == 3 then\n\t\t\t\t_G.playerStatus[ownerColor] = 5\n\t\t\tend\n\t\tend\n\t\t--fixme > 7 to allow Imprisoned\n\t\tif _G.playerStatus[ownerColor] > 6 then _G.playerStatus[ownerColor] = 1 end\n\t\trefreshStatusButtons()\n\telse\n\t\tprintToColor('ERROR: You are not the host or a promoted player.', playerColor, {1, 0, 0})\n\tend\nend\n\nfunction tellRole(player)\n\tlocal msg = ''\n\tif player == 'Black' then\n\t\tif #hitler == 0 and #fascists == 0 and #players > 0 then\n\t\t\tmsg = msg .. '[0080F8]Everyone is ' .. text.liberalArticle .. ' ' .. text.liberal .. '![-]\\n'\n\t\telse\n\t\t\tfor _, l in pairs(hitler) do\n\t\t\t\tmsg = msg .. '[' .. stringColorToHex(l) .. ']' .. l .. ' is ' .. text.hitler .. '!' .. '[-]\\n'\n\t\t\tend\n\t\t\tfor _, l in pairs(fascists) do\n\t\t\t\tmsg = msg .. '[' .. stringColorToHex(l) .. ']' .. l .. ' is ' .. text.fascistArticle .. ' ' .. text.fascist .. '!' .. '[-]\\n'\n\t\t\tend\n\t\tend\n\telse\n\t\tlocal role = roles[player]\n\t\tif role == 'fascist' then\n\t\t\tmsg = msg .. '[' .. stringColorToHex(player) .. ']You are ' .. text.fascistArticle .. ' [FF0000]' .. text.fascist .. '[-]![-]\\n'\n\t\t\tfor _, l in pairs(hitler) do\n\t\t\t\tmsg = msg .. '[' .. stringColorToHex(l) .. ']' .. l .. ' is ' .. text.hitler .. '!' .. '[-]\\n'\n\t\t\tend\n\t\t\tfor _, l in pairs(fascists) do\n\t\t\t\tif not (l == player) then\n\t\t\t\t\tmsg = msg .. '[' .. stringColorToHex(l) .. ']' .. l .. ' is ' .. text.fascistArticle .. ' ' .. text.fascist .. ', too!' .. '[-]\\n'\n\t\t\t\tend\n\t\t\tend\n\t\telseif role == 'hitler' then\n\t\t\tmsg = msg .. '[' .. stringColorToHex(player) .. ']You are [FF0000]' .. text.hitler .. '[-]![-]\\n'\n\t\t\tif #players < 7 then\n\t\t\t\tfor _, l in pairs(hitler) do\n\t\t\t\t\tif not (l == player) then\n\t\t\t\t\t\tmsg = msg .. '[' .. stringColorToHex(l) .. ']' .. l .. ' is also ' .. text.hitler .. '!' .. '[-]\\n'\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\t\tfor _, l in pairs(fascists) do\n\t\t\t\t\tmsg = msg .. '[' .. stringColorToHex(l) .. ']' .. l .. ' is ' .. text.fascistArticle .. ' ' .. text.fascist .. '!' .. '[-]\\n'\n\t\t\t\tend\n\t\t\tend\n\t\telseif role == 'liberal' then\n\t\t\tmsg = msg .. '[' .. stringColorToHex(player) .. ']You are ' .. text.liberalArticle .. ' [0080F8]' .. text.liberal .. '[-]![-]\\n'\n\t\telse\n\t\t\tmsg = msg .. player .. ' is not Playing!\\n'\n\t\tend\n\tend\n\n\treturn string.gsub(msg, '\\n$', '')\nend\n\nfunction shuffleDrawDeck()\n\tlocal drawDeck = getDeckFromZoneByGUID(DRAW_ZONE_GUID)\n\tif drawDeck then\n\t\tdrawDeck.shuffle()\n\t\treturn true\n\tend\n\n\treturn false\nend\n\nfunction disableSecurity()\n\tstartLuaCoroutine(Global, 'disableSecurityCoroutine')\nend\n\nfunction disableSecurityCoroutine()\n\tlocal allObjs = getAllObjects()\n\tlocal tmpObj\n\n\tGlobal.setVar('hold', true)\n\tbroadcastToAll('WARNING: Security has been disabled for 30 seconds!', {1,0,0})\n\tfor _, tmpObj in ipairs(allObjs) do\n\t\tif isPolicyCard(tmpObj) then\n\t\t\ttmpObj.interactable = true\n\t\telseif tmpObj.tag == 'Deck' then\n\t\t\ttmpObj.interactable = true\n\t\tend\n\tend\n\tsleep(30)\n\n\t--Expansion\n\ttmpObj = getDeckFromZoneByGUID(ABILITIESPILE_ZONE_GUID)\n\tif tmpObj then tmpObj.interactable = false end\n\ttmpObj = getDeckFromZoneByGUID(EFFECTSPILE_ZONE_GUID)\n\tif tmpObj then\ttmpObj.interactable = false end\n\n\tGlobal.setVar('hold', false)\n\n\treturn true\nend\n\nfunction createInspectButtons(powerHolder)\n\tfunction createInspectButtonsCoroutine()\n\t\tlocal membershipCard = getObjectFromGUID(fakeMembership_card_guid)\n\t\tif membershipCard then\n\t\t\tactivePowerColor = powerHolder\n\t\t\tif greyPlayer(powerHolder) then\n\t\t\t\tsmartBroadcastToColor('Use the UI to inspect a player.', powerHolder, {1, 1, 1})\n\t\t\telse\n\t\t\t\tbroadcastToColor('Click on the party membership card of the person you want to inspect.', powerHolder, {1, 1, 1})\n\t\t\tend\n\t\t\tfor i, playerColor in ipairs(players) do\n\t\t\t\tif playerColor ~= powerHolder and not inTable(inspected, playerColor) and not (_G.playerStatus[playerColor] > 4) then\n\t\t\t\t\tlocal params = {rotation = {0, 0, 180}, sound = false}\n\t\t\t\t\tcard = membershipCard.clone(params)\n\t\t\t\t\tcard.setDescription('Fake Party Card')\n\t\t\t\t\tcard.setLuaScript(\n\t\t\t\t\t\t'playerColor = \\'' .. playerColor .. '\\'\\r\\n\\r\\n' ..\n\t\t\t\t\t\t'function onCollisionEnter(collision_info)\\r\\n' ..\n\t\t\t\t\t\t'\tif Global.call(\\'greyPlayer\\', {playerColor}) then\\r\\n' ..\n\t\t\t\t\t\t'\t\t--hard coded\\r\\n' ..\n\t\t\t\t\t\t'\t\tself.setRotation({0, 180, 180})\\r\\n' ..\n\t\t\t\t\t\t'\telse\\r\\n' ..\n\t\t\t\t\t\t'\t\tlocal ph = Player[playerColor].getPlayerHand()\\r\\n' ..\n\t\t\t\t\t\t'\t\tif ph then\\r\\n' ..\n\t\t\t\t\t\t'\t\t\tself.setRotation({0, ph[\\'rot_y\\']+180, 180})\\r\\n' ..\n\t\t\t\t\t\t'\t\tend\\r\\n' ..\n\t\t\t\t\t\t'\tend\\r\\n' ..\n\t\t\t\t\t\t'\tself.setLock(true)\\r\\n' ..\n\t\t\t\t\t\t'end\\r\\n\\r\\n' ..\n\t\t\t\t\t\t'function onLoad(saveString)\\r\\n' ..\n\t\t\t\t\t\t'\tlocal button = {}\\r\\n' ..\n\t\t\t\t\t\t'\tbutton.click_function = \\'' .. playerColor .. 'Inspected\\'\\r\\n' ..\n\t\t\t\t\t\t'\tbutton.label = \\'Inspect\\\\n' .. playerColor .. '\\'\\r\\n' ..\n\t\t\t\t\t\t'\tbutton.function_owner = Global\\r\\n' ..\n\t\t\t\t\t\t'\tbutton.position = {0, 3, 0}\\r\\n' ..\n\t\t\t\t\t\t'\tbutton.rotation = {0, 0, 180}\\r\\n' ..\n\t\t\t\t\t\t'\tbutton.width = 1000\\r\\n' ..\n\t\t\t\t\t\t'\tbutton.height = 1500\\r\\n' ..\n\t\t\t\t\t\t'\tbutton.font_size = 150\\r\\n' ..\n\t\t\t\t\t\t'\tself.createButton(button)\\r\\n' ..\n\t\t\t\t\t\t'end')\n\t\t\t\t\tcard.setPosition({0, 30 + (i * 0.25), 0})\n\t\t\t\t\tcard.setLock(false)\n\t\t\t\t\twait(5)\n\t\t\t\t\tgiveObjectToPlayer(card, playerColor, {forward = 16.5, right = 0, up = 0}, FACE_DOWN_ROT, false, true)\n\t\t\t\tend\n\t\t\tend\n\t\telse\n\t\t\tprintToAll('ERROR: Base membership card not found.', {1,0,0})\n\t\tend\n\n\t\treturn true\n\tend\n\tstartLuaCoroutine(Global, 'createInspectButtonsCoroutine')\nend\n\nfunction playerInspected(clickedObject, inspectorColor, checkedColor)\n\tif inspectorColor == activePowerColor and needInspect() then\n\t\tlocal role = roles[checkedColor]\n\t\tlocal playerColor = stringColorToRGBExtra(checkedColor)\n\t\tlocal roleText\n\t\tlocal roleColor\n\t\tif role == 'hitler' or role == 'fascist' then\n\t\t\troleText = text.fascistArticle .. ' ' .. string.lower(text.fascist)\n\t\t\troleColor = {1, 0, 0}\n\t\telse\n\t\t\troleText = text.liberalArticle .. ' ' .. string.lower(text.liberal)\n\t\t\troleColor = {0.1, 0.3, 1}\n\t\tend\n\t\tprintToAll(inspectorColor .. ' inspected ' .. checkedColor, playerColor)\n\t\tsmartBroadcastToColor(checkedColor .. ' is ' .. roleText .. '!', inspectorColor, roleColor)\n\t\ttable.insert(inspected, 1, checkedColor)\n\t\tremoveInspect()\n\t\tif options.autoNotate and notate.line and notate.action == 'inspects' then\n\t\t\tnoteTakerNotes[notate.line].color2 = checkedColor\n\t\t\trefreshNotes(nil)\n\t\t\tnotate.line = nil\n\t\t\tnotate.action = ''\n\t\tend\n\t\tactivePowerColor = nil\n\tend\nend\n\nfunction WhiteInspected(clickedObject, inspectorColor)\n\tplayerInspected(clickedObject, inspectorColor, 'White')\nend\n\nfunction BrownInspected(clickedObject, inspectorColor)\n\tplayerInspected(clickedObject, inspectorColor, 'Brown')\nend\n\nfunction RedInspected(clickedObject, inspectorColor)\n\tplayerInspected(clickedObject, inspectorColor, 'Red')\nend\n\nfunction OrangeInspected(clickedObject, inspectorColor)\n\tplayerInspected(clickedObject, inspectorColor, 'Orange')\nend\n\nfunction YellowInspected(clickedObject, inspectorColor)\n\tplayerInspected(clickedObject, inspectorColor, 'Yellow')\nend\n\nfunction GreenInspected(clickedObject, inspectorColor)\n\tplayerInspected(clickedObject, inspectorColor, 'Green')\nend\n\nfunction TealInspected(clickedObject, inspectorColor)\n\tplayerInspected(clickedObject, inspectorColor, 'Teal')\nend\n\nfunction BlueInspected(clickedObject, inspectorColor)\n\tplayerInspected(clickedObject, inspectorColor, 'Blue')\nend\n\nfunction PurpleInspected(clickedObject, inspectorColor)\n\tplayerInspected(clickedObject, inspectorColor, 'Purple')\nend\n\nfunction PinkInspected(clickedObject, inspectorColor)\n\tplayerInspected(clickedObject, inspectorColor, 'Pink')\nend\n\nfunction TanInspected(clickedObject, inspectorColor)\n\tplayerInspected(clickedObject, inspectorColor, 'Tan')\nend\n\nfunction MaroonInspected(clickedObject, inspectorColor)\n\tplayerInspected(clickedObject, inspectorColor, 'Maroon')\nend\n\nfunction removeInspect()\n\tlocal allObjs = getAllObjects()\n\tfor _, object in ipairs(allObjs) do\n\t\tif object.tag == 'Card' and (object.getDescription() == 'Fake Party Card') then\n\t\t\tdestroyObject(object)\n\t\tend\n\tend\nend\n\nfunction needInspect()\n\tlocal allObjs = getAllObjects()\n\tfor _, object in ipairs(allObjs) do\n\t\tif object.tag == 'Card' and (object.getDescription() == 'Fake Party Card') then\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\n\nfunction giveRoleCards()\n\tif not options.dealRoleCards then\n\t\tfor i, player in ipairs(players) do\n\t\t\tlocal card = getObjectFromGUID(playerRoleCardGuids[player])\n\t\t\tif card then\n\t\t\t\tlocal pos = card.getPosition()\n\t\t\t\tlocal params = {position = {pos['x'], pos['y'] + 1 + i * 0.1, pos['z']}, sound = false}\n\t\t\t\tlocal newCard = card.clone(params)\n\t\t\t\tnewCard.interactable = true\n\t\t\t\tnewCard.setLock(false)\n\t\t\t\tif greyPlayer(player) then\n\t\t\t\t\tforceObjectToPlayer(newCard, player, {forward = GREY_FORWARD, right = GREY_RIGHT, up = GREY_UP}, FACE_DOWN_ROT)\n\t\t\t\telse\n\t\t\t\t\tforceObjectToPlayer(newCard, player, {forward = 0, right = -2, up = 0}, FACE_DOWN_ROT)\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\toptions.dealRoleCards = true\n\tend\nend\n\nfunction findUnusedColor()\n\tlocal checkList = {'Brown', 'Teal', 'Black', 'White', 'Red', 'Orange', 'Yellow', 'Green', 'Blue', 'Purple', 'Pink'}\n\n\tfor _, playerColor in ipairs(checkList) do\n\t\tif not Player[playerColor].seated then\n\t\t\treturn playerColor\n\t\tend\n\tend\nend\n\nfunction shufflePlayers()\n\tlocal blackSteamId\n\tif #getSeatedPlayers() == 10 and Player['Black'].seated then\n\t\tblackSteamId = Player['Black'].steam_id\n\t\tPlayer['Black']:changeColor('Grey')\n\t\twhile Player['Black'].seated do\n\t\t\tcoroutine.yield()\n\t\tend\n\tend\n\tswapColor = findUnusedColor()\n\n\tlocal ranColors = {}\n\tfor _, v in pairs(getSeatedPlayers()) do\n\t\tif (not Player[v].host) or options.shuffleHost then\n\t\t\ttable.insert(ranColors, 1, v)\n\t\tend\n\tend\n\tshuffleTable(ranColors)\n\n\tseatedPlayers = {}\n\tlocal j = 1\n\tfor _, v in pairs(getSeatedPlayers()) do\n\t\tif (not Player[v].host) or options.shuffleHost then\n\t\t\tlocal playerInfo = {}\n\t\t\tplayerInfo.target = ranColors[j]\n\t\t\tplayerInfo.myColor = v\n\t\t\ttable.insert(seatedPlayers, 1, playerInfo)\n\t\t\tj = j + 1\n\t\tend\n\tend\n\n\tlocal doneCount = 0\n\tlocal tryCount = #seatedPlayers\n\twhile doneCount ~= #seatedPlayers and tryCount > 0 do\n\t\tdoneCount = 0\n\t\tfor i, v in pairs(seatedPlayers) do\n\t\t\tif v.target ~= v.myColor then\n\t\t\t\tif Player[v.target].seated == false then\n\t\t\t\t\tlocal myC = v.myColor\n\t\t\t\t\tif Player[myC].seated == true then\n\t\t\t\t\t\tPlayer[myC]:changeColor(v.target)\n\t\t\t\t\t\twhile Player[myC].seated and not Player[v.target].seated do\n\t\t\t\t\t\t\tcoroutine.yield()\n\t\t\t\t\t\tend\n\t\t\t\t\t\tv.myColor = v.target\n\t\t\t\t\t\tdoneCount = doneCount + 1\n\t\t\t\t\tend\n\t\t\t\telseif Player[swapColor].seated == false then\n\t\t\t\t\tlocal myC = v.myColor\n\t\t\t\t\tif Player[myC].seated == true then\n\t\t\t\t\t\tPlayer[myC]:changeColor(swapColor)\n\t\t\t\t\t\twhile Player[myC].seated and not Player[swapColor].seated do\n\t\t\t\t\t\t\tcoroutine.yield()\n\t\t\t\t\t\tend\n\t\t\t\t\t\tv.myColor = swapColor\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\telse\n\t\t\t\tdoneCount = doneCount + 1\n\t\t\tend\n\t\tend\n\t\ttryCount = tryCount - 1\n\t\tcoroutine.yield()\n\tend\n\n\tif blackSteamId then\n\t\tfor _, p in pairs(Player.getSpectators()) do\n\t\t\tif p.steam_id == blackSteamId then\n\t\t\t\tp:changeColor('Black')\n\t\t\tend\n\t\tend\n\tend\nend\n\nfunction notateColor2ByObject(tableIn)\n\tif type(tableIn) == 'table' then\n\t\tif tableIn[1] then\n\t\t\tlocal playerColor = closestPlayer(tableIn[1], players, 18)\n\t\t\tif playerColor and notate.line then\n\t\t\t\tif noteTakerNotes[notate.line] then\n\t\t\t\t\tif noteTakerNotes[notate.line].color1 ~= playerColor then\n\t\t\t\t\t\tnoteTakerNotes[notate.line].color2 = playerColor\n\t\t\t\t\t\trefreshNotes(nil)\n\t\t\t\t\t\tnotate.line = nil\n\t\t\t\t\t\tnotate.action = ''\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\nend\n\n----#include \\SecretHitlerCE\\main.ttslua\n----#include \\SecretHitlerCE\\cardsboard.ttslua\n\r\n--Board cards\r\nTOPTHREE_STRING = \"The president examines\\nthe top three cards.\"\r\nPICKPRES_STRING = \"The president picks\\nthe next presidential\\ncandidate.\"\r\nINSPECT_STRING = \"The president\\ninvestigates a\\nplayer\\'s identity\\ncard.\"\r\nBULLET_STRING = \"The president must\\nkill a player.\"\r\nTOPCARD_STRING = \"The president examines\\nthe top card.\"\r\nIMPRISON_STRING = \"The president must\\nimprison a player.\"\r\nPRESTAKESABOVE_STRING = \"The president takes\\nthe card above.\"\r\nPRESTAKESBELOW_STRING = \"The president takes\\nthe card below.\"\r\nPRESTAKESHIDDENABOVE_STRING = \"The president takes\\nthe hidden card above.\"\r\nPRESTAKESHIDDENBELOW_STRING = \"The president takes\\nthe hidden card below.\"\r\nPRESGIVESABOVE_STRING = \"The president gives\\nthe card above\\nto another player.\"\r\nPRESGIVESBELOW_STRING = \"The president gives\\nthe card below\\nto another player.\"\r\nPRESGIVESHIDDENABOVE_STRING = \"The president gives\\nthe card above\\nto another player\\nafter examining it.\"\r\nPRESGIVESHIDDENBELOW_STRING = \"The president gives\\nthe card below\\nto another player\\nafter examining it.\"\r\nDOESNOTHING_STRING = \"The president\\ndoes nothing.\"\r\nVETO_STRING = \"Veto power is\\nunlocked.\"\r\nCHANCELLOR_STRING = \"The chancellor gets the power.\"\r\n--Policy cards\r\nLIBERALPOLICY_STRING = \"Liberal Policy\"\r\nFASCISTPOLICY_STRING = \"Fascist Policy\"\r\nGREYPOLICY_STRING = \"Grey Policy\"\r\nNOTUSED_STRING = \"Not Used\"\r\n\r\nfunction isBoardCard(objIn)\r\n\tif objIn.tag == \"Card\" and\r\n\t   (objIn.getDescription() == TOPTHREE_STRING or\r\n\t\t objIn.getDescription() == PICKPRES_STRING or\r\n\t    objIn.getDescription() == INSPECT_STRING or\r\n\t    objIn.getDescription() == BULLET_STRING or\r\n\t\t objIn.getDescription() == TOPCARD_STRING or\r\n\t\t objIn.getDescription() == IMPRISON_STRING or\r\n\t\t objIn.getDescription() == PRESTAKESABOVE_STRING or\r\n\t\t objIn.getDescription() == PRESTAKESBELOW_STRING or\r\n\t\t objIn.getDescription() == PRESTAKESHIDDENABOVE_STRING or\r\n\t\t objIn.getDescription() == PRESTAKESHIDDENBELOW_STRING or\r\n\t\t objIn.getDescription() == PRESGIVESABOVE_STRING or\r\n\t\t objIn.getDescription() == PRESGIVESBELOW_STRING or\r\n\t\t objIn.getDescription() == PRESGIVESHIDDENABOVE_STRING or\r\n\t\t objIn.getDescription() == PRESGIVESHIDDENBELOW_STRING or\r\n\t\t objIn.getDescription() == DOESNOTHING_STRING or\r\n\t\t objIn.getDescription() == VETO_STRING or\r\n\t\t objIn.getDescription() == CHANCELLOR_STRING) then\r\n\t\treturn true\r\n\tend\r\n\treturn false\r\nend\r\n\r\nfunction isSubBoardCard(objIn)\r\n\tif objIn.tag == \"Card\" and\r\n\t   (objIn.getDescription() == VETO_STRING or\r\n\t\t objIn.getDescription() == CHANCELLOR_STRING) then\r\n\t\treturn true\r\n\tend\r\n\treturn false\r\nend\r\n\r\nfunction isBoardCardAboveAbility(objIn)\r\n\tif objIn.tag == \"Card\" and\r\n\t   (objIn.getDescription() == PRESTAKESABOVE_STRING or\r\n\t\t objIn.getDescription() == PRESGIVESABOVE_STRING) then\r\n\t\treturn true\r\n\tend\r\n\treturn false\r\nend\r\n\r\nfunction isBoardCardAboveHiddenAbility(objIn)\r\n\tif objIn.tag == \"Card\" and\r\n\t   (objIn.getDescription() == PRESTAKESHIDDENABOVE_STRING or\r\n\t\t objIn.getDescription() == PRESGIVESHIDDENABOVE_STRING) then\r\n\t\treturn true\r\n\tend\r\n\treturn false\r\nend\r\n\r\nfunction isBoardCardBelowAbility(objIn)\r\n\tif objIn.tag == \"Card\" and\r\n\t   (objIn.getDescription() == PRESTAKESBELOW_STRING or\r\n\t\t objIn.getDescription() == PRESGIVESBELOW_STRING) then\r\n\t\treturn true\r\n\tend\r\n\treturn false\r\nend\r\n\r\nfunction isBoardCardBelowHiddenAbility(objIn)\r\n\tif objIn.tag == \"Card\" and\r\n\t   (objIn.getDescription() == PRESTAKESHIDDENBELOW_STRING or\r\n\t\t objIn.getDescription() == PRESGIVESHIDDENBELOW_STRING) then\r\n\t\treturn true\r\n\tend\r\n\treturn false\r\nend\r\n\r\nfunction isBoardCardTopThree(objIn)\r\n\tif objIn.tag == \"Card\" and objIn.getDescription() == TOPTHREE_STRING then\r\n\t\treturn true\r\n\tend\r\n\treturn false\r\nend\r\n\r\nfunction isBoardCardPickPres(objIn)\r\n\tif objIn.tag == \"Card\" and objIn.getDescription() == PICKPRES_STRING then\r\n\t\treturn true\r\n\tend\r\n\treturn false\r\nend\r\n\r\nfunction isBoardCardInspect(objIn)\r\n\tif objIn.tag == \"Card\" and objIn.getDescription() == INSPECT_STRING then\r\n\t\treturn true\r\n\tend\r\n\treturn false\r\nend\r\n\r\nfunction isBoardCardBullet(objIn)\r\n\tif objIn.tag == \"Card\" and objIn.getDescription() == BULLET_STRING then\r\n\t\treturn true\r\n\tend\r\n\treturn false\r\nend\r\n\r\nfunction isBoardCardTopCard(objIn)\r\n\tif objIn.tag == \"Card\" and objIn.getDescription() == TOPCARD_STRING then\r\n\t\treturn true\r\n\tend\r\n\treturn false\r\nend\r\n\r\nfunction isBoardCardImprison(objIn)\r\n\tif objIn.tag == \"Card\" and objIn.getDescription() == IMPRISON_STRING then\r\n\t\treturn true\r\n\tend\r\n\treturn false\r\nend\r\n\r\nfunction isPolicyCard(objIn)\r\n\tif objIn.tag == \"Card\" and (objIn.getDescription() == FASCISTPOLICY_STRING\r\n\t\tor objIn.getDescription() == LIBERALPOLICY_STRING\r\n\t\tor objIn.getDescription() == GREYPOLICY_STRING)\r\n\t\tand not objIn.held_by_color then\r\n\t\treturn true\r\n\tend\r\n\treturn false\r\nend\r\n\r\nfunction isFascistPolicyCard(objIn)\r\n\tif objIn.tag == \"Card\" and objIn.getDescription() == FASCISTPOLICY_STRING\r\n\t\tand not objIn.held_by_color then\r\n\t\treturn true\r\n\tend\r\n\treturn false\r\nend\r\n\r\nfunction isLiberalPolicyCard(objIn)\r\n\tif objIn.tag == \"Card\" and objIn.getDescription() == LIBERALPOLICY_STRING\r\n\t\tand not objIn.held_by_color then\r\n\t\treturn true\r\n\tend\r\n\treturn false\r\nend\r\n\r\nfunction isGreyPolicyCard(objIn)\r\n\tif objIn.tag == \"Card\" and objIn.getDescription() == GREYPOLICY_STRING\r\n\t\tand not objIn.held_by_color then\r\n\t\treturn true\r\n\tend\r\n\treturn false\r\nend\r\n\r\nfunction isPolicyNotUsedCard(objIn)\r\n\tif objIn.tag == \"Card\" and objIn.getDescription() == NOTUSED_STRING\r\n\t\tand not objIn.held_by_color then\r\n\t\treturn true\r\n\tend\r\n\treturn false\r\nend\r\n\r\nfunction refreshBoardCards()\r\n\tif options.gameType == 2 then\r\n\t\tdeleteCustomBoardCards()\r\n\t\tspawnCustomBoardCards()\r\n\t\t-- Unlock board cards\r\n\t\ttestActionUsedPolicyZones(\r\n\t\t\tfunction(p) return isBoardCard(p) or isPolicyNotUsedCard(p) end,\r\n\t\t\tfunction(p) p.setLock(false) end,\r\n\t\t\tboardCardWaitId)\r\n\telse\r\n\t\t--delete board cards\r\n\t\tdeleteCustomBoardCards()\r\n\t\ttestActionUsedPolicyZones(\r\n\t\t\tfunction(p) return isBoardCard(p) or isPolicyNotUsedCard(p) end,\r\n\t\t\tfunction(p) p.destruct() end,\r\n\t\t\tnil)\r\n\t\tspawnNotUsedFascist(getPositionByGUIDOffsetZ(fascist_zone_guids[1], 0.1))\r\n\t\tspawnNotUsedLiberal(getPositionByGUIDOffsetZ(liberal_zone_guids[1], 0.1))\r\n\t\tif #getSeatedPlayers() > 8 then\r\n\t\t\tspawnInspectOrange(getPositionByGUIDOffsetZ(fascist_zone_guids[2], 0.1))\r\n\t\t\tspawnInspectOrange(getPositionByGUIDOffsetZ(fascist_zone_guids[3], 0.1))\r\n\t\t\tspawnPickPresOrange(getPositionByGUIDOffsetZ(fascist_zone_guids[4], 0.1))\r\n\t\telseif #getSeatedPlayers() > 6 then\r\n\t\t\tspawnInspectOrange(getPositionByGUIDOffsetZ(fascist_zone_guids[3], 0.1))\r\n\t\t\tspawnPickPresOrange(getPositionByGUIDOffsetZ(fascist_zone_guids[4], 0.1))\r\n\t\telse\r\n\t\t\tspawnTopThreeOrange(getPositionByGUIDOffsetZ(fascist_zone_guids[4], 0.1))\r\n\t\tend\r\n\t\tspawnBulletRed(getPositionByGUIDOffsetZ(fascist_zone_guids[5], 0.1))\r\n\t\tspawnBulletRed(getPositionByGUIDOffsetZ(fascist_zone_guids[6], 0.1))\r\n\t\tspawnVetoRed(getPositionByGUIDOffsetZ(fascist_zone_guids[6], -2))\r\n\t\tif boardCardWaitId then\r\n\t\t\tWait.stop(boardCardWaitId)\r\n\t\tend\r\n\t\tboardCardWaitId = Wait.time(\r\n\t\t\tfunction()\r\n\t\t\t\ttestReadyToLock(\r\n\t\t\t\t\tfunction(p)\r\n\t\t\t\t\t\treturn isBoardCard(p) or isPolicyNotUsedCard(p)\r\n\t\t\t\t\tend, boardCardWaitId)\r\n\t\t\tend, 5, -1)\r\n\tend\r\n\tlastPlayerCt = #getSeatedPlayers()\r\nend\r\n\r\nfunction testActionUsedPolicyZones(testFunc, actionFunc, waitID)\r\n\tlocal tmpZoneGuid\r\n\tif waitID then\r\n\t\tWait.stop(waitID)\r\n\tend\r\n\tfor _, tmpZoneGuid in ipairs(liberal_zone_guids) do\r\n\t\ttmpZone = getObjectFromGUID(tmpZoneGuid)\r\n\t\tif tmpZone then\r\n\t\t\tinZone = tmpZone.getObjects()\r\n\t\t\tfor _, j in ipairs(inZone) do\r\n\t\t\t\tif testFunc(j) then\r\n\t\t\t\t\tactionFunc(j)\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\n\tfor _, tmpZoneGuid in ipairs(fascist_zone_guids) do\r\n\t\ttmpZone = getObjectFromGUID(tmpZoneGuid)\r\n\t\tif tmpZone then\r\n\t\t\tinZone = tmpZone.getObjects()\r\n\t\t\tfor _, j in ipairs(inZone) do\r\n\t\t\t\tif testFunc(j) then\r\n\t\t\t\t\tactionFunc(j)\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\nend\r\n\r\nfunction testReadyToLock(testFunc, waitID)\r\n\tlocal lock = true\r\n\t--check if anything is loading\r\n\tfor _, j in pairs(getAllObjects()) do\r\n\t\tif j.loading_custom and j.tag ~= \"3D Text\" then lock = false end\r\n\tend\r\n\t--check if resting\r\n\tif lock then\r\n\t\tfor _, tmpZoneGuid in ipairs(liberal_zone_guids) do\r\n\t\t\ttmpZone = getObjectFromGUID(tmpZoneGuid)\r\n\t\t\tif tmpZone then\r\n\t\t\t\tinZone = tmpZone.getObjects()\r\n\t\t\t\tfor _, j in ipairs(inZone) do\r\n\t\t\t\t\tif testFunc(j) then\r\n\t\t\t\t\t\tif not j.resting then lock = false end\r\n\t\t\t\t\tend\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\n\tif lock then\r\n\t\tfor _, tmpZoneGuid in ipairs(fascist_zone_guids) do\r\n\t\t\ttmpZone = getObjectFromGUID(tmpZoneGuid)\r\n\t\t\tif tmpZone then\r\n\t\t\t\tinZone = tmpZone.getObjects()\r\n\t\t\t\tfor _, j in ipairs(inZone) do\r\n\t\t\t\t\tif testFunc(j) then\r\n\t\t\t\t\t\tif not j.resting then lock = false end\r\n\t\t\t\t\tend\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\n\tif lock then\r\n\t\t-- lock board cards\r\n\t\ttestActionUsedPolicyZones(\r\n\t\t\tfunction(p) return testFunc(p) end,\r\n\t\t\tfunction(p) p.setLock(true) end,\r\n\t\t\twaitID)\r\n\tend\r\nend\r\n\r\nfunction deleteCustomBoardCards()\r\n\tlocal tmpZoneGuid\r\n\tlocal inUse = {}\r\n\tfor _, tmpZoneGuid in ipairs(liberal_zone_guids) do\r\n\t\ttmpZone = getObjectFromGUID(tmpZoneGuid)\r\n\t\tif tmpZone then\r\n\t\t\tinZone = tmpZone.getObjects()\r\n\t\t\tfor _, j in ipairs(inZone) do\r\n\t\t\t\tif isBoardCard(j) or isPolicyNotUsedCard(j) then\r\n\t\t\t\t\tsmartTableInsert(inUse, j.getGUID())\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\n\tfor _, tmpZoneGuid in ipairs(fascist_zone_guids) do\r\n\t\ttmpZone = getObjectFromGUID(tmpZoneGuid)\r\n\t\tif tmpZone then\r\n\t\t\tinZone = tmpZone.getObjects()\r\n\t\t\tfor _, j in ipairs(inZone) do\r\n\t\t\t\tif isBoardCard(j) or isPolicyNotUsedCard(j) then\r\n\t\t\t\t\tsmartTableInsert(inUse, j.getGUID())\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\n\tfor _, j in pairs(getAllObjects()) do\r\n\t\tif (isBoardCard(j) or isPolicyNotUsedCard(j)) and not inTable(inUse, j.getGUID()) then\r\n\t\t\tdestroyObject(j);\r\n\t\tend\r\n\tend\r\nend\r\n\r\nfunction spawnCustomBoardCards()\r\n\tspawnTopThreeBlue({-38, 2, 19})\r\n\tspawnTopThreeOrange({-38, 2, 15})\r\n\tspawnTopThreeRed({-38, 2, 11})\r\n\tspawnInspectBlue({-34, 2, 19})\r\n\tspawnInspectOrange({-34, 2, 15})\r\n\tspawnInspectRed({-34, 2, 11})\r\n\tspawnPickPresBlue({-30, 2, 19})\r\n\tspawnPickPresOrange({-30, 2, 15})\r\n\tspawnPickPresRed({-30, 2, 11})\r\n\tspawnBulletBlue({-26, 2, 19})\r\n\tspawnBulletOrange({-26, 2, 15})\r\n\tspawnBulletRed({-26, 2, 11})\r\n\tspawnVetoBlue({-36, 2, 8})\r\n\tspawnVetoOrange({-36, 2, 6})\r\n\tspawnVetoRed({-36, 2, 4})\r\n\tspawnNotUsedLiberal({-32, 2, 6})\r\n\tspawnNotUsedFascist({-28, 2, 6})\r\n\tspawnTopCardBlue({-36, 2, 1})\r\n\tspawnTopCardOrange({-36, 2, -3})\r\n\tspawnTopCardRed({-36, 2, -7})\r\n\tspawnImprisonBlue({-32, 2, 1})\r\n\tspawnImprisonOrange({-32, 2, -3})\r\n\tspawnImprisonRed({-32, 2, -7})\r\n\tspawnDoesNothingBlue({-28, 2, 1})\r\n\tspawnDoesNothingOrange({-28, 2, -3})\r\n\tspawnDoesNothingRed({-28, 2, -7})\r\n\tspawnPresTakesBlue({-38, 2, -11})\r\n\tspawnPresTakesOrange({-38, 2, -15})\r\n\tspawnPresTakesRed({-38, 2, -19})\r\n\tspawnPresTakesHiddenBlue({-34, 2, -11})\r\n\tspawnPresTakesHiddenOrange({-34, 2, -15})\r\n\tspawnPresTakesHiddenRed({-34, 2, -19})\r\n\tspawnPresGivesBlue({-30, 2, -11})\r\n\tspawnPresGivesOrange({-30, 2, -15})\r\n\tspawnPresGivesRed({-30, 2, -19})\r\n\tspawnPresGivesHiddenBlue({-26, 2, -11})\r\n\tspawnPresGivesHiddenOrange({-26, 2, -15})\r\n\tspawnPresGivesHiddenRed({-26, 2, -19})\r\n\t--spawnChancellorBlue({-36, 2, -22})\r\n\t--spawnChancellorOrange({-32, 2, -22})\r\n\t--spawnChancellorRed({-28, 2, -22})\r\nend\r\n\r\nfunction spawnTopThreeOrange(pos)\r\n\treturn spawnBoardCard(\"10000\", TOPTHREE_STRING, pos)\r\nend\r\n\r\nfunction spawnTopThreeRed(pos)\r\n\treturn spawnBoardCard(\"10001\", TOPTHREE_STRING, pos)\r\nend\r\n\r\nfunction spawnTopThreeBlue(pos)\r\n\treturn spawnBoardCard(\"10002\", TOPTHREE_STRING, pos)\r\nend\r\n\r\nfunction spawnPickPresOrange(pos)\r\n\treturn spawnBoardCard(\"10003\", PICKPRES_STRING, pos)\r\nend\r\n\r\nfunction spawnPickPresRed(pos)\r\n\treturn spawnBoardCard(\"10004\", PICKPRES_STRING, pos)\r\nend\r\n\r\nfunction spawnPickPresBlue(pos)\r\n\treturn spawnBoardCard(\"10005\", PICKPRES_STRING, pos)\r\nend\r\n\r\nfunction spawnInspectOrange(pos)\r\n\treturn spawnBoardCard(\"10006\", INSPECT_STRING, pos)\r\nend\r\n\r\nfunction spawnInspectRed(pos)\r\n\treturn spawnBoardCard(\"10007\", INSPECT_STRING, pos)\r\nend\r\n\r\nfunction spawnInspectBlue(pos)\r\n\treturn spawnBoardCard(\"10008\", INSPECT_STRING, pos)\r\nend\r\n\r\nfunction spawnBulletOrange(pos)\r\n\treturn spawnBoardCard(\"10009\", BULLET_STRING, pos)\r\nend\r\n\r\nfunction spawnBulletRed(pos)\r\n\treturn spawnBoardCard(\"10010\", BULLET_STRING, pos)\r\nend\r\n\r\nfunction spawnBulletBlue(pos)\r\n\treturn spawnBoardCard(\"10011\", BULLET_STRING, pos)\r\nend\r\n\r\nfunction spawnTopCardOrange(pos)\r\n\treturn spawnBoardCard(\"10012\", TOPCARD_STRING, pos)\r\nend\r\n\r\nfunction spawnTopCardRed(pos)\r\n\treturn spawnBoardCard(\"10013\", TOPCARD_STRING, pos)\r\nend\r\n\r\nfunction spawnTopCardBlue(pos)\r\n\treturn spawnBoardCard(\"10014\", TOPCARD_STRING, pos)\r\nend\r\n\r\nfunction spawnImprisonOrange(pos)\r\n\treturn spawnBoardCard(\"10015\", IMPRISON_STRING, pos)\r\nend\r\n\r\nfunction spawnImprisonRed(pos)\r\n\treturn spawnBoardCard(\"10016\", IMPRISON_STRING, pos)\r\nend\r\n\r\nfunction spawnImprisonBlue(pos)\r\n\treturn spawnBoardCard(\"10017\", IMPRISON_STRING, pos)\r\nend\r\n\r\nfunction spawnPresTakesOrange(pos)\r\n\treturn spawnBoardCard(\"10018\", PRESTAKESABOVE_STRING, pos)\r\nend\r\n\r\nfunction spawnPresTakesRed(pos)\r\n\treturn spawnBoardCard(\"10019\", PRESTAKESABOVE_STRING, pos)\r\nend\r\n\r\nfunction spawnPresTakesBlue(pos)\r\n\treturn spawnBoardCard(\"10020\", PRESTAKESBELOW_STRING, pos)\r\nend\r\n\r\nfunction spawnPresTakesHiddenOrange(pos)\r\n\treturn spawnBoardCard(\"10021\", PRESTAKESHIDDENABOVE_STRING, pos)\r\nend\r\n\r\nfunction spawnPresTakesHiddenRed(pos)\r\n\treturn spawnBoardCard(\"10022\", PRESTAKESHIDDENABOVE_STRING, pos)\r\nend\r\n\r\nfunction spawnPresTakesHiddenBlue(pos)\r\n\treturn spawnBoardCard(\"10023\", PRESTAKESHIDDENBELOW_STRING , pos)\r\nend\r\n\r\nfunction spawnPresGivesOrange(pos)\r\n\treturn spawnBoardCard(\"10024\", PRESGIVESABOVE_STRING, pos)\r\nend\r\n\r\nfunction spawnPresGivesRed(pos)\r\n\treturn spawnBoardCard(\"10025\", PRESGIVESABOVE_STRING, pos)\r\nend\r\n\r\nfunction spawnPresGivesBlue(pos)\r\n\treturn spawnBoardCard(\"10026\", PRESGIVESBELOW_STRING, pos)\r\nend\r\n\r\nfunction spawnPresGivesHiddenOrange(pos)\r\n\treturn spawnBoardCard(\"10027\", PRESGIVESHIDDENABOVE_STRING, pos)\r\nend\r\n\r\nfunction spawnPresGivesHiddenRed(pos)\r\n\treturn spawnBoardCard(\"10028\", PRESGIVESHIDDENABOVE_STRING, pos)\r\nend\r\n\r\nfunction spawnPresGivesHiddenBlue(pos)\r\n\treturn spawnBoardCard(\"10029\", PRESGIVESHIDDENBELOW_STRING, pos)\r\nend\r\n\r\nfunction spawnDoesNothingOrange(pos)\r\n\treturn spawnBoardCard(\"10030\", DOESNOTHING_STRING, pos)\r\nend\r\n\r\nfunction spawnDoesNothingRed(pos)\r\n\treturn spawnBoardCard(\"10031\", DOESNOTHING_STRING, pos)\r\nend\r\n\r\nfunction spawnDoesNothingBlue(pos)\r\n\treturn spawnBoardCard(\"10032\", DOESNOTHING_STRING, pos)\r\nend\r\n\r\nfunction spawnBoardCard(cardID, desc, pos)\r\n   local params = {\r\n      json =\r\n\t\t\t\"{\" ..\r\n\t\t\t\"\\\"Name\\\": \\\"Card\\\", \" ..\r\n\t\t\t\"\\\"Transform\\\": {\\\"posX\\\": 0,\\\"posY\\\": 0,\\\"posZ\\\": 0,\\\"rotX\\\": 0,\\\"rotY\\\": 0,\\\"rotZ\\\": 0,\\\"scaleX\\\": 1,\\\"scaleY\\\": 1,\\\"scaleZ\\\": 1}, \" ..\r\n\t\t\t\"\\\"CardID\\\": \" .. cardID .. \", \" ..\r\n\t\t\t\"\\\"CustomDeck\\\": {\" ..\r\n\t\t\t\"\\\"\" .. string.sub(cardID, 1, 3) .. \"\\\": {\" ..\r\n\t\t\t\"\\\"FaceURL\\\": \\\"http://cloud-3.steamusercontent.com/ugc/809997459545222830/36C579AD5879CA194D3142C7C1940E2AE19F888E/\\\", \" ..\r\n\t\t\t\"\\\"BackURL\\\": \\\"http://cloud-3.steamusercontent.com/ugc/809997459545150312/0CAC8BEF72548FBBABB723081596771432C78476/\\\", \" ..\r\n\t\t\t\"\\\"NumWidth\\\": 10, \" ..\r\n\t\t\t\"\\\"NumHeight\\\": 7, \" ..\r\n\t\t\t\"\\\"BackIsHidden\\\": false, \" ..\r\n\t\t\t\"\\\"UniqueBack\\\": false \" ..\r\n\t\t\t\"}\" ..\r\n\t\t\t\"}\" ..\r\n\t\t\t\"}\",\r\n      position = pos,\r\n      rotation = FACE_UP_ROT,\r\n      scale = {x = 1, y = 1, z = 1},\r\n      sound = false\r\n   }\r\n\tlocal card = spawnObjectJSON(params)\r\n\tcard.setDescription(desc)\r\n\tcard.use_grid = false\r\n   return card\r\nend\r\n\r\nfunction spawnVetoOrange(pos)\r\n\treturn spawnSubBoardCard(\"10100\", VETO_STRING, pos)\r\nend\r\n\r\nfunction spawnVetoRed(pos)\r\n\treturn spawnSubBoardCard(\"10101\", VETO_STRING, pos)\r\nend\r\n\r\nfunction spawnVetoBlue(pos)\r\n\treturn spawnSubBoardCard(\"10102\", VETO_STRING, pos)\r\nend\r\n\r\nfunction spawnChancellorOrange(pos)\r\n\treturn spawnSubBoardCard(\"10103\", CHANCELLOR_STRING, pos)\r\nend\r\n\r\nfunction spawnChancellorRed(pos)\r\n\treturn spawnSubBoardCard(\"10104\", CHANCELLOR_STRING, pos)\r\nend\r\n\r\nfunction spawnChancellorBlue(pos)\r\n\treturn spawnSubBoardCard(\"10105\", CHANCELLOR_STRING, pos)\r\nend\r\n\r\nfunction spawnSubBoardCard(cardID, desc, pos)\r\n   local params = {\r\n      json =\r\n\t\t\t\"{\" ..\r\n\t\t\t\"\\\"Name\\\": \\\"Card\\\", \" ..\r\n\t\t\t\"\\\"Transform\\\": {\\\"posX\\\": 0,\\\"posY\\\": 0,\\\"posZ\\\": 0,\\\"rotX\\\": 0,\\\"rotY\\\": 0,\\\"rotZ\\\": 0,\\\"scaleX\\\": 1,\\\"scaleY\\\": 1,\\\"scaleZ\\\": 1}, \" ..\r\n\t\t\t\"\\\"CardID\\\": \" .. cardID .. \", \" ..\r\n\t\t\t\"\\\"CustomDeck\\\": {\" ..\r\n\t\t\t\"\\\"\" .. string.sub(cardID, 1, 3) .. \"\\\": {\" ..\r\n\t\t\t\"\\\"FaceURL\\\": \\\"http://cloud-3.steamusercontent.com/ugc/972100947052102628/F255D2E89C2A1D4FAA9C1AEC714802863A388D8C/\\\", \" ..\r\n\t\t\t\"\\\"BackURL\\\": \\\"http://cloud-3.steamusercontent.com/ugc/972100947052102628/F255D2E89C2A1D4FAA9C1AEC714802863A388D8C/\\\", \" ..\r\n\t\t\t\"\\\"NumWidth\\\": 3, \" ..\r\n\t\t\t\"\\\"NumHeight\\\": 2, \" ..\r\n\t\t\t\"\\\"BackIsHidden\\\": false, \" ..\r\n\t\t\t\"\\\"UniqueBack\\\": true \" ..\r\n\t\t\t\"}\" ..\r\n\t\t\t\"}\" ..\r\n\t\t\t\"}\",\r\n      position = pos,\r\n      rotation = FACE_UP_ROT,\r\n      scale = {x = 0.3, y = 1, z = 0.3},\r\n      sound = false\r\n   }\r\n\tlocal card = spawnObjectJSON(params)\r\n\tcard.setDescription(desc)\r\n\tcard.use_grid = false\r\n   return card\r\nend\r\n\r\nfunction spawnLiberalPolicy(pos, rot)\r\n\treturn spawnPolicyCard(\"10200\", LIBERALPOLICY_STRING, pos, rot, true)\r\nend\r\n\r\nfunction spawnFascistPolicy(pos, rot)\r\n\treturn spawnPolicyCard(\"10201\", FASCISTPOLICY_STRING, pos, rot, true)\r\nend\r\n\r\nfunction spawnGreyPolicy(pos, rot)\r\n\treturn spawnPolicyCard(\"10203\", GREYPOLICY_STRING, pos, rot, true)\r\nend\r\n\r\nfunction spawnNotUsedLiberal(pos)\r\n\treturn spawnPolicyCard(\"10204\", NOTUSED_STRING, pos, FACE_UP_ROT, false)\r\nend\r\n\r\nfunction spawnNotUsedFascist(pos)\r\n\treturn spawnPolicyCard(\"10205\", NOTUSED_STRING, pos, FACE_UP_ROT, false)\r\nend\r\n\r\nfunction spawnPolicyCard(cardID, desc, pos, rot, luaBool)\r\n   local params = {\r\n      json =\r\n\t\t\t\"{\" ..\r\n\t\t\t\"\\\"Name\\\": \\\"Card\\\", \" ..\r\n\t\t\t\"\\\"Transform\\\": {\\\"posX\\\": 0,\\\"posY\\\": 0,\\\"posZ\\\": 0,\\\"rotX\\\": 0,\\\"rotY\\\": 0,\\\"rotZ\\\": 0,\\\"scaleX\\\": 1,\\\"scaleY\\\": 1,\\\"scaleZ\\\": 1}, \" ..\r\n\t\t\t\"\\\"CardID\\\": \" .. cardID .. \", \" ..\r\n\t\t\t\"\\\"CustomDeck\\\": {\" ..\r\n\t\t\t\"\\\"\" .. string.sub(cardID, 1, 3) .. \"\\\": {\" ..\r\n\t\t\t\"\\\"FaceURL\\\": \\\"http://cloud-3.steamusercontent.com/ugc/968725783513761884/D20A41E646CE901CA81FC067E81072BBDA9313C4/\\\", \" ..\r\n\t\t\t\"\\\"BackURL\\\": \\\"http://cloud-3.steamusercontent.com/ugc/486767005708571374/C5FBC566556E3FBE9A6C8ACCDB2472FA911A253A/\\\", \" ..\r\n\t\t\t\"\\\"NumWidth\\\": 4, \" ..\r\n\t\t\t\"\\\"NumHeight\\\": 2, \" ..\r\n\t\t\t\"\\\"BackIsHidden\\\": false, \" ..\r\n\t\t\t\"\\\"UniqueBack\\\": false \" ..\r\n\t\t\t\"}\" ..\r\n\t\t\t\"}\" ..\r\n\t\t\t\"}\",\r\n      position = pos,\r\n      rotation = rot,\r\n      scale = {x = 1.51, y = 1, z = 1.51},\r\n      sound = false\r\n   }\r\n\tlocal card = spawnObjectJSON(params)\r\n\tcard.setDescription(desc)\r\n\tcard.use_grid = false\r\n\tif luaBool then\r\n\t\tcard.setLuaScript(\r\n\t\t\t'enabled = false -- workaround for rewind error\\r\\n' ..\r\n\t\t\t'\\r\\n' ..\r\n\t\t\t'function onDrop(playerColor)\\r\\n' ..\r\n\t\t\t'\tenabled = true\\r\\n' ..\r\n\t\t\t'\tGlobal.call(\\'createPolicyCardWait\\')\\r\\n' ..\r\n\t\t\t'end\\r\\n' ..\r\n\t\t\t'\\r\\n' ..\r\n\t\t\t'function onCollisionEnter(collisionInfo)\\r\\n' ..\r\n\t\t\t'\tif enabled then\\r\\n' ..\r\n\t\t\t'\t\tGlobal.call(\\'createPolicyCardWait\\')\\r\\n' ..\r\n\t\t\t'\tend\\r\\n' ..\r\n\t\t\t'end\\r\\n')\r\n\tend\r\n   return card\r\nend\r\n\n----#include \\SecretHitlerCE\\cardsboard.ttslua\n----#include \\SecretHitlerCE\\UI.ttslua\n\nUIActionTable = {}\nUITargetColorTable = {}\nUIPlayerNameTable = {}\nUIInputTable = {}\n\nfunction refreshUI()\n\tif options.zoneType == 6 then\n\t\tlocal abilitiesDeck = getDeckFromZoneByGUID(ABILITIESPILE_ZONE_GUID)\n\t\tif abilitiesDeck then\n\t\t\tUI.setAttribute(\"greyCommandsExp\", \"visibility\", \"Grey\")\n\t\t\tUI.setAttribute(\"greyCommands\", \"visibility\", \" \")\n\t\telse\n\t\t\tUI.setAttribute(\"greyCommands\", \"visibility\", \"Grey\")\n\t\t\tUI.setAttribute(\"greyCommandsExp\", \"visibility\", \" \")\n\t\tend\n\t\tUI.setAttribute(\"greyPolicy\", \"visibility\", \"Grey\")\n\t\tUI.setAttribute(\"greyVote\", \"visibility\", \"Grey\")\n\t\tUI.setAttribute(\"adminButton\", \"visibility\", \"Admin\")\n\t\tUI.setAttribute(\"admin\", \"visibility\", \"Admin\")\n\t\tUI.setAttribute(\"adminButton\", \"active\", \"true\")\n\tend\n\tif started then\n\t\tlocal youHitler = \" \"\n\t\tlocal youFas = \" \"\n\t\tlocal youLib = \" \"\n\t\tlocal youNotPlaying = \"Grey\"\n\t\tlocal hitWhite = \"\"\n\t\tlocal hitBrown = \"\"\n\t\tlocal hitRed = \"\"\n\t\tlocal hitOrange = \"\"\n\t\tlocal hitYellow = \"\"\n\t\tlocal hitGreen = \"\"\n\t\tlocal hitTeal = \"\"\n\t\tlocal hitBlue = \"\"\n\t\tlocal hitPurple = \"\"\n\t\tlocal hitPink = \"\"\n\t\tlocal hitTan = \"\"\n\t\tlocal hitMaroon = \"\"\n\t\tlocal fasWhite = \"\"\n\t\tlocal fasBrown = \"\"\n\t\tlocal fasRed = \"\"\n\t\tlocal fasOrange = \"\"\n\t\tlocal fasYellow = \"\"\n\t\tlocal fasGreen = \"\"\n\t\tlocal fasTeal = \"\"\n\t\tlocal fasBlue = \"\"\n\t\tlocal fasPurple = \"\"\n\t\tlocal fasPink = \"\"\n\t\tlocal fasTan = \"\"\n\t\tlocal fasMaroon = \"\"\n\n\t\tif options.zoneType == 6 then\n\t\t\tyouNotPlaying = \" \"\n\t\t\tfor _, playerColor in pairs(GREY_PLAYABLE_COLORS) do\n\t\t\t\tif roles[playerColor] == \"hitler\" then\n\t\t\t\t\tUI.setValue(\"hit\" .. playerColor, playerColor .. \" is \" .. text.hitler .. \"!\")\n\t\t\t\telseif roles[playerColor] == \"fascist\" then\n\t\t\t\t\tUI.setValue(\"fas\" .. playerColor, playerColor .. \" is \" .. text.fascistArticle .. \" \" .. text.fascist .. \"!\")\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\tfor _, playerColor in pairs(MAIN_PLAYABLE_COLORS) do\n\t\t\tUI.setAttribute(\"player\" .. playerColor, \"visibility\", playerColor)\n\t\t\tif roles[playerColor] == \"hitler\" then\n\t\t\t\tUI.setValue(\"hit\" .. playerColor, playerColor .. \" is \" .. text.hitler .. \"!\")\n\t\t\t\tif youHitler == \" \" then\n\t\t\t\t\tyouHitler = playerColor\n\t\t\t\telse\n\t\t\t\t\tyouHitler = youHitler .. \"|\" .. playerColor\n\t\t\t\tend\n\t\t\telseif roles[playerColor] == \"fascist\" then\n\t\t\t\tUI.setValue(\"fas\" .. playerColor, playerColor .. \" is \" .. text.fascistArticle .. \" \" .. text.fascist .. \"!\")\n\t\t\t\tif youFas == \" \" then\n\t\t\t\t\tyouFas = playerColor\n\t\t\t\telse\n\t\t\t\t\tyouFas = youFas .. \"|\" .. playerColor\n\t\t\t\tend\n\t\t\telseif roles[playerColor] == \"liberal\" then\n\t\t\t\tif youLib == \" \" then\n\t\t\t\t\tyouLib = playerColor\n\t\t\t\telse\n\t\t\t\t\tyouLib = youLib .. \"|\" .. playerColor\n\t\t\t\tend\n\t\t\telse\n\t\t\t\tif youNotPlaying == \" \" then\n\t\t\t\t\tyouNotPlaying = playerColor\n\t\t\t\telse\n\t\t\t\t\tyouNotPlaying = youNotPlaying .. \"|\" .. playerColor\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\thitWhite = hitVisibility(\"White\")\n\t\thitBrown = hitVisibility(\"Brown\")\n\t\thitRed = hitVisibility(\"Red\")\n\t\thitOrange = hitVisibility(\"Orange\")\n\t\thitYellow = hitVisibility(\"Yellow\")\n\t\thitGreen = hitVisibility(\"Green\")\n\t\thitTeal = hitVisibility(\"Teal\")\n\t\thitBlue = hitVisibility(\"Blue\")\n\t\thitPurple = hitVisibility(\"Purple\")\n\t\thitPink = hitVisibility(\"Pink\")\n\t\thitTan = hitVisibility(\"Tan\")\n\t\thitMaroon = hitVisibility(\"Maroon\")\n\t\tfasWhite = fasVisibility(\"White\")\n\t\tfasBrown = fasVisibility(\"Brown\")\n\t\tfasRed = fasVisibility(\"Red\")\n\t\tfasOrange = fasVisibility(\"Orange\")\n\t\tfasYellow = fasVisibility(\"Yellow\")\n\t\tfasGreen = fasVisibility(\"Green\")\n\t\tfasTeal = fasVisibility(\"Teal\")\n\t\tfasBlue = fasVisibility(\"Blue\")\n\t\tfasPurple = fasVisibility(\"Purple\")\n\t\tfasPink = fasVisibility(\"Pink\")\n\t\tfasTan = fasVisibility(\"Tan\")\n\t\tfasMaroon = fasVisibility(\"Maroon\")\n\n\t\tUI.setValue(\"youLib\", \"You are \" .. text.liberalArticle .. \" \" .. text.liberal .. \"!\")\n\t\tUI.setValue(\"youFas\", \"You are \" .. text.fascistArticle .. \" \" .. text.fascist .. \"!\")\n\t\tUI.setValue(\"youHitler\", \"You are \" .. text.hitler .. \"!\")\n\t\tUI.setAttribute(\"youLib\", \"visibility\", youLib)\n\t\tUI.setAttribute(\"youFas\", \"visibility\", youFas)\n\t\tUI.setAttribute(\"youHitler\", \"visibility\", youHitler)\n\t\tUI.setAttribute(\"youNotPlaying\", \"visibility\", youNotPlaying)\n\t\tUI.setAttribute(\"hitWhite\", \"visibility\", hitWhite)\n\t\tUI.setAttribute(\"hitBrown\", \"visibility\", hitBrown)\n\t\tUI.setAttribute(\"hitRed\", \"visibility\", hitRed)\n\t\tUI.setAttribute(\"hitOrange\", \"visibility\", hitOrange)\n\t\tUI.setAttribute(\"hitYellow\", \"visibility\", hitYellow)\n\t\tUI.setAttribute(\"hitGreen\", \"visibility\", hitGreen)\n\t\tUI.setAttribute(\"hitTeal\", \"visibility\", hitTeal)\n\t\tUI.setAttribute(\"hitBlue\", \"visibility\", hitBlue)\n\t\tUI.setAttribute(\"hitPurple\", \"visibility\", hitPurple)\n\t\tUI.setAttribute(\"hitPink\", \"visibility\", hitPink)\n\t\tUI.setAttribute(\"hitTan\", \"visibility\", hitTan)\n\t\tUI.setAttribute(\"hitMaroon\", \"visibility\", hitMaroon)\n\t\tUI.setAttribute(\"fasWhite\", \"visibility\", fasWhite)\n\t\tUI.setAttribute(\"fasBrown\", \"visibility\", fasBrown)\n\t\tUI.setAttribute(\"fasRed\", \"visibility\", fasRed)\n\t\tUI.setAttribute(\"fasOrange\", \"visibility\", fasOrange)\n\t\tUI.setAttribute(\"fasYellow\", \"visibility\", fasYellow)\n\t\tUI.setAttribute(\"fasGreen\", \"visibility\", fasGreen)\n\t\tUI.setAttribute(\"fasTeal\", \"visibility\", fasTeal)\n\t\tUI.setAttribute(\"fasBlue\", \"visibility\", fasBlue)\n\t\tUI.setAttribute(\"fasPurple\", \"visibility\", fasPurple)\n\t\tUI.setAttribute(\"fasPink\", \"visibility\", fasPink)\n\t\tUI.setAttribute(\"fasTan\", \"visibility\", fasTan)\n\t\tUI.setAttribute(\"fasMaroon\", \"visibility\", fasMaroon)\n\tend\nend\n\nfunction hitVisibility(colorIn)\n\tlocal visList = \"\"\n\n\tif inTable(hitler, colorIn) then\n\t\tvisList = \"Black\"\n\t\tfor _, playerColor in pairs(fascists) do\n\t\t\tif playerColor ~= colorIn and not inTable(GREY_PLAYABLE_COLORS, playerColor) then\n\t\t\t\tvisList = visList .. \"|\" .. playerColor\n\t\t\tend\n\t\tend\n\t\tif #players < 7 then\n\t\t\tfor _, playerColor in pairs(hitler) do\n\t\t\t\tif playerColor ~= colorIn and not inTable(GREY_PLAYABLE_COLORS, playerColor) then\n\t\t\t\t\tvisList = visList .. \"|\" .. playerColor\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\n\tif visList == \"\" then\n\t\tvisList = \" \"\n\tend\n\n\treturn visList\nend\n\nfunction fasVisibility(colorIn)\n\tlocal visList = \"\"\n\n\tif inTable(fascists, colorIn) then\n\t\tvisList = \"Black\"\n\t\tfor _, playerColor in pairs(fascists) do\n\t\t\tif playerColor ~= colorIn and not inTable(GREY_PLAYABLE_COLORS, playerColor) then\n\t\t\t\tvisList = visList .. \"|\" .. playerColor\n\t\t\tend\n\t\tend\n\t\tif #players < 7 then\n\t\t\tfor _, playerColor in pairs(hitler) do\n\t\t\t\tif playerColor ~= colorIn and not inTable(GREY_PLAYABLE_COLORS, playerColor) then\n\t\t\t\t\tvisList = visList .. \"|\" .. playerColor\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\n\tif visList == \"\" then\n\t\tvisList = \" \"\n\tend\n\n\treturn visList\nend\n\nfunction chooseChan12P(targetColor, playerColor)\n\tlocal player = getPlayerObj(playerColor)\n\tlocal currPres = getPres()\n\tif currPres == playerColor then\n\t\tlocal tmpChan = getObjectFromGUID(CHANCELOR_GUID)\n\t\tif tmpChan then giveObjectToPlayer(tmpChan, targetColor, {forward = 11, right = 0, up = 0, forceHeight = 2.8}, NO_ROT, false, false) end\n\telse\n\t\tplayer.print(\"You are not the current president.\", {1,0,0})\n\tend\nend\n\nfunction deal12P(amount, playerColor)\n\tfunction deal12PCoroutine()\n\t\tlocal drawDeck = getDeckFromZoneByGUID(DRAW_ZONE_GUID)\n\t\tlocal takeParam = {}\n\n\t\tfor i = 1, amount do\n\t\t\tlocal card = drawDeck.takeObject(takeParam)\n\t\t\tlocal cardRot = {x = 0, y = 180, z = 180, exactRot = true}\n\t\t\tgiveObjectToPlayer(card, playerColor, {forward = GREY_FORWARD, right = GREY_POLICY_RIGHT, up = GREY_UP}, cardRot, false, true)\n\t\t\tsleep(0.1)\n\t\tend\n\t\tsleep(2)\n\t\tprintPolicyCards12P(\"Draw\", playerColor)\n\t\treturn 1\n\tend\n\tstartLuaCoroutine(Global, \"deal12PCoroutine\")\nend\n\nfunction discard12P(policy, playerColor)\n\tlocal discardZone = getObjectFromGUID(DISCARD_ZONE_GUID)\n\tif discardZone then\n\t\tlocal pos = discardZone.getPosition()\n\t\tpos = {pos['x'], 2.5, pos['z']}\n\t\tlocal result = moveCard12P(nil, policy, pos, FACE_DOWN_ROT, playerColor)\n\t\tif result ~= -1 then\n\t\t\tsmartBroadcastToColor(\"You discarded a \" .. policy .. \" card.\", playerColor, {1, 1, 1})\n\t\tend\n\telse\n\t\tbroadcastToAll(\"ERROR: Discard zone not found\", {1, 0, 0})\n\tend\nend\n\nfunction givePres12P(targetColor, playerColor)\n\tlocal player = getPlayerObj(playerColor)\n\tlocal currPres = getPres()\n\tif currPres == playerColor then\n\t\tmovePlacards(targetColor, true)\n\telse\n\t\tplayer.print(\"You are not the current president.\",{1,0,0})\n\tend\nend\n\nfunction moveCard12P(name, description, pos, rot, playerColor)\n\tlocal foundIndex = nil\n\n\tlocal zoneObjs = getObjsFromZone(GREY_HAND_ZONE_GUIDS[playerColor])\n\tif #zoneObjs == nil then\n\t\tsmartBroadcastToColor(\"ERROR: No cards found in your hand.\", playerColor, {1, 0, 0})\n\t\treturn -1\n\tend\n\tif name == nil then\n\t\tfor i = 1, #zoneObjs do\n\t\t\tif string.match(zoneObjs[i].description, description) then\n\t\t\t\tfoundIndex = i\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\telse\n\t\tfor i = 1, #zoneObjs do\n\t\t\tif string.match(string.lower(zoneObjs[i].name), string.lower(name)) then\n\t\t\t\tfoundIndex = i\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\tend\n\tif foundIndex == nil then\n\t\tsmartBroadcastToColor(\"ERROR: Card not found.\", playerColor, {1, 0, 0})\n\t\treturn -1\n\tend\n\tif zoneObjs[foundIndex].deck_guid == nil then\n\t\tlocal card = getObjectFromGUID(zoneObjs[foundIndex].guid)\n\t\tcard.setPositionSmooth(pos)\n\t\tcard.setRotationSmooth(rot)\n\telse\n\t\tlocal deck = getObjectFromGUID(zoneObjs[foundIndex].deck_guid)\n\t\ttakeParam =\n\t\t{\n\t\t\tposition = pos,\n\t\t\trotation = rot,\n\t\t\tindex = zoneObjs[foundIndex].index\n\t\t}\n\t\tdeck.takeObject(takeParam)\n\tend\n\n\treturn zoneObjs[foundIndex]\nend\n\nfunction printPolicyCards12P(mode, playerColor)\n\tlocal player = getPlayerObj(playerColor)\n\tlocal zoneObjs = {}\n\tlocal policyCardStr = \"\"\n\tlocal expansionCardStr = \"Your other cards are:\"\n\tlocal outStr = \"\"\n\n\tif player then\n\t\tzoneObjs = getObjsFromZone(GREY_HAND_ZONE_GUIDS[playerColor])\n\t\tfor k, v in pairs(zoneObjs) do\n\t\t\tif v.description == \"Liberal Policy\" then\n\t\t\t\tpolicyCardStr = policyCardStr .. \"[0000FF]L[-]\"\n\t\t\telseif v.description == \"Fascist Policy\" then\n\t\t\t\tpolicyCardStr = policyCardStr .. \"[FF0000]F[-]\"\n\t\t\telseif not (string.match(v.description, \"Ja Card\") or string.match(v.description, \"Nein Card\")) then\n\t\t\t\texpansionCardStr = expansionCardStr .. \"\\n\" .. v.name\n\t\t\tend\n\t\tend\n\t\tif mode == \"Draw\" then\n\t\t\toutStr = \"You drew \" .. policyCardStr .. \".\\n\"\n\t\telseif mode == \"Check\" then\n\t\t\tif policyCardStr == \"\" then\n\t\t\t\toutStr = \"You have no policy cards.\\n\"\n\t\t\telse\n\t\t\t\toutStr = \"Your policy cards are:\" .. policyCardStr .. \"\\n\"\n\t\t\tend\n\t\tend\n\t\tif expansionCardStr == \"Your other cards are:\" or mode == \"Draw\" then\n\t\t\tbigBroadcast(outStr, player)\n\t\telse\n\t\t\tbigBroadcast(outStr .. expansionCardStr, player)\n\t\tend\n\tend\nend\n\nfunction vote12P(playerColor, voteName)\n\tfunction vote12PCoroutine()\n\t\tlocal jaCard = getObjectFromGUID(jaCardGuids[playerColor])\n\t\tlocal neinCard = getObjectFromGUID(neinCardGuids[playerColor])\n\n\t\t-- move found cards back\n\t\tif jaCard then\n\t\t\tlocal jaCardRot = {x = 0, y = 180, z = 180, exactRot = true}\n\t\t\tgiveObjectToPlayer(jaCard, playerColor, {forward = GREY_FORWARD, right = GREY_RIGHT, up = GREY_UP}, jaCardRot, false, true)\n\t\tend\n\t\tif neinCard then\n\t\t\tlocal neinCardRot = {x = 0, y = 180, z = 180, exactRot = true}\n\t\t\tgiveObjectToPlayer(neinCard, playerColor, {forward = GREY_FORWARD, right = GREY_RIGHT, up = GREY_UP}, neinCardRot, false, true)\n\t\tend\n\t\tsleep(0.1)\n\t\t-- move vote out\n\t\tmoveCard12P(nil, voteName, GREY_VOTE_POS[playerColor], FACE_DOWN_ROT, playerColor)\n\n\t\treturn 1\n\tend\n\tstartLuaCoroutine(Global, \"vote12PCoroutine\")\nend\n\nfunction playerNameUIIF(player, value, id)\n\tUIPlayerNameTable[player.steam_id] = value\nend\n\nfunction sitMaroonUIB(player, value, id)\n\tsitColorGrey(player, \"Maroon\")\nend\n\nfunction sitTanUIB(player, value, id)\n\tsitColorGrey(player, \"Tan\")\nend\n\nfunction sitColorGrey(player, color)\n\tif player.admin then\n\t\tif UIPlayerNameTable[player.steam_id] then\n\t\t\tlocal sitPlayer = getPlayerByNameSteamID(UIPlayerNameTable[player.steam_id], Player.getSpectators())\n\t\t \tif not sitPlayer then\n\t\t\t\tplayer.broadcast(UIPlayerNameTable[player.steam_id] .. \" not found or is not grey.\", {1, 0, 0})\n\t\t      return\n\t\t \tend\n\t\t\tif inTable(greyPlayerSteamIds, sitPlayer.steam_id) then\n\t\t   \tplayer.broadcast(sitPlayer.steam_name .. \" is already seated.\", {1, 0, 0})\n\t\t      return\n\t\t\tend\n\t\t\tprintToAll(sitPlayer.steam_name .. \" is color \" .. color .. \".\", GREY_PLAYABLE_COLORS_RGB[color])\n\t\t\tlocal textObj = getObjectFromGUID(GREY_TEXT_GUIDS[color])\n\t\t\ttextObj.TextTool.setValue(sitPlayer.steam_name)\n\t\t\tgreyPlayerSteamIds[color] = sitPlayer.steam_id\n\t\t\tlocal objParam = {\n\t\t\t\ttype = \"Custom_Model\",\n\t\t\t\tposition = GREY_AVATAR_POS[color],\n\t\t\t\trotation = {0, 0, 0},\n\t\t\t\tscale = {2.5, 2.5, 1},\n\t\t\t\tcallback = \"greyAvatarCallback\",\n\t\t\t\tsound = false\n\t\t\t}\n\t\t\tif greyAvatarGuids[color] then\n\t\t\t\tdestroyObjectByGUID(greyAvatarGuids[color])\n\t\t\tend\n\t\t\tlocal avatar = spawnObject(objParam)\n\t\t\tavatar.setLock(true)\n\t\t\tavatar.setDescription(color .. \" Avatar\")\n\t\t\tavatar.interactable = false\n\t\t\tlocal customParam = {\n\t\t\t\tdiffuse = generateAvatarImageUrl(sitPlayer.steam_id),\n\t\t\t\tmesh = \"http://cloud-3.steamusercontent.com/ugc/933813375177509684/900B7683E01C43C394C408BC38E034B305F1B3AA/\",\n\t\t\t\tcollider = \"http://cloud-3.steamusercontent.com/ugc/487893695356616224/E3E39A827C062914E4185D8757A81D4D14892B8B/\",\n\t\t\t\ttype = 0,\n\t\t\t\tmaterial = 3\n\t\t\t}\n\t\t\tavatar.setCustomObject(customParam)\n\t\tend\n\tend\nend\n\nfunction greyAvatarCallback(objIn, paramsIn)\n\tlocal color = string.gsub(objIn.getDescription(), \" Avatar\", \"\")\n\tgreyAvatarGuids[color] = objIn.getGUID()\nend\n\nfunction removeColorGreyUIB(player, value, id)\n\tif player.admin then\n\t\tlocal sitPlayer = getPlayerByNameSteamID(UIPlayerNameTable[player.steam_id], Player.getSpectators())\n\t \tif not sitPlayer then\n\t\t\tplayer.broadcast(UIPlayerNameTable[player.steam_id] .. \" not found or is not grey.\", {1, 0, 0})\n\t      return\n\t \tend\n\t\tlocal colorFound = getGreyColor(sitPlayer.steam_id)\n\t\tif colorFound then\n\t\t\tgreyPlayerSteamIds[colorFound] = nil\n\t\t\tdestroyObjectByGUID(greyAvatarGuids[colorFound])\n\t\t\tlocal textObj = getObjectFromGUID(GREY_TEXT_GUIDS[colorFound])\n\t\t\tif textObj then\n\t\t\t\ttextObj.TextTool.setValue(\" \")\n\t\t\tend\n\t\telse\n\t\t\tplayer.print(sitPlayer.steam_name .. \" is not seated.\")\n\t\tend\n\tend\nend\n\nfunction tellRoleButtonUIB(player, value, id)\n\tlocal colorFound = getGreyColor(player.steam_id)\n\tif colorFound then\n   \tbigBroadcast(tellRole(colorFound), player)\n\telse\n\t\tbigBroadcast(tellRole(player.color), player)\n\tend\nend\n\nfunction voteJaUIB(player, value, id)\n\tif not started then\n\t\tplayer.print(\"Game has not started.\")\n\t\treturn\n\tend\n\tlocal colorFound = getGreyColor(player.steam_id)\n\tif colorFound then\n\t\tvote12P(colorFound, \"Ja Card\")\n\telse\n\t\tplayer.print(\"You are not seated.\")\n\tend\nend\n\nfunction voteNeinUIB(player, value, id)\n\tif not started then\n\t\tplayer.print(\"Game has not started.\")\n\t\treturn\n\tend\n\tlocal colorFound = getGreyColor(player.steam_id)\n\tif colorFound then\n\t\tvote12P(colorFound, \"Nein Card\")\n\telse\n\t\tplayer.print(\"You are not seated.\")\n\tend\nend\n\nfunction voteRemoveUIB(player, value, id)\n\tif not started then\n\t\tplayer.print('Game has not started.')\n\t\treturn\n\tend\n\tlocal colorFound = getGreyColor(player.steam_id)\n\tif colorFound then\n\t\tlocal jaCard = getObjectFromGUID(jaCardGuids[colorFound])\n\t\tlocal neinCard = getObjectFromGUID(neinCardGuids[colorFound])\n\t\tif jaCard then\n\t\t\tlocal jaCardRot = {x = 0, y = 180, z = 180, exactRot = true}\n\t\t\tgiveObjectToPlayer(jaCard, colorFound, {forward = GREY_FORWARD, right = GREY_RIGHT, up = GREY_UP}, jaCardRot, false, true)\n\t\tend\n\t\tif neinCard then\n\t\t\tlocal neinCardRot = {x = 0, y = 180, z = 180, exactRot = true}\n\t\t\tgiveObjectToPlayer(neinCard, colorFound, {forward = GREY_FORWARD, right = GREY_RIGHT, up = GREY_UP}, neinCardRot, false, true)\n\t\tend\n\telse\n\t\tplayer.print('You are not seated.')\n\tend\nend\n\nfunction UIDrawCards(player, value, id)\n\tif not started then\n   \tplayer.print(\"Game has not started.\")\n\t\treturn\n\tend\n\tlocal colorFound = getGreyColor(player.steam_id)\n\tif colorFound then\n\t\tdrawThree(nil, colorFound)\n\telse\n\t\tplayer.print(\"You are not seated.\")\n\tend\nend\n\nfunction discardFUIB(player, value, id)\n\tif not started then\n\t\tplayer.print(\"Game has not started.\")\n\t\treturn\n\tend\n\tlocal colorFound = getGreyColor(player.steam_id)\n\tif colorFound then\n\t\tdiscard12P(\"Fascist Policy\", colorFound)\n   else\n\t\tplayer.print(\"You are not seated.\")\n\tend\nend\n\nfunction discardLUIB(player, value, id)\n\tif not started then\n   \tplayer.print(\"Game has not started.\")\n\t\treturn\n   end\n\tlocal colorFound = getGreyColor(player.steam_id)\n\tif colorFound then\n   \tdiscard12P(\"Liberal Policy\", colorFound)\n\telse\n   \tplayer.print(\"You are not seated.\")\n\tend\nend\n\nfunction checkCardsUIB(player, value, id)\n\tif not started then\n\t\tplayer.print(\"Game has not started.\")\n\t\treturn\n\tend\n\tlocal colorFound = getGreyColor(player.steam_id)\n\tif colorFound then\n\t\tprintPolicyCards12P(\"Check\", colorFound)\n\telse\n\t\tplayer.print(\"You are not seated.\")\n\tend\nend\n\nfunction actionUID(player, value, id)\n\tUIActionTable[player.steam_id] = value\nend\n\nfunction colorUID(player, value, id)\n\tUITargetColorTable[player.steam_id] = value\nend\n\nfunction inputUIIF(player, value, id)\n\tUIInputTable[player.steam_id] = value\nend\n\nfunction startUIB(player, value, id)\n\tif not started then\n\t\tplayer.print(\"Game has not started.\")\n\t\treturn\n\tend\n\tlocal colorFound = getGreyColor(player.steam_id)\n\tif colorFound then\n\t\tif UIActionTable[player.steam_id] == \"Choose Chancellor\" then\n\t\t\tchooseChan12P(UITargetColorTable[player.steam_id], colorFound)\n\t\telseif UIActionTable[player.steam_id] == \"Inspect Player\" then\n\t\t\tplayerInspected(nil, colorFound, UITargetColorTable[player.steam_id])\n\t\telseif UIActionTable[player.steam_id] == \"Give Presidency To\" then\n\t\t\tgivePres12P(UITargetColorTable[player.steam_id], colorFound)\n\t\telseif UIActionTable[player.steam_id] == \"Discard Ability\" then\n\t\t\tdiscardAbility(UIInputTable[player.steam_id], colorFound)\n\t\telseif UIActionTable[player.steam_id] == \"Reveal Ability\" then\n\t\t\trevealAbility(UIInputTable[player.steam_id], colorFound)\n\t\telseif UIActionTable[player.steam_id] == \"Examine Ability Deck\" then\n\t\t\texamineAbilityDeck(colorFound)\n\t\telseif UIActionTable[player.steam_id] == \"Take from Ability Deck\" then\n\t\t\ttakeAbility(UIInputTable[player.steam_id], colorFound)\n\t\telseif UIActionTable[player.steam_id] == \"Give Card to\" then\n\t\t\tgiveCardExp(UIInputTable[player.steam_id], UITargetColorTable[player.steam_id], colorFound)\n\t\tend\n \telse\n\t\tplayer.print(\"You are not seated.\")\n\tend\nend\n\nfunction discardAbility(cardName, playerColor)\n\tlocal abilityDeck = getDeckFromZoneByGUID(ABILITIESPILE_ZONE_GUID)\n\tlocal pos = abilityDeck.getPosition()\n\tlocal result = {}\n\n\tresult = moveCard12P(cardName, nil, pos, FACE_DOWN_ROT, playerColor)\n\tif result ~= -1 then\n\t\tsmartBroadcastToColor(\"You discarded \" .. result.name, playerColor, {1, 1, 1})\n\tend\nend\n\nfunction revealAbility(cardName, playerColor)\n\tlocal pos = GREY_ABILITY_POS[playerColor]\n\tlocal result = {}\n\n\tresult = moveCard12P(cardName, nil, pos, FACE_UP_ROT, playerColor)\n\tif result ~= -1 then\n\t\tbroadcastToAll(playerColor .. \" has played \" .. result.name, {1, 1, 1})\n\tend\nend\n\nfunction examineAbilityDeck(playerColor)\n\tlocal player = getPlayerObj(playerColor)\n\tlocal abilityDeck = getDeckFromZoneByGUID(ABILITIESPILE_ZONE_GUID)\n\tlocal deckString = \"\"\n\tif abilityDeck == nil then\n\t\tplayer.broadcast(\"ERROR: Ability deck not found.\", {1, 1, 1})\n\t\treturn\n\tend\n\tlocal deckTable = abilityDeck.getObjects()\n\tplayer.print(\"Cards in the ability deck:\")\n\tfor k, v in pairs(deckTable) do\n\t\tdeckString = deckString .. v.nickname .. \" \"\n\tend\n\tplayer.print(deckString)\n\tbroadcastToAll(playerColor .. \" examines the Ability deck.\", {1, 1, 1})\nend\n\nfunction takeAbility(cardName, playerColor)\n\tlocal player = getPlayerObj(playerColor)\n\tlocal foundIndex = nil\n\tlocal abilityDeck = getDeckFromZoneByGUID(ABILITIESPILE_ZONE_GUID)\n\tif abilityDeck == nil then\n\t\tplayer.broadcast(\"ERROR: Ability deck not found.\", {1, 0, 0})\n\t\treturn\n\tend\n\tlocal deckTable = abilityDeck.getObjects()\n\tfor k,v in pairs(deckTable) do\n\t\tif string.match(string.lower(v.nickname), string.lower(cardName)) then\n\t\t\tfoundIndex = v.index\n\t\tend\n\tend\n\tif foundIndex == nil then\n\t\tplayer.broadcast(\"ERROR: Ability not found in deck.\", {1, 0, 0})\n\telse\n\t\tlocal info = getPlayerPosRotVectors(playerColor)\n\t\tif info.pos then\n\t\t\tlocal takeParams = {\n\t\t\t\tindex = foundIndex,\n\t\t\t\tposition = info.pos\n\t\t\t}\n\t\t\tabilityDeck.takeObject(takeParams)\n\t\t\tplayer.broadcast(\"You drew \" .. deckTable[foundIndex + 1].nickname .. \" [FFFFFF]from the Ability deck.\", {1, 1, 1})\n\t\t\tbroadcastToAll(playerColor .. \" takes an ability from the Ability deck\", {1, 1, 1})\n\t\tend\n\tend\nend\n\nfunction giveCardExp(cardName, targetColor, playerColor)\n\tlocal info = getPlayerPosRotVectors(targetColor)\n\tlocal result = {}\n\n\tif info.pos then\n\t\tresult = moveCard12P(cardName, nil, info.pos, FACE_DOWN_ROT, playerColor)\n\tend\n\tif result ~= -1 then\n\t\tsmartBroadcastToColor(\"You gave \" .. targetColor .. \" the \" .. result.name .. \" card.\", playerColor, {1, 1, 1})\n\tend\nend\n\nfunction closeAdminUIB(player, value, id)\n\tif player.admin then\n\t\tUI.setAttribute(\"admin\", \"active\", false)\n\t\tUI.setAttribute(\"adminButton\", \"active\", true)\n\tend\nend\n\nfunction showAdminUIB(player, value, id)\n\tif player.admin then\n\t\tUI.setAttribute(\"admin\", \"active\", true)\n\t\tUI.setAttribute(\"adminButton\", \"active\", false)\n\tend\nend\n\nfunction drawCardsUIB(player, value, id)\n\tif not started then\n   \t\tplayer.print(\"Game has not started.\")\n\t\treturn\n\tend\n\tlocal colorFound = getGreyColor(player.steam_id)\n\tif colorFound then\n\t\tdrawThree(player, colorFound)\n\telse\n\t\tplayer.print(\"You are not seated.\")\n\tend\nend\n\n----#include \\SecretHitlerCE\\UI.ttslua\n----#include \\SecretHitlerCE\\notetaker.ttslua\n\nuseColor = true\ncooperative = false\ncolorMatch = false\nuseNames = false\nplayerNoteTaker = ''\nprivateFogGUID = nil\nprivateScreenGUID = nil\nswapLF = false\nmoveTracker = true\nprevPresColor = nil\nprevChanColor = nil\nnextPost = nil\nforceMenu = nil\nlastGUID = nil\neditMode = true -- true is right, false is left\n--CUT HERE\nmodel_list = {}\nimage_list = {}\n\nmenu_unicode = '☰'\nup_unicode = '▲'\nright_unicode = '►'\ndown_unicode = '▼'\nleft_unicode = '◄'\n\nnoteTakerNotes = {}\nnoteTakerCurrLine = 0\n\nrightOffset = {White = 0, Brown = 0, Red = 0, Orange = 2.5, Yellow = -2.5, Green = 0, Teal = 0, Blue = 0, Purple = 2.5, Pink = -2.5}\ncolorOffset = {White = 0, Brown = 0, Red = 0, Orange = 0, Yellow = 0, Green = 5, Teal = 5, Blue = 5, Purple = 5, Pink = 5}\ncancelDestroy = false\nfunctionName = nil\nsharedHistory = false\n\n-- Defaults (Custom_Board)\nposXscale = 1\nposY = 0.6\nposZscale = 1\nposZoffsetMenu = 0\nposZoffsetPostRetrieve = 0\nposZoffsetColors = 0\nposZoffsetSettingsColors = 0\nposZoffsetCenterButtons = 0\nposZoffsetOther = 0\nrotZ = 0\ngiveHeight = 0\ngiveForward = -19\nbuttonScale = 1\nfontScale = 1\nmaxLines = 25\ntextColorReplace = 'FFFFFF]'\n\n-- tracker (default)\nelectionTrackerOrgPos = {x = -3.970005, y = 1.27525151, z = -9.385001}\nelectionTrackerMoveX = 2.7\n\nfunction noteTakerOnLoad(saveString)\n\tself.setDescription('Note Taker by Lost Savage\\nBased on the work of:\\nsmiling Aktheon,\\nSwiftPanda,\\nThe Blind Dragon\\nand Max\\n')\n\tif not (saveString == '') then\n\t\tlocal save = JSON.decode(saveString)\n\t\tuseColor = save['c']\n\t\tcooperative = save['co']\n\t\tcolorMatch = save['m']\n\t\tuseNames = save['n']\n\t\tnoteTakerNotes = save['ntn']\n\t\tnoteTakerCurrLine = save['ntcl']\n\t\tplayerNoteTaker = save['p']\n\t\tprivateFogGUID = save['pfg']\n\t\tprivateScreenGUID = save['psg']\n\t\tswapLF = save['s']\n\t\tmoveTracker = save['t']\n\tend\n\n\tif self.name ~= 'backgammon_board' then\n\t\tsharedHistory = true\n\t\tGlobal.call('initNoteTakerValues', {self.name})\n\t\tif Global.getVar('noteTakerCurrLine') == 0 then\n\t\t\tGlobal.call('addNewLine')\n\t\tend\n\telse\n\t\tinitNoteTakerValues(self.name)\n\t\tif noteTakerCurrLine == 0 then\n\t\t\taddNewLine()\n\t\tend\n\t\tlocal oldNoteTaker = getObjectFromGUID(lastGUID)\n\t\tif oldNoteTaker then\n\t\t\tnoteTakerNotes = oldNoteTaker.getTable('noteTakerNotes')\n\t\t\tnoteTakerCurrLine = oldNoteTaker.getVar('noteTakerCurrLine')\n\t\tend\n\tend\n\n\tif playerNoteTaker and not (playerNoteTaker == '') then\n\t\tif forceMenu then\n\t\t\tforceMenu = false\n\t\t\tif sharedHistory then\n\t\t\t\tGlobal.call('menu', {self})\n\t\t\telse\n\t\t\t\tmenu(self)\n\t\t\tend\n\t\telse\n\t\t\tif sharedHistory then\n\t\t\t\tGlobal.call('setupBoard', {self})\n\t\t\telse\n\t\t\t\tsetupBoard(self)\n\t\t\tend\n\t\tend\n\telse\n\t\tif sharedHistory then\n\t\t\tGlobal.call('menu', {self})\n\t\telse\n\t\t\tmenu(self)\n\t\tend\n\tend\nend\n\nfunction notetakerOnSave()\n\tlocal save = {}\n\tsave['c'] = useColor\n\tsave['co'] = cooperative\n\tsave['m'] = colorMatch\n\tsave['n'] = useNames\n\tsave['ntn'] = noteTakerNotes\n\tsave['ntcl'] = noteTakerCurrLine\n\tsave['p'] = playerNoteTaker\n\tsave['pfg'] = privateFogGUID\n\tsave['psg'] = privateScreenGUID\n\tsave['s'] = swapLF\n\tsave['t'] = moveTracker\n\n\tlocal saveString = JSON.encode(save)\n\n\treturn saveString\nend\n\nfunction notetakerOnDestroy()\n\tif not cancelDestroy then\n\t\tif privateScreenGUID then destroyObjectByGUID(privateScreenGUID) end\n\t\tif privateFogGUID then destroyObjectByGUID(privateFogGUID) end\n\tend\nend\n\nfunction initNoteTakerValues(boardName)\n\tif type(boardName) == 'table' then\n\t\tboardName = boardName[1]\n\tend\n\tlocal options = Global.getTable('options')\n\n\tif boardName == 'Custom_Board' then\n\t\tif options.zoneType == 6 then\n\t\t\tposZoffsetMenu = -0.25\n\t\t\tposZoffsetCenterButtons = -0.25\n\t\tend\n\telseif boardName == 'Chess_Board' then\n\t\tposXscale = -1\n\t\tposY = -0.9\n\t\trotZ = 180\n\t\tif options.zoneType == 6 then\n\t\t\tposZoffsetMenu = -0.25\n\t\t\tposZoffsetCenterButtons = -0.25\n\t\tend\n\telseif boardName == 'Checker_Board' then\n\t\tposXscale = -1\n\t\tposY = -0.1\n\t\trotZ = 180\n\t\tgiveHeight = 1\n\t\tif options.zoneType == 6 then\n\t\t\tposZoffsetMenu = -0.25\n\t\t\tposZoffsetCenterButtons = -0.25\n\t\tend\n\telseif boardName == 'Go_Board' then\n\t\tposXscale = -1.1\n\t\tposY = -1.3\n\t\tposZscale = 1.1\n\t\trotZ = 180\n\t\tgiveHeight = -1\n\t\tbuttonScale = 1.1\n\t\tfontScale = 1.1\n\t\tif options.zoneType == 6 then\n\t\t\tposZoffsetMenu = -0.25\n\t\t\tposZoffsetCenterButtons = -0.25\n\t\tend\n\telseif boardName == 'reversi_board' then\n\t\tposXscale = -1.1\n\t\tposY = -1.5\n\t\tposZscale = 1.1\n\t\trotZ = 180\n\t\tgiveHeight = -1\n\t\tbuttonScale = 1.1\n\t\tfontScale = 1.1\n\t\tif options.zoneType == 6 then\n\t\t\tposZoffsetMenu = -0.25\n\t\t\tposZoffsetCenterButtons = -0.25\n\t\tend\n\telseif boardName == 'backgammon_board' then\n\t\tposXscale = -0.9\n\t\tposY = -0.1\n\t\tposZscale = 0.9\n\t\tposZoffsetMenu = -3.7\n\t\tposZoffsetColors = 4.5\n\t\tposZoffsetSettingsColors = 4.5\n\t\tif options.zoneType == 6 then\n\t\t\tposZoffsetCenterButtons = 4.25\n\t\telse\n\t\t\tposZoffsetCenterButtons = 4.5\n\t\tend\n\t\tposZoffsetOther = 4.2\n\t\trotZ = 180\n\t\tgiveHeight = 1\n\t\tgiveForward = -26\n\t\tbuttonScale = 0.9\n\t\tfontScale = 0.9\n\t\tmaxLines = 10\n\t\ttextColorReplace = '000000]'\n\t\tnoteTakerSetNotes = function(stringIn)\n\t\t\tlocal out = string.gsub(stringIn, stringColorToHex('White') .. ']', textColorReplace)\n\t\t\tlocal screen = getObjectFromGUID(privateScreenGUID)\n\t\t\tif screen then\n\t\t\t\tscreen.setDescription(out)\n\t\t\tend\n\t\tend\n\telseif boardName == 'Custom_Model' then\n\t\tposXscale = 1.5\n\t\tposZscale = 1.5\n\t\tbuttonScale = 1.5\n\t\tfontScale = 1.5\n\t\tif options.zoneType == 6 then\n\t\t\tposZoffsetMenu = -0.25\n\t\t\tposZoffsetCenterButtons = -0.25\n\t\tend\n\tend\n\n\tif options.scriptedVoting and boardName ~= 'backgammon_board' then\n\t\tmaxLines = 19\n\tend\n\n\tif options.zoneType == 6 then\n\t\trightOffset = {White = 0, Brown = 0, Red = 0, Orange = 0, Yellow = 0, Green = 0, Teal = 0, Blue = 0, Purple = 0, Pink = 0, Tan = 0, Maroon = 0}\n\t\tcolorOffset = {White = 10, Brown = 1, Red = 1, Orange = 1, Yellow = 4, Green = 4, Teal = 4, Blue = 7, Purple = 7, Pink = 7, Tan = 10, Maroon = 10}\n\tend\nend\n\nfunction spawnWaitDestructCoroutine()\n\tlocal params = {\n\t\ttype = self.name,\n\t\tscale = self.getScale(),\n\t\tposition = self.getPosition(),\n\t\trotation = self.getRotation(),\n\t\tsound = false\n\t}\n\tlocal notetaker = spawnObject(params)\n\tnotetaker.setLuaScript(respawnNoteTakerLuaScript())\n\tnotetaker.setLock(true)\n\tif params.type == 'Custom_Board' then\n\t\tlocal custom = {}\n\t\tif image_list[functionName] then\n\t\t\tcustom.image = image_list[functionName]\n\t\telseif image_list['default'] then\n\t\t\tcustom.image = image_list['default']\n\t\telse\n\t\t\tcustom.image = 'http://cloud-3.steamusercontent.com/ugc/486766424829587499/FDF54ECD5D1706DE0A590239E84D62CDE757FE46/'\n\t\tend\n\t\tnotetaker.setCustomObject(custom)\n\telseif params.type == 'Custom_Model' then\n\t\tlocal custom = {}\n\t\tif image_list[functionName] then\n\t\t\tcustom.diffuse = image_list[functionName]\n\t\telseif image_list['default'] then\n\t\t\tcustom.diffuse = image_list['default']\n\t\telse\n\t\t\tcustom.diffuse = 'http://cloud-3.steamusercontent.com/ugc/478894184492866532/6639B6E1AB511AB10D53DB91B2A47A0A63410DDF/'\n\t\tend\n\t\tif model_list[functionName] then\n\t\t\tcustom.mesh = model_list[functionName]\n\t\telseif image_list['default'] then\n\t\t\tcustom.mesh = model_list['default']\n\t\telse\n\t\t\tcustom.mesh = 'http://cloud-3.steamusercontent.com/ugc/478894184492865468/51C18F993BBDD5D1B55FE5261A625B2CE0B2FD9F/'\n\t\tend\n\t\tcustom.type = 4\n\t\tcustom.material = 3\n\t\tnotetaker.setCustomObject(custom)\n\tend\n\twait(5)\n\tcancelDestroy = true\n\tself.destruct()\n\n\treturn true\nend\n\nfunction menuButton(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tclickedObject.setVar('forceMenu', true)\n\t\tclickedObject.setVar('functionName', 'menu')\n\t\tstartLuaCoroutine(clickedObject, 'spawnWaitDestructCoroutine')\n\tend\nend\n\nfunction menu(selfIn)\n\tif type(selfIn) == 'table' then\n\t\tselfIn = selfIn[1]\n\tend\n\n\tif selfIn.name == 'backgammon_board' then\n\t\tlocal screen = getObjectFromGUID(privateScreenGUID)\n\t\tif screen then\n\t\t\tforceObjectToPlayer(screen, selfIn.getVar('playerNoteTaker'), {forward = giveForward + 12.5, right = rightOffset[selfIn.getVar('playerNoteTaker')], up = 0, forceHeight = 0.9}, {x = 0, y = 180 - rotZ, z = 0})\n\t\t\tscreen.setLock(true)\n\t\t\tstartLuaCoroutine(selfIn, 'spawnFogCoroutine')\n\t\telse\n\t\t\tif selfIn.getVar('playerNoteTaker') ~= '' then\n\t\t\t\tforceMenu = true\n\t\t\t\tspawnScreen(selfIn)\n\t\t\t\treturn\n\t\t\tend\n\t\tend\n\tend\n\n\tlocal buttonParam = {rotation = {0, 0, rotZ}, font_size = 300 * fontScale}\n\tif sharedHistory then\n\t\tbuttonParam.function_owner = Global\n\telse\n\t\tbuttonParam.function_owner = self\n\tend\n\n\tselfIn.clearButtons()\n\n\tlocal fakePlayerNoteTaker = false\n\tif selfIn.getVar('playerNoteTaker') == '' then\n\t\tfakePlayerNoteTaker = true\n\t\tselfIn.setVar('playerNoteTaker', 'White')\n\tend\n\n\t-- Who is the note taker?\n\tif selfIn.name == 'backgammon_board' then\n\t\tlocal screen = getObjectFromGUID(privateScreenGUID)\n\t\tif screen then\n\t\t\tscreen.setDescription('\\n\\n\\n\\n\\n\\n\\n\\n\\n                      Who is the note taker?')\n\t\tend\n\telse\n\t\tbuttonParam.click_function = 'nullFunction'\n\t\tbuttonParam.label = 'Who is the note taker?'\n\t\tbuttonParam.position = {posXscale * 0, posY, (-7.3 * posZscale) + posZoffsetSettingsColors}\n\t\tbuttonParam.height = 500 * buttonScale\n\t\tbuttonParam.width = 3500 * buttonScale\n\t\tselfIn.createButton(buttonParam)\n\tend\n\n\t-- Player Options\n\tbuttonParam.height = 700 * buttonScale\n\tbuttonParam.width = 1800 * buttonScale\n\tif not cooperative or Player[selfIn.getVar('playerNoteTaker')].admin then\n\t\tbuttonParam.click_function = 'setupWhite'\n\t\tbuttonParam.label = 'White'\n\t\tbuttonParam.position = {posXscale * 4, posY, (-1.25 * posZscale) + posZoffsetSettingsColors}\n\t\tbuttonParam.color = stringColorToRGB('White')\n\t\tselfIn.createButton(buttonParam)\n\n\t\tbuttonParam.click_function = 'setupBrown'\n\t\tbuttonParam.label = 'Brown'\n\t\tbuttonParam.position = {posXscale * 0, posY, (-1.25 * posZscale) + posZoffsetSettingsColors}\n\t\tbuttonParam.color = stringColorToRGB('Brown')\n\t\tselfIn.createButton(buttonParam)\n\n\t\tbuttonParam.click_function = 'setupRed'\n\t\tbuttonParam.label = 'Red'\n\t\tbuttonParam.position = {posXscale * -4, posY, (-1.25 * posZscale) + posZoffsetSettingsColors}\n\t\tbuttonParam.color = stringColorToRGB('Red')\n\t\tselfIn.createButton(buttonParam)\n\n\t\tbuttonParam.click_function = 'setupOrange'\n\t\tbuttonParam.label = 'Orange'\n\t\tbuttonParam.position = {posXscale * -6, posY, (-2.75 * posZscale) + posZoffsetSettingsColors}\n\t\tbuttonParam.color = stringColorToRGB('Orange')\n\t\tselfIn.createButton(buttonParam)\n\n\t\tbuttonParam.click_function = 'setupYellow'\n\t\tbuttonParam.label = 'Yellow'\n\t\tbuttonParam.position = {posXscale * -6, posY, (-4.25 * posZscale) + posZoffsetSettingsColors}\n\t\tbuttonParam.color = stringColorToRGB('Yellow')\n\t\tselfIn.createButton(buttonParam)\n\n\t\tbuttonParam.click_function = 'setupGreen'\n\t\tbuttonParam.label = 'Green'\n\t\tbuttonParam.position = {posXscale * -4, posY, (-5.75 * posZscale) + posZoffsetSettingsColors}\n\t\tbuttonParam.color = stringColorToRGB('Green')\n\t\tselfIn.createButton(buttonParam)\n\n\t\tbuttonParam.click_function = 'setupTeal'\n\t\tbuttonParam.label = 'Teal'\n\t\tbuttonParam.position = {posXscale * 0, posY, (-5.75 * posZscale) + posZoffsetSettingsColors}\n\t\tbuttonParam.color = stringColorToRGB('Teal')\n\t\tselfIn.createButton(buttonParam)\n\n\t\tbuttonParam.click_function = 'setupBlue'\n\t\tbuttonParam.label = 'Blue'\n\t\tbuttonParam.position = {posXscale * 4, posY, (-5.75 * posZscale) + posZoffsetSettingsColors}\n\t\tbuttonParam.color = stringColorToRGB('Blue')\n\t\tselfIn.createButton(buttonParam)\n\n\t\tbuttonParam.click_function = 'setupPurple'\n\t\tbuttonParam.label = 'Purple'\n\t\tbuttonParam.position = {posXscale * 6, posY, (-4.25 * posZscale) + posZoffsetSettingsColors}\n\t\tbuttonParam.color = stringColorToRGB('Purple')\n\t\tselfIn.createButton(buttonParam)\n\n\t\tbuttonParam.click_function = 'setupPink'\n\t\tbuttonParam.label = 'Pink'\n\t\tbuttonParam.position = {posXscale * 6, posY, (-2.75 * posZscale) + posZoffsetSettingsColors}\n\t\tbuttonParam.color = stringColorToRGB('Pink')\n\t\tselfIn.createButton(buttonParam)\n\tend\n\n\tbuttonParam.click_function = 'setupMe'\n\tbuttonParam.label = 'Me'\n\tbuttonParam.position = {posXscale * 0, posY, (-3.5 * posZscale) + posZoffsetSettingsColors}\n\tbuttonParam.color = stringColorToRGB('White')\n\tselfIn.createButton(buttonParam)\n\n\tmenuBase(selfIn)\n\n\tif fakePlayerNoteTaker then\n\t\tselfIn.setVar('playerNoteTaker', '')\n\tend\nend\n\nfunction menuBase(selfIn)\n\tlocal buttonParam = {rotation = {0, 0, rotZ}, font_size = 300 * fontScale}\n\tlocal text = Global.getTable('text')\n\n\tif sharedHistory then\n\t\tbuttonParam.function_owner = Global\n\telse\n\t\tbuttonParam.function_owner = self\n\tend\n\n\tbuttonParam.click_function = 'flipUseNames'\n\tif useNames then buttonParam.label = 'x' else buttonParam.label = '' end\n\tbuttonParam.position = {posXscale * -7.5, posY, (1.25 * posZscale) + posZoffsetOther}\n\tbuttonParam.width = 300 * buttonScale\n\tbuttonParam.height = 300 * buttonScale\n\tselfIn.createButton(buttonParam)\n\tbuttonParam.label = 'Use player names'\n\tbuttonParam.position = {posXscale * -4, posY, (1.25 * posZscale) + posZoffsetOther}\n\tbuttonParam.width = 2700 * buttonScale\n\tbuttonParam.height = 700 * buttonScale\n\tselfIn.createButton(buttonParam)\n\n\tbuttonParam.click_function = 'flipUseColor'\n\tif useColor then buttonParam.label = 'x' else buttonParam.label = '' end\n\tbuttonParam.position = {posXscale * -7.5, posY, (2.75 * posZscale) + posZoffsetOther}\n\tbuttonParam.width = 300 * buttonScale\n\tbuttonParam.height = 300 * buttonScale\n\tselfIn.createButton(buttonParam)\n\tbuttonParam.label = 'Use color'\n\tbuttonParam.position = {posXscale * -4, posY, (2.75 * posZscale) + posZoffsetOther}\n\tbuttonParam.width = 2700 * buttonScale\n\tbuttonParam.height = 700 * buttonScale\n\tselfIn.createButton(buttonParam)\n\n\tif selfIn.name ~= 'backgammon_board' or Player[selfIn.getVar('playerNoteTaker')].admin then\n\t\tbuttonParam.click_function = 'flipMoveTracker'\n\t\tif moveTracker then buttonParam.label = 'x' else buttonParam.label = '' end\n\t\tbuttonParam.position = {posXscale * -7.5, posY, (4.25 * posZscale) + posZoffsetOther}\n\t\tbuttonParam.width = 300 * buttonScale\n\t\tbuttonParam.height = 300 * buttonScale\n\t\tselfIn.createButton(buttonParam)\n\t\tbuttonParam.label = 'Move tracker'\n\t\tbuttonParam.position = {posXscale * -4, posY, (4.25 * posZscale) + posZoffsetOther}\n\t\tbuttonParam.width = 2700 * buttonScale\n\t\tbuttonParam.height = 700 * buttonScale\n\t\tselfIn.createButton(buttonParam)\n\tend\n\n\tbuttonParam.click_function = 'flipSwapLF'\n\tif swapLF then buttonParam.label = 'x' else buttonParam.label = '' end\n\tbuttonParam.position = {posXscale * -7.5, posY, (5.75 * posZscale) + posZoffsetOther}\n\tbuttonParam.width = 300 * buttonScale\n\tbuttonParam.height = 300 * buttonScale\n\tselfIn.createButton(buttonParam)\n\tbuttonParam.label = 'Swap ' .. text.liberalLetter .. ' and ' .. text.fascistLetter\n\tbuttonParam.position = {posXscale * -4, posY, (5.75 * posZscale) + posZoffsetOther}\n\tbuttonParam.width = 2700 * buttonScale\n\tbuttonParam.height = 700 * buttonScale\n\tselfIn.createButton(buttonParam)\n\n\tif selfIn.name == 'Checker_Board' or selfIn.name == 'Go_Board' then\n\t\tbuttonParam.click_function = 'flipColorMatch'\n\t\tif colorMatch then buttonParam.label = 'x' else buttonParam.label = '' end\n\t\tbuttonParam.position = {posXscale * -7.5, posY, (7.25 * posZscale) + posZoffsetOther}\n\t\tbuttonParam.width = 300 * buttonScale\n\t\tbuttonParam.height = 300 * buttonScale\n\t\tselfIn.createButton(buttonParam)\n\t\tbuttonParam.label = 'Color match'\n\t\tbuttonParam.position = {posXscale * -4, posY, (7.25 * posZscale) + posZoffsetOther}\n\t\tbuttonParam.width = 2700 * buttonScale\n\t\tbuttonParam.height = 700 * buttonScale\n\t\tselfIn.createButton(buttonParam)\n\telseif selfIn.name == 'backgammon_board' and Player[selfIn.getVar('playerNoteTaker')].admin then\n\t\tbuttonParam.click_function = 'flipCooperative'\n\t\tif cooperative then buttonParam.label = 'x' else buttonParam.label = '' end\n\t\tbuttonParam.position = {posXscale * -7.5, posY, (7.25 * posZscale) + posZoffsetOther}\n\t\tbuttonParam.width = 300 * buttonScale\n\t\tbuttonParam.height = 300 * buttonScale\n\t\tselfIn.createButton(buttonParam)\n\t\tbuttonParam.label = 'Cooperative'\n\t\tbuttonParam.position = {posXscale * -4, posY, (7.25 * posZscale) + posZoffsetOther}\n\t\tbuttonParam.width = 2700 * buttonScale\n\t\tbuttonParam.height = 700 * buttonScale\n\t\tselfIn.createButton(buttonParam)\n\tend\n\n\tbuttonParam.click_function = 'shuffleDrawDeckButton'\n\tbuttonParam.label = 'Shuffle'\n\tbuttonParam.position = {posXscale * 4, posY, 1.25  * posZscale + posZoffsetOther}\n\tselfIn.createButton(buttonParam)\n\n\tbuttonParam.click_function = 'disableSecurityButton'\n\tbuttonParam.label = 'Disable security'\n\tbuttonParam.position = {posXscale * 4, posY, 2.75 * posZscale + posZoffsetOther}\n\tselfIn.createButton(buttonParam)\n\n\tbuttonParam.click_function = 'giveRoleCardsButton'\n\tbuttonParam.label = 'Give role cards'\n\tbuttonParam.position = {posXscale * 4, posY, 4.25 * posZscale + posZoffsetOther}\n\tselfIn.createButton(buttonParam)\n\n\tbuttonParam.click_function = 'forceVotePass'\n\tbuttonParam.label = 'Vote Passed'\n\tbuttonParam.position = {posXscale * 4, posY, 5.75 * posZscale + posZoffsetOther}\n\tselfIn.createButton(buttonParam)\nend\n\nfunction setupPlayer(clickedObject, playerIn)\n\tclickedObject.setVar('playerNoteTaker', playerIn)\n\tfunctionName = setupBoardGetFunction(playerIn) .. colorOffset[playerIn]\n\tstartLuaCoroutine(clickedObject, 'spawnWaitDestructCoroutine')\nend\n\nfunction setupBoard(selfIn)\n\tif type(selfIn) == 'table' then\n\t\tselfIn = selfIn[1]\n\tend\n\tlocal playerNT = selfIn.getVar('playerNoteTaker')\n\tlocal imagename = setupBoardGetFunction(playerIn) .. colorOffset[playerNT]\n\tif colorMatch then selfIn.setColorTint(stringColorToRGBExtra(playerNT)) end\n\tforceObjectToPlayer(selfIn, playerNT, {forward = giveForward, right = rightOffset[playerNT], up = 0, forceHeight = giveHeight}, {x = rotZ, y = 180 - rotZ, z = 0})\n\tselfIn.setLock(true)\n\tif selfIn.name == 'backgammon_board' then\n\t\tlocal screen = getObjectFromGUID(privateScreenGUID)\n\t\tif screen then\n\t\t\tforceObjectToPlayer(screen, playerNT, {forward = giveForward + 12.5, right = rightOffset[playerNT], up = 0, forceHeight = 0.9}, {x = 0, y = 180 - rotZ, z = 0})\n\t\t\tscreen.setLock(true)\n\t\t\trefreshNotes(selfIn)\n\t\t\tstartLuaCoroutine(selfIn, 'spawnFogCoroutine')\n\t\telse\n\t\t\tspawnScreen(selfIn)\n\t\t\treturn\n\t\tend\n\tend\n\tlocal fName = setupBoardGetFunction(playerNT)\n\t_G[fName](selfIn, colorOffset[playerNT])\nend\n\nfunction setupBoardGetFunction(playerIn)\n\tlocal options = Global.getTable('options')\n\tif options.zoneType == 6 then\n\t\treturn 'init12Player'\n\telseif playerIn == 'Orange' or playerIn == 'Yellow' or playerIn == 'Purple' or playerIn == 'Pink' then\n\t\treturn 'initVertical'\n\telse\n\t\treturn 'initHorizontal'\n\tend\nend\n\nfunction setupMe(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tsetupPlayer(clickedObject, playerColor)\n\tend\nend\n\nfunction setupWhite(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tsetupPlayer(clickedObject, 'White')\n\tend\nend\n\nfunction setupBrown(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tsetupPlayer(clickedObject, 'Brown')\n\tend\nend\n\nfunction setupRed(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tsetupPlayer(clickedObject, 'Red')\n\tend\nend\n\nfunction setupOrange(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tsetupPlayer(clickedObject, 'Orange')\n\tend\nend\n\nfunction setupYellow(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tsetupPlayer(clickedObject, 'Yellow')\n\tend\nend\n\nfunction setupGreen(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tsetupPlayer(clickedObject, 'Green')\n\tend\nend\n\nfunction setupTeal(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tsetupPlayer(clickedObject, 'Teal')\n\tend\nend\n\nfunction setupBlue(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tsetupPlayer(clickedObject, 'Blue')\n\tend\nend\n\nfunction setupPurple(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tsetupPlayer(clickedObject, 'Purple')\n\tend\nend\n\nfunction setupPink(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tsetupPlayer(clickedObject, 'Pink')\n\tend\nend\n\nfunction flipUseNames(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tuseNames = not useNames\n\t\trefreshNotes(clickedObject)\n\t\tmenu(clickedObject)\n\tend\nend\n\nfunction flipUseColor(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tuseColor = not useColor\n\t\trefreshNotes(clickedObject)\n\t\tmenu(clickedObject)\n\tend\nend\n\nfunction flipSwapLF(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tswapLF = not swapLF\n\t\tmenu(clickedObject)\n\tend\nend\n\nfunction flipColorMatch(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tcolorMatch = not colorMatch\n\t\tmenu(clickedObject)\n\tend\nend\n\nfunction flipCooperative(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tcooperative = not cooperative\n\t\tmenu(clickedObject)\n\tend\nend\n\nfunction flipMoveTracker(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tmoveTracker = not moveTracker\n\t\tmenu(clickedObject)\n\tend\nend\n\nfunction shuffleDrawDeckButton(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tif not Global.call('shuffleDrawDeck') then\n\t\t\tbroadcastToColor('ERROR: Failed to shuffle draw deck.', playerColor, {1,0,0})\n\t\tend\n\tend\nend\n\nfunction disableSecurityButton(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tGlobal.call('disableSecurity')\n\tend\nend\n\nfunction giveRoleCardsButton(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tGlobal.call('giveRoleCards')\n\tend\nend\n\nfunction forceVotePass(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tGlobal.setVar('votePassed', true)\n\t\tGlobal.setVar('blockDraw', false)\n\tend\nend\n\nfunction initHorizontal(selfIn, offset)\n\tlocal buttonParam = {rotation = {0, 0, rotZ}, width = 1800 * buttonScale, height = 700 * buttonScale, font_size = 300 * fontScale}\n\n\tif sharedHistory then\n\t\tbuttonParam.function_owner = Global\n\telse\n\t\tbuttonParam.function_owner = self\n\tend\n\n\t-- Players\n\tlocal color = offset + 1\n\tif color > 10 then color = color - 10 end\n\tbuttonParam.click_function = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.label = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * 4, posY, (-2.25 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(MAIN_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tcolor = color + 1\n\tif color > 10 then color = color - 10 end\n\tbuttonParam.click_function = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.label = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * 0, posY, (-2.25 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(MAIN_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tcolor = color + 1\n\tif color > 10 then color = color - 10 end\n\tbuttonParam.click_function = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.label = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * -4, posY, (-2.25 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(MAIN_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tcolor = color + 1\n\tif color > 10 then color = color - 10 end\n\tbuttonParam.click_function = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.label = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * -6, posY, (-3.75 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(MAIN_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tcolor = color + 1\n\tif color > 10 then color = color - 10 end\n\tbuttonParam.click_function = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.label = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * -6, posY, (-5.25 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(MAIN_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tcolor = color + 1\n\tif color > 10 then color = color - 10 end\n\tbuttonParam.click_function = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.label = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * -4, posY, (-6.75 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(MAIN_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tcolor = color + 1\n\tif color > 10 then color = color - 10 end\n\tbuttonParam.click_function = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.label = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * 0, posY, (-6.75 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(MAIN_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tcolor = color + 1\n\tif color > 10 then color = color - 10 end\n\tbuttonParam.click_function = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.label = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * 4, posY, (-6.75 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(MAIN_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tcolor = color + 1\n\tif color > 10 then color = color - 10 end\n\tbuttonParam.click_function = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.label = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * 6, posY, (-5.25 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(MAIN_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tcolor = color + 1\n\tif color > 10 then color = color - 10 end\n\tbuttonParam.click_function = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.label = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * 6, posY, (-3.75 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(MAIN_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tinitCommon(selfIn)\nend\n\nfunction initVertical(selfIn, offset)\n\tlocal buttonParam = {rotation = {0, 0, rotZ}, width = 1800 * buttonScale, height = 700 * buttonScale, font_size = 300 * fontScale}\n\n\tif sharedHistory then\n\t\tbuttonParam.function_owner = Global\n\telse\n\t\tbuttonParam.function_owner = self\n\tend\n\n\t-- Players\n\tlocal color = offset + 1\n\tif color > 10 then color = color - 10 end\n\tbuttonParam.click_function = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.label = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * 6, posY, (-6.0 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(MAIN_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tcolor = color + 1\n\tif color > 10 then color = color - 10 end\n\tbuttonParam.click_function = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.label = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * 6, posY, (-4.5 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(MAIN_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tcolor = color + 1\n\tif color > 10 then color = color - 10 end\n\tbuttonParam.click_function = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.label = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * 6, posY, (-3.0 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(MAIN_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tcolor = color + 1\n\tif color > 10 then color = color - 10 end\n\tbuttonParam.click_function = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.label = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * 2, posY, (-2.25 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(MAIN_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tcolor = color + 1\n\tif color > 10 then color = color - 10 end\n\tbuttonParam.click_function = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.label = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * -2, posY, (-2.25 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(MAIN_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tcolor = color + 1\n\tif color > 10 then color = color - 10 end\n\tbuttonParam.click_function = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.label = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * -6, posY, (-3.0 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(MAIN_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tcolor = color + 1\n\tif color > 10 then color = color - 10 end\n\tbuttonParam.click_function = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.label = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * -6, posY, (-4.5 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(MAIN_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tcolor = color + 1\n\tif color > 10 then color = color - 10 end\n\tbuttonParam.click_function = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.label = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * -6, posY, (-6.0 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(MAIN_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tcolor = color + 1\n\tif color > 10 then color = color - 10 end\n\tbuttonParam.click_function = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.label = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * -2, posY, (-6.75 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(MAIN_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tcolor = color + 1\n\tif color > 10 then color = color - 10 end\n\tbuttonParam.click_function = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.label = MAIN_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * 2, posY, (-6.75 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(MAIN_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tinitCommon(selfIn)\nend\n\nfunction init12Player(selfIn, offset)\n\tlocal buttonParam = {rotation = {0, 0, rotZ}, width = 1800 * buttonScale, height = 700 * buttonScale, font_size = 300 * fontScale}\n\n\tif sharedHistory then\n\t\tbuttonParam.function_owner = Global\n\telse\n\t\tbuttonParam.function_owner = self\n\tend\n\n\t-- Players\n\tlocal color = offset + 1\n\tif color > 12 then color = color - 12 end\n\tbuttonParam.click_function = ALL_PLAYABLE_COLORS[color]\n\tbuttonParam.label = ALL_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * 4, posY, (-1.75 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(ALL_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tcolor = color + 1\n\tif color > 12 then color = color - 12 end\n\tbuttonParam.click_function = ALL_PLAYABLE_COLORS[color]\n\tbuttonParam.label = ALL_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * 0, posY, (-1.75 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(ALL_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tcolor = color + 1\n\tif color > 12 then color = color - 12 end\n\tbuttonParam.click_function = ALL_PLAYABLE_COLORS[color]\n\tbuttonParam.label = ALL_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * -4, posY, (-1.75 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(ALL_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tcolor = color + 1\n\tif color > 12 then color = color - 12 end\n\tbuttonParam.click_function = ALL_PLAYABLE_COLORS[color]\n\tbuttonParam.label = ALL_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * -6, posY, (-3.25 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(ALL_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tcolor = color + 1\n\tif color > 12 then color = color - 12 end\n\tbuttonParam.click_function = ALL_PLAYABLE_COLORS[color]\n\tbuttonParam.label = ALL_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * -6, posY, (-4.75 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(ALL_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tcolor = color + 1\n\tif color > 12 then color = color - 12 end\n\tbuttonParam.click_function = ALL_PLAYABLE_COLORS[color]\n\tbuttonParam.label = ALL_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * -6, posY, (-6.25 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(ALL_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tcolor = color + 1\n\tif color > 12 then color = color - 12 end\n\tbuttonParam.click_function = ALL_PLAYABLE_COLORS[color]\n\tbuttonParam.label = ALL_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * -4, posY, (-7.75 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(ALL_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tcolor = color + 1\n\tif color > 12 then color = color - 12 end\n\tbuttonParam.click_function = ALL_PLAYABLE_COLORS[color]\n\tbuttonParam.label = ALL_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * 0, posY, (-7.75 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(ALL_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tcolor = color + 1\n\tif color > 12 then color = color - 12 end\n\tbuttonParam.click_function = ALL_PLAYABLE_COLORS[color]\n\tbuttonParam.label = ALL_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * 4, posY, (-7.75 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(ALL_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tcolor = color + 1\n\tif color > 12 then color = color - 12 end\n\tbuttonParam.click_function = ALL_PLAYABLE_COLORS[color]\n\tbuttonParam.label = ALL_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * 6, posY, (-6.25 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(ALL_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tcolor = color + 1\n\tif color > 12 then color = color - 12 end\n\tbuttonParam.click_function = ALL_PLAYABLE_COLORS[color]\n\tbuttonParam.label = ALL_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * 6, posY, (-4.75 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(ALL_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tcolor = color + 1\n\tif color > 12 then color = color - 12 end\n\tbuttonParam.click_function = ALL_PLAYABLE_COLORS[color]\n\tbuttonParam.label = ALL_PLAYABLE_COLORS[color]\n\tbuttonParam.position = {posXscale * 6, posY, (-3.25 * posZscale) + posZoffsetColors}\n\tbuttonParam.color = stringColorToRGBExtra(ALL_PLAYABLE_COLORS[color])\n\tselfIn.createButton(buttonParam)\n\n\tinitCommon(selfIn)\nend\n\nfunction initCommon(selfIn)\n\tlocal buttonParam = {rotation = {0, 0, rotZ}, font_size = 300 * fontScale}\n\tlocal bulletInfo = Global.getTable('bulletInfo')\n\tlocal text = Global.getTable('text')\n\n\tif sharedHistory then\n\t\tbuttonParam.function_owner = Global\n\telse\n\t\tbuttonParam.function_owner = self\n\tend\n\n\t-- Info\n\tif selfIn.name == 'backgammon_board' then\n\t\tlocal screen = getObjectFromGUID(privateScreenGUID)\n\t\tif screen then\n\t\t\tscreen.setName('Private Notes')\n\t\tend\n\tend\n\n\t-- Settings\n\tbuttonParam.click_function = 'menuButton'\n\tbuttonParam.label = menu_unicode\n\tbuttonParam.width = 600 * buttonScale\n\tbuttonParam.height = 500 * buttonScale\n\tbuttonParam.position = {posXscale * 7.6, posY, (-7.5 * posZscale) + posZoffsetMenu}\n\tselfIn.createButton(buttonParam)\n\n\t-- Post/Retrieve\n\tif selfIn.name == 'backgammon_board' and cooperative then\n\t\tbuttonParam.click_function = 'postButton'\n\t\tbuttonParam.label = 'Post'\n\t\tbuttonParam.width = 1500 * buttonScale\n\t\tbuttonParam.position = {posXscale * -6.25, posY, (-11.6 * posZscale) + posZoffsetPostRetrieve}\n\t\tselfIn.createButton(buttonParam)\n\n\t\tbuttonParam.click_function = 'retrieveButton'\n\t\tbuttonParam.label = 'Retrieve'\n\t\tbuttonParam.position = {posXscale * 5, posY, (-11.6 * posZscale) + posZoffsetPostRetrieve}\n\t\tselfIn.createButton(buttonParam)\n\tend\n\n\t-- Center\n\tbuttonParam.click_function = 'autoButton'\n\tbuttonParam.label = 'Auto Gov'\n\tbuttonParam.height = 700 * buttonScale\n\tif Player[selfIn.getVar('playerNoteTaker')].admin or selfIn.name ~= 'backgammon_board' then\n\t\tbuttonParam.width = 1800 * buttonScale\n\t\tbuttonParam.position = {posXscale * -2, posY, (-5.25 * posZscale) + posZoffsetCenterButtons}\n\t\tselfIn.createButton(buttonParam)\n\n\t\tbuttonParam.click_function = 'setPreviousPlacs'\n\t\tbuttonParam.label = 'Move Prev'\n\t\tbuttonParam.position = {posXscale * 2, posY, (-5.25 * posZscale) + posZoffsetCenterButtons}\n\t\tselfIn.createButton(buttonParam)\n\telse\n\t\tbuttonParam.width = 3700 * buttonScale\n\t\tbuttonParam.position = {posXscale * 0, posY, (-5.25 * posZscale) + posZoffsetCenterButtons}\n\t\tselfIn.createButton(buttonParam)\n\tend\n\n\tbuttonParam.click_function = 'downvotedButton'\n\tbuttonParam.label = 'Downvoted'\n\tbuttonParam.width = 3700 * buttonScale\n\tbuttonParam.position = {posXscale * 0, posY, (-3.75 * posZscale) + posZoffsetCenterButtons}\n\tselfIn.createButton(buttonParam)\n\n\t-- Left\n\tbuttonParam.click_function = 'examinesButton'\n\tbuttonParam.label = 'Ex Deck'\n\tbuttonParam.width = 1500 * buttonScale\n\tbuttonParam.height = 700 * buttonScale\n\tbuttonParam.position = {posXscale * -6.5, posY, (-0.25 * posZscale) + posZoffsetOther}\n\tselfIn.createButton(buttonParam)\n\n\tbuttonParam.click_function = 'conflictButton'\n\tbuttonParam.label = 'Conflict'\n\tbuttonParam.position = {posXscale * -6.5, posY, (1.25 * posZscale) + posZoffsetOther}\n\tselfIn.createButton(buttonParam)\n\n\tbuttonParam.click_function = 'reshuffleButton'\n\tbuttonParam.label = 'Reshuffle'\n\tbuttonParam.position = {posXscale * -6.5, posY, (2.75 * posZscale) + posZoffsetOther}\n\tselfIn.createButton(buttonParam)\n\n\tbuttonParam.click_function = 'hZoneButton'\n\tbuttonParam.label = string.sub(text.hitler, 1, 1) .. ' Zone'\n\tbuttonParam.position = {posXscale * -6.5, posY, (4.25 * posZscale) + posZoffsetOther}\n\tselfIn.createButton(buttonParam)\n\n\tbuttonParam.click_function = 'topdeckButton'\n\tbuttonParam.label = 'Topdeck'\n\tbuttonParam.position = {posXscale * -6.5, posY, (5.75 * posZscale) + posZoffsetOther}\n\tselfIn.createButton(buttonParam)\n\n\tbuttonParam.click_function = 'revisedButton'\n\tbuttonParam.label = 'Revised'\n\tbuttonParam.position = {posXscale * -6.5, posY, (7.25 * posZscale) + posZoffsetOther}\n\tselfIn.createButton(buttonParam)\n\n\t-- Right\n\tbuttonParam.click_function = 'deleteLineButton'\n\tbuttonParam.label = 'Delete Line'\n\tbuttonParam.position = {posXscale * 6.5, posY, (-0.25 * posZscale) + posZoffsetOther}\n\tselfIn.createButton(buttonParam)\n\n\tbuttonParam.click_function = 'insertLineButton'\n\tbuttonParam.label = 'Insert Line'\n\tbuttonParam.position = {posXscale * 6.5, posY, (1.25 * posZscale) + posZoffsetOther}\n\tselfIn.createButton(buttonParam)\n\n\tbuttonParam.click_function = 'topButton'\n\tbuttonParam.label = 'Top'\n\tbuttonParam.position = {posXscale * 6.5, posY, (2.75 * posZscale) + posZoffsetOther}\n\tselfIn.createButton(buttonParam)\n\n\tbuttonParam.click_function = 'bottomButton'\n\tbuttonParam.label = 'Bottom'\n\tbuttonParam.position = {posXscale * 6.5, posY, (4.25 * posZscale) + posZoffsetOther}\n\tselfIn.createButton(buttonParam)\n\n\tbuttonParam.click_function = 'upButton'\n\tbuttonParam.label = up_unicode\n\tbuttonParam.width = 700 * buttonScale\n\tbuttonParam.position = {posXscale * 5.75, posY, (5.75 * posZscale) + posZoffsetOther}\n\tselfIn.createButton(buttonParam)\n\n\tbuttonParam.click_function = 'rightButton'\n\tbuttonParam.label = right_unicode\n\tbuttonParam.position = {posXscale * 7.25, posY, (6.5 * posZscale) + posZoffsetOther}\n\tselfIn.createButton(buttonParam)\n\n\tbuttonParam.click_function = 'downButton'\n\tbuttonParam.label = down_unicode\n\tbuttonParam.position = {posXscale * 5.75, posY, (7.25 * posZscale) + posZoffsetOther}\n\tselfIn.createButton(buttonParam)\n\n\tbuttonParam.click_function = 'leftButton'\n\tbuttonParam.label = left_unicode\n\tbuttonParam.position = {posXscale * 4.25, posY, (6.5 * posZscale) + posZoffsetOther}\n\tselfIn.createButton(buttonParam)\n\n\t-- Policy x3\n\tbuttonParam.click_function = 'QQQ'\n\tbuttonParam.label = '???'\n\tbuttonParam.position = {posXscale * 3.8, posY, (2.75 * posZscale) + posZoffsetOther}\n\tbuttonParam.width = 900 * buttonScale\n\tselfIn.createButton(buttonParam)\n\n\tbuttonParam.click_function = 'FFF'\n\tbuttonParam.label = text.fascistLetter .. text.fascistLetter .. text.fascistLetter\n\tif swapLF then\n\t\tbuttonParam.position = {posXscale * -3.8, posY, (2.75 * posZscale) + posZoffsetOther}\n\telse\n\t\tbuttonParam.position = {posXscale * 1.9, posY, (2.75 * posZscale) + posZoffsetOther}\n\tend\n\tselfIn.createButton(buttonParam)\n\n\tbuttonParam.click_function = 'FFL'\n\tbuttonParam.label = text.fascistLetter .. text.fascistLetter .. text.liberalLetter\n\tif swapLF then\n\t\tbuttonParam.position = {posXscale * -1.9, posY, (2.75 * posZscale) + posZoffsetOther}\n\telse\n\t\tbuttonParam.position = {posXscale * 0.0, posY, (2.75 * posZscale) + posZoffsetOther}\n\tend\n\tselfIn.createButton(buttonParam)\n\n\tbuttonParam.click_function = 'FLL'\n\tbuttonParam.label = text.fascistLetter .. text.liberalLetter .. text.liberalLetter\n\tif swapLF then\n\t\tbuttonParam.position = {posXscale * 0.0, posY, (2.75 * posZscale) + posZoffsetOther}\n\telse\n\t\tbuttonParam.position = {posXscale * -1.9, posY, (2.75 * posZscale) + posZoffsetOther}\n\tend\n\tselfIn.createButton(buttonParam)\n\n\tbuttonParam.click_function = 'LLL'\n\tbuttonParam.label = text.liberalLetter .. text.liberalLetter .. text.liberalLetter\n\tif swapLF then\n\t\tbuttonParam.position = {posXscale * 1.9, posY, (2.75 * posZscale) + posZoffsetOther}\n\telse\n\t\tbuttonParam.position = {posXscale * -3.8, posY, (2.75 * posZscale) + posZoffsetOther}\n\tend\n\tselfIn.createButton(buttonParam)\n\n\t-- Policy x2\n\tbuttonParam.click_function = 'QQ'\n\tbuttonParam.label = '??'\n\tbuttonParam.position = {posXscale * 2.85, posY, (4.25 * posZscale) + posZoffsetOther}\n\tselfIn.createButton(buttonParam)\n\n\tbuttonParam.click_function = 'FF'\n\tbuttonParam.label = text.fascistLetter .. text.fascistLetter\n\tif swapLF then\n\t\tbuttonParam.position = {posXscale * -2.85, posY, (4.25 * posZscale) + posZoffsetOther}\n\telse\n\t\tbuttonParam.position = {posXscale * 0.95, posY, (4.25 * posZscale) + posZoffsetOther}\n\tend\n\tselfIn.createButton(buttonParam)\n\n\t-- same if swapLF\n\tbuttonParam.click_function = 'FL'\n\tbuttonParam.label = text.fascistLetter .. text.liberalLetter\n\tbuttonParam.position = {posXscale * -0.95, posY, (4.25 * posZscale) + posZoffsetOther}\n\tselfIn.createButton(buttonParam)\n\n\tbuttonParam.click_function = 'LL'\n\tbuttonParam.label = text.liberalLetter .. text.liberalLetter\n\tif swapLF then\n\t\tbuttonParam.position = {posXscale * 0.95, posY, (4.25 * posZscale) + posZoffsetOther}\n\telse\n\t\tbuttonParam.position = {posXscale * -2.85, posY, (4.25 * posZscale) + posZoffsetOther}\n\tend\n\tselfIn.createButton(buttonParam)\n\n\t-- Policy final\n\tbuttonParam.click_function = 'vetoButton'\n\tbuttonParam.label = 'Veto'\n\tbuttonParam.position = {posXscale * 1.9, posY, (5.75 * posZscale) + posZoffsetOther}\n\tselfIn.createButton(buttonParam)\n\n\tbuttonParam.click_function = 'F'\n\tbuttonParam.label = text.fascistLetter\n\tif swapLF then\n\t\tbuttonParam.position = {posXscale * -1.9, posY, (5.75 * posZscale) + posZoffsetOther}\n\telse\n\t\tbuttonParam.position =  {posXscale * 0.0, posY, (5.75 * posZscale) + posZoffsetOther}\n\tend\n\tselfIn.createButton(buttonParam)\n\n\tbuttonParam.click_function = 'L'\n\tbuttonParam.label = text.liberalLetter\n\tif swapLF then\n\t\tbuttonParam.position = {posXscale * 0.0, posY, (5.75 * posZscale) + posZoffsetOther}\n\telse\n\t\tbuttonParam.position = {posXscale * -1.9, posY, (5.75 * posZscale) + posZoffsetOther}\n\tend\n\tselfIn.createButton(buttonParam)\n\n\t-- Power buttons\n\tbuttonParam.click_function = 'investigate'\n\tbuttonParam.label = 'Investigates'\n\tbuttonParam.position = {posXscale * -2.9, posY, (-0.25 * posZscale) + posZoffsetOther}\n\tbuttonParam.width = 1800 * buttonScale\n\tselfIn.createButton(buttonParam)\n\n\tbuttonParam.click_function = 'givesTo'\n\tbuttonParam.label = 'Gives to'\n\tbuttonParam.position = {posXscale * 0.5, posY, (-0.25 * posZscale) + posZoffsetOther}\n\tbuttonParam.width = 1400 * buttonScale\n\tselfIn.createButton(buttonParam)\n\n\tbuttonParam.click_function = 'shoots'\n\tbuttonParam.label = bulletInfo.action\n\tbuttonParam.position = {posXscale * 3.4, posY, (-0.25 * posZscale) + posZoffsetOther}\n\tbuttonParam.width = 1300 * buttonScale\n\tselfIn.createButton(buttonParam)\n\n\tbuttonParam.click_function = 'liberal'\n\tbuttonParam.label = text.liberalAbbr\n\tbuttonParam.width = 1500 * buttonScale\n\tif swapLF then\n\t\tbuttonParam.position = {posXscale * 0.0, posY, (1.25 * posZscale) + posZoffsetOther}\n\telse\n\t\tbuttonParam.position = {posXscale * -3.2, posY, (1.25 * posZscale) + posZoffsetOther}\n\tend\n\tselfIn.createButton(buttonParam)\n\n\tbuttonParam.click_function = 'fascist'\n\tbuttonParam.label = text.fascistAbbr\n\tif swapLF then\n\t\tbuttonParam.position = {posXscale * -3.2, posY, (1.25 * posZscale) + posZoffsetOther}\n\telse\n\t\tbuttonParam.position = {posXscale * 0.0, posY, (1.25 * posZscale) + posZoffsetOther}\n\tend\n\tselfIn.createButton(buttonParam)\n\n\tbuttonParam.click_function = 'noComment'\n\tbuttonParam.label = 'Nothing'\n\tbuttonParam.position = {posXscale * 3.20, posY, (1.25 * posZscale) + posZoffsetOther}\n\tselfIn.createButton(buttonParam)\n\n\t-- Bottom\n\tbuttonParam.click_function = 'exDiscardButton'\n\tbuttonParam.label = 'Ex Discard'\n\tbuttonParam.width = 1300 * buttonScale\n\tbuttonParam.position = {posXscale * -3.4, posY, (7.25 * posZscale) + posZoffsetOther}\n\tbuttonParam.font_size = 250\n\tselfIn.createButton(buttonParam)\n\n\tbuttonParam.click_function = 'discardsButton'\n\tbuttonParam.label = 'Discards'\n\tbuttonParam.position = {posXscale * -0.65, posY, (7.25 * posZscale) + posZoffsetOther}\n\tselfIn.createButton(buttonParam)\n\n\tbuttonParam.click_function = 'addsButton'\n\tbuttonParam.label = 'Adds to\\nDeck'\n\tbuttonParam.position = {posXscale * 2.1, posY, (7.25 * posZscale) + posZoffsetOther}\n\tselfIn.createButton(buttonParam)\n\nend\n\nfunction spawnScreen(selfIn)\n\tlocal params = {\n\t\ttype = 'Notecard',\n\t\tscale = {3.79999614, 3.79999614, 3.79999614},\n\t\tposition = {-100, 100, -100},\n\t\tcallback = 'spawnScreenCallback',\n\t\tcallback_owner = selfIn,\n\t\tsound = false\n\t}\n\tspawnObject(params)\nend\n\nfunction spawnScreenCallback(objIn, paramsIn)\n\tprivateScreenGUID = objIn.getGUID()\n\trefreshNotes(self)\n\tif playerNoteTaker and not (playerNoteTaker == '') then\n\t\tif forceMenu then\n\t\t\tforceMenu = false\n\t\t\tmenu(self)\n\t\telse\n\t\t\tsetupBoard(self)\n\t\tend\n\telse\n\t\tmenu(self)\n\tend\nend\n\nfunction spawnFogCoroutine()\n\tlocal screen = getObjectFromGUID(privateScreenGUID)\n\tif screen then\n\t\tif privateFogGUID ~= HIDDEN_ZONE_GUIDS[playerNoteTaker] then\n\t\t\tdestroyObjectByGUID(privateFogGUID)\n\t\tend\n\t\tlocal secretZone = getObjectFromGUID(HIDDEN_ZONE_GUIDS[playerNoteTaker])\n\t\tlocal params = {position = {-100, 100, -100}, sound = false}\n\t\tlocal fog\n\t\tif secretZone then\n\t\t\tfog = secretZone.clone(params) -- only way I know to set the color\n\t\telse\n\t\t\tparams.type = 'FogOfWarTrigger'\n\t\t\tfog = spawnObject(params)\n\t\tend\n\t\twait(5)\n\t\tfog.setPosition(screen.getPosition())\n\t\tfog.setRotation(screen.getRotation())\n\t\tfog.setScale({26.2, 3.5, 15.8})\n\t\tprivateFogGUID = fog.getGUID()\n\tend\n\n\treturn true\nend\n\nfunction postButton(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor then\n\t\tif nextPost == nil or nextPost < os.clock() then\n\t\t\tnextPost = os.clock() + 30\n\t\t\tGlobal.setTable('noteTakerNotes', noteTakerNotes)\n\t\t\tGlobal.setVar('noteTakerCurrLine', noteTakerCurrLine)\n\t\t\tlocal options = Global.getTable('options')\n\t\t\tif options.scriptedVoting then\n\t\t\t\tlocal notesString = noteTakerNotesString(19, false, true)\n\t\t\t\tGlobal.setVar('mainNotes', notesString)\n\t\t\t\tsetNotes(Global.getVar('voteNotes') .. '\\n\\n' .. notesString)\n\t\t\telse\n\t\t\t\tlocal notesString = noteTakerNotesString(25, false, true)\n\t\t\t\tsetNotes(notesString)\n\t\t\tend\n\t\telse\n\t\t\tbroadcastToColor('You can only post once every 30 seconds.', playerNoteTaker, {1, 0, 0})\n\t\tend\n\tend\nend\n\nfunction retrieveButton(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor then\n\t\tnoteTakerNotes = Global.getTable('noteTakerNotes')\n\t\tnoteTakerCurrLine = Global.getVar('noteTakerCurrLine')\n\t\tif not noteTakerCurrLine or noteTakerCurrLine == 0 then\n\t\t\tnoteTakerNotes = {}\n\t\t\tnoteTakerCurrLine = 0\n\t\t\taddNewLine()\n\t\tend\n\t\trefreshNotes(clickedObject)\n\tend\nend\n\nfunction addNewLine()\n\tnoteTakerCurrLine = noteTakerCurrLine + 1\n\tif noteTakerCurrLine > #noteTakerNotes then\n\t\ttable.insert(noteTakerNotes, defaultLine())\n\tend\n\teditMode = true\nend\n\nfunction refreshNotes(selfIn)\n\tlocal tempNotes = noteTakerNotesString(maxLines, true, useColor)\n\n\tif selfIn and selfIn.name == 'backgammon_board' then\n\t\ttempNotes = string.gsub(tempNotes, stringColorToHex('White') .. ']', textColorReplace)\n\t\tlocal screen = getObjectFromGUID(privateScreenGUID)\n\t\tif screen then -- save the long version by not using noteTakerSetNotes\n\t\t\tscreen.setDescription(tempNotes)\n\t\tend\n\telse\n\t\tnoteTakerSetNotes(tempNotes)\n\tend\nend\n\nfunction buttonColor(clickedObject, playerColor, colorClicked)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tlocal bulletInfo = Global.getTable('bulletInfo')\n\t\tif noteTakerNotes[noteTakerCurrLine].color1 == '' or not editMode then\n\t\t\tnoteTakerNotes[noteTakerCurrLine].color1 = colorClicked\n\t\t\tnoteTakerNotes[noteTakerCurrLine].action = '>'\n\t\t\tprevPresColor = colorClicked\n\t\telse\n\t\t\tnoteTakerNotes[noteTakerCurrLine].color2 = colorClicked\n\t\t\tprevChanColor = colorClicked\n\t\tend\n\t\tif (noteTakerNotes[noteTakerCurrLine].action == string.lower(bulletInfo.action)\n\t\t\t or noteTakerNotes[noteTakerCurrLine].action == string.lower(imprisonInfo.action)\n\t\t\t or noteTakerNotes[noteTakerCurrLine].action == 'gives pres to')\n\t\t\t and noteTakerNotes[noteTakerCurrLine].color1 ~= '' and noteTakerNotes[noteTakerCurrLine].color2 ~= '' then\n\t\t\taddNewLine()\n\t\tend\n\t\trefreshNotes(clickedObject)\n\tend\nend\n\nfunction White(clickedObject, playerColor)\n\tbuttonColor(clickedObject, playerColor, 'White')\nend\n\nfunction Brown(clickedObject, playerColor)\n\tbuttonColor(clickedObject, playerColor, 'Brown')\nend\n\nfunction Red(clickedObject, playerColor)\n\tbuttonColor(clickedObject, playerColor, 'Red')\nend\n\nfunction Orange(clickedObject, playerColor)\n\tbuttonColor(clickedObject, playerColor, 'Orange')\nend\n\nfunction Yellow(clickedObject, playerColor)\n\tbuttonColor(clickedObject, playerColor, 'Yellow')\nend\n\nfunction Green(clickedObject, playerColor)\n\tbuttonColor(clickedObject, playerColor, 'Green')\nend\n\nfunction Teal(clickedObject, playerColor)\n\tbuttonColor(clickedObject, playerColor, 'Teal')\nend\n\nfunction Blue(clickedObject, playerColor)\n\tbuttonColor(clickedObject, playerColor, 'Blue')\nend\n\nfunction Purple(clickedObject, playerColor)\n\tbuttonColor(clickedObject, playerColor, 'Purple')\nend\n\nfunction Pink(clickedObject, playerColor)\n\tbuttonColor(clickedObject, playerColor, 'Pink')\nend\n\nfunction Tan(clickedObject, playerColor)\n\tbuttonColor(clickedObject, playerColor, 'Tan')\nend\n\nfunction Maroon(clickedObject, playerColor)\n\tbuttonColor(clickedObject, playerColor, 'Maroon')\nend\n\n-- Top\nfunction autoButton(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tlocal tempObj = getObjectFromGUID(PRESIDENT_GUID)\n\t\tlocal pres = closestPlayer(tempObj, MAIN_PLAYABLE_COLORS, 1000)\n\t\ttempObj = getObjectFromGUID(CHANCELOR_GUID)\n\t\tlocal chan = closestPlayer(tempObj, MAIN_PLAYABLE_COLORS, 1000)\n\n\t\tif pres then\n\t\t\tnoteTakerNotes[noteTakerCurrLine].color1 = pres\n\t\t\tnoteTakerNotes[noteTakerCurrLine].action = '>'\n\t\t\tprevPresColor = pres\n\t\tend\n\t\tif chan then\n\t\t\tnoteTakerNotes[noteTakerCurrLine].color2 = chan\n\t\t\tnoteTakerNotes[noteTakerCurrLine].action = '>'\n\t\t\tprevChanColor = chan\n\t\tend\n\t\trefreshNotes(clickedObject)\n\tend\nend\n\nfunction setPreviousPlacs(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tif prevPresColor and prevChanColor then\n\t\t\tlocal tmpPres = getObjectFromGUID(PREV_PRESIDENT_GUID)\n\t\t\tif tmpPres then giveObjectToPlayer(tmpPres, prevPresColor, {forward = 11, right = 0, up = 0, forceHeight = 1.1}, NO_ROT, false, true) end\n\t\t\tlocal tmpChan = getObjectFromGUID(PREV_CHANCELOR_GUID)\n\t\t\tif tmpChan then giveObjectToPlayer(tmpChan, prevChanColor, {forward = 11, right = 0, up = 0, forceHeight = 1.1}, NO_ROT, false, true) end\n\t\tend\n\tend\nend\n\nfunction downvotedButton(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tnoteTakerNotes[noteTakerCurrLine].result = '[222222]Downvoted[-]'\n\t\tnoteTakerNotes[noteTakerCurrLine].action = '>'\n\t\tnoteTakerNotes[noteTakerCurrLine].claim3 = ''\n\t\tnoteTakerNotes[noteTakerCurrLine].claim2 = ''\n\t\tnoteTakerNotes[noteTakerCurrLine].claim1 = ''\n\t\taddNewLine()\n\t\trefreshNotes(clickedObject)\n\t\tincTracker()\n\tend\nend\n\n-- Left\nfunction examinesButton(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tif noteTakerNotes[noteTakerCurrLine].action == 'examines deck:' then\n\t\t\tnoteTakerNotes[noteTakerCurrLine].action = '>'\n\t\telse\n\t\t\tnoteTakerNotes[noteTakerCurrLine].action = 'examines deck:'\n\t\t\tnoteTakerNotes[noteTakerCurrLine].color2 = ''\n\t\tend\n\t\tif noteTakerNotes[noteTakerCurrLine].result ~= '' then\n\t\t\taddNewLine()\n\t\tend\n\t\trefreshNotes(clickedObject)\n\tend\nend\n\nfunction conflictButton(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tif noteTakerConflict(noteTakerCurrLine) then\n\t\t\tnoteTakerNotes[noteTakerCurrLine].conflict = ''\n\t\t\tnoteTakerNotes[noteTakerCurrLine].claim2 = ''\n\t\telse\n\t\t\tnoteTakerNotes[noteTakerCurrLine].conflict = '(Conflict)'\n\t\tend\n\t\trefreshNotes(clickedObject)\n\tend\nend\n\nfunction reshuffleButton(clickedObject, playerColor)\n\tresultOnly(clickedObject, playerColor, '*Reshuffle*')\nend\n\nfunction hZoneButton(clickedObject, playerColor)\n\tlocal text = Global.getTable('text')\n\tresultOnly(clickedObject, playerColor, '[FF0000]' .. text.hitler .. ' territory![-]')\nend\n\nfunction resultOnly(clickedObject, playerColor, text)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tif noteTakerNotes[noteTakerCurrLine].result == text then\n\t\t\tnoteTakerNotes[noteTakerCurrLine].result = ''\n\t\telse\n\t\t\tnoteTakerNotes[noteTakerCurrLine].conflict = ''\n\t\t\tnoteTakerNotes[noteTakerCurrLine].color1 = ''\n\t\t\tnoteTakerNotes[noteTakerCurrLine].action = ''\n\t\t\tnoteTakerNotes[noteTakerCurrLine].color2 = ''\n\t\t\tnoteTakerNotes[noteTakerCurrLine].claim3 = ''\n\t\t\tnoteTakerNotes[noteTakerCurrLine].claim2 = ''\n\t\t\tnoteTakerNotes[noteTakerCurrLine].claim1 = ''\n\t\t\tnoteTakerNotes[noteTakerCurrLine].result = text\n\t\t\taddNewLine()\n\t\tend\n\t\trefreshNotes(clickedObject)\n\tend\nend\n\nfunction topdeckButton(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tif noteTakerNotes[noteTakerCurrLine].action == 'Topdeck:' then\n\t\t\tnoteTakerNotes[noteTakerCurrLine].action = ''\n\t\telse\n\t\t\tnoteTakerNotes[noteTakerCurrLine].conflict = ''\n\t\t\tnoteTakerNotes[noteTakerCurrLine].color1 = ''\n\t\t\tnoteTakerNotes[noteTakerCurrLine].action = 'Topdeck:'\n\t\t\tnoteTakerNotes[noteTakerCurrLine].color2 = ''\n\t\t\tnoteTakerNotes[noteTakerCurrLine].claim3 = ''\n\t\t\tnoteTakerNotes[noteTakerCurrLine].claim2 = ''\n\t\t\tnoteTakerNotes[noteTakerCurrLine].claim1 = ''\n\t\t\tif noteTakerNotes[noteTakerCurrLine].result ~= '' then\n\t\t\t\taddNewLine()\n\t\t\tend\n\t\tend\n\t\trefreshNotes(clickedObject)\n\tend\nend\n\nfunction revisedButton(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tif noteTakerConflict(noteTakerCurrLine) then\n\t\t\tif noteTakerNotes[noteTakerCurrLine].conflict == '(Rev Con)' then\n\t\t\t\tnoteTakerNotes[noteTakerCurrLine].conflict = '(Conflict)'\n\t\t\telse\n\t\t\t\tnoteTakerNotes[noteTakerCurrLine].conflict = '(Rev Con)'\n\t\t\tend\n\t\telseif noteTakerNotes[noteTakerCurrLine].conflict == '(Rev)' then\n\t\t\tnoteTakerNotes[noteTakerCurrLine].conflict = ''\n\t\telse\n\t\t\tnoteTakerNotes[noteTakerCurrLine].conflict = '(Rev)'\n\t\tend\n\t\trefreshNotes(clickedObject)\n\tend\nend\n\n-- Right\nfunction deleteLineButton(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tif noteTakerCurrLine == #noteTakerNotes then\n\t\t\ttable.remove(noteTakerNotes, noteTakerCurrLine)\n\t\t\tnoteTakerCurrLine = noteTakerCurrLine - 1\n\t\t\taddNewLine()\n\t\telse\n\t\t\ttable.remove(noteTakerNotes, noteTakerCurrLine)\n\t\tend\n\t\trefreshNotes(clickedObject)\n\tend\nend\n\nfunction insertLineButton(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\ttable.insert(noteTakerNotes, noteTakerCurrLine, defaultLine())\n\t\trefreshNotes(clickedObject)\n\tend\nend\n\nfunction topButton(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tnoteTakerCurrLine = 1\n\t\trefreshNotes(clickedObject)\n\t\teditMode = true\n\tend\nend\n\nfunction bottomButton(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tnoteTakerCurrLine = #noteTakerNotes\n\t\trefreshNotes(clickedObject)\n\t\teditMode = true\n\tend\nend\n\nfunction upButton(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tif noteTakerCurrLine - 1 > 0 then\n\t\t\tnoteTakerCurrLine = noteTakerCurrLine - 1\n\t\tend\n\t\teditMode = true\n\t\trefreshNotes(clickedObject)\n\t\tif noteTakerNotes[noteTakerCurrLine].color1 ~= '' then\n\t\t\tprevPresColor = noteTakerNotes[noteTakerCurrLine].color1\n\t\tend\n\t\tif noteTakerNotes[noteTakerCurrLine].color2 ~= '' then\n\t\t\tprevChanColor = noteTakerNotes[noteTakerCurrLine].color2\n\t\tend\n\tend\nend\n\nfunction downButton(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\taddNewLine()\n\t\teditMode = true\n\t\trefreshNotes(clickedObject)\n\t\tif noteTakerNotes[noteTakerCurrLine].color1 ~= '' then\n\t\t\tprevPresColor = noteTakerNotes[noteTakerCurrLine].color1\n\t\tend\n\t\tif noteTakerNotes[noteTakerCurrLine].color2 ~= '' then\n\t\t\tprevChanColor = noteTakerNotes[noteTakerCurrLine].color2\n\t\tend\n\tend\nend\n\nfunction rightButton(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\teditMode = true\n\t\trefreshNotes(clickedObject)\n\tend\nend\n\nfunction leftButton(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\teditMode = false\n\t\trefreshNotes(clickedObject)\n\tend\nend\n\n-- Center\nfunction investigate(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tif noteTakerNotes[noteTakerCurrLine].action == 'inspects' then\n\t\t\tnoteTakerNotes[noteTakerCurrLine].action = '>'\n\t\telse\n\t\t\tnoteTakerNotes[noteTakerCurrLine].action = 'inspects'\n\t\tend\n\t\tif noteTakerNotes[noteTakerCurrLine].color1 ~= ''\n\t\t\tand noteTakerNotes[noteTakerCurrLine].color2 ~= ''\n\t\t\tand noteTakerNotes[noteTakerCurrLine].result ~= '' then\n\t\t\taddNewLine()\n\t\tend\n\t\trefreshNotes(clickedObject)\n\tend\nend\n\nfunction givesTo(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tif noteTakerNotes[noteTakerCurrLine].action == 'gives pres to' then\n\t\t\tnoteTakerNotes[noteTakerCurrLine].action = '>'\n\t\telse\n\t\t\tnoteTakerNotes[noteTakerCurrLine].action = 'gives pres to'\n\t\tend\n\t\tif noteTakerNotes[noteTakerCurrLine].color1 ~= ''\n\t\t\tand noteTakerNotes[noteTakerCurrLine].color2 ~= '' then\n\t\t\taddNewLine()\n\t\tend\n\t\trefreshNotes(clickedObject)\n\tend\nend\n\nfunction shoots(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tlocal bulletInfo = Global.getTable('bulletInfo')\n\t\tif noteTakerNotes[noteTakerCurrLine].action == string.lower(bulletInfo.action) then\n\t\t\tnoteTakerNotes[noteTakerCurrLine].action = '>'\n\t\telse\n\t\t\tnoteTakerNotes[noteTakerCurrLine].action = string.lower(bulletInfo.action)\n\t\tend\n\t\tif noteTakerNotes[noteTakerCurrLine].color1 ~= ''\n\t\t\tand noteTakerNotes[noteTakerCurrLine].color2 ~= '' then\n\t\t\taddNewLine()\n\t\tend\n\t\trefreshNotes(clickedObject)\n\tend\nend\n\nfunction liberal(clickedObject, playerColor)\n\tlocal text = Global.getTable('text')\n\tresultText(clickedObject, playerColor, 'claims [0080F8]' .. text.liberalAbbr .. '[-]')\nend\n\nfunction fascist(clickedObject, playerColor)\n\tlocal text = Global.getTable('text')\n\tresultText(clickedObject, playerColor, 'claims [FF0000]' .. text.fascistAbbr .. '[-]')\nend\n\nfunction noComment(clickedObject, playerColor)\n\tresultText(clickedObject, playerColor, 'says [i]Nothing[/i]')\nend\n\nfunction resultText(clickedObject, playerColor, text)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tif noteTakerNotes[noteTakerCurrLine].result == text then\n\t\t\tnoteTakerNotes[noteTakerCurrLine].result = ''\n\t\telse\n\t\t\tnoteTakerNotes[noteTakerCurrLine].result = text\n\t\t\taddNewLine()\n\t\tend\n\t\trefreshNotes(clickedObject)\n\tend\nend\n\nfunction LLL(clickedObject, playerColor)\n\tlocal text = Global.getTable('text')\n\tXXX(clickedObject, playerColor, '[0080F8]' .. text.liberalLetter .. text.liberalLetter .. text.liberalLetter .. '[-]')\nend\n\nfunction FLL(clickedObject, playerColor)\n\tlocal text = Global.getTable('text')\n\tXXX(clickedObject, playerColor, '[FF0000]' .. text.fascistLetter .. '[-][0080F8]' .. text.liberalLetter .. text.liberalLetter .. '[-]')\nend\n\nfunction FFL(clickedObject, playerColor)\n\tlocal text = Global.getTable('text')\n\tXXX(clickedObject, playerColor, '[FF0000]' .. text.fascistLetter .. text.fascistLetter .. '[-][0080F8]' .. text.liberalLetter .. '[-]')\nend\n\nfunction FFF(clickedObject, playerColor)\n\tlocal text = Global.getTable('text')\n\tXXX(clickedObject, playerColor, '[FF0000]' .. text.fascistLetter .. text.fascistLetter .. text.fascistLetter .. '[-]')\nend\n\nfunction QQQ(clickedObject, playerColor)\n\tXXX(clickedObject, playerColor, '???')\nend\n\nfunction XXX(clickedObject, playerColor, text)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tif noteTakerNotes[noteTakerCurrLine].action == 'examines deck:' then\n\t\t\tif noteTakerNotes[noteTakerCurrLine].result == text then\n\t\t\t\tnoteTakerNotes[noteTakerCurrLine].result = ''\n\t\t\telse\n\t\t\t\tnoteTakerNotes[noteTakerCurrLine].result = text\n\t\t\t\taddNewLine()\n\t\t\tend\n\t\telse\n\t\t\tif noteTakerNotes[noteTakerCurrLine].claim3 == text then\n\t\t\t\tnoteTakerNotes[noteTakerCurrLine].claim3 = ''\n\t\t\telse\n\t\t\t\tnoteTakerNotes[noteTakerCurrLine].claim3 = text\n\t\t\t\tif noteTakerNotes[noteTakerCurrLine].claim1 ~= ''\n\t\t\t\t\t\tand noteTakerNotes[noteTakerCurrLine].result ~= ''\n\t\t\t\t\t\tand noteTakerCurrLine == #noteTakerNotes then\n\t\t\t\t\taddNewLine()\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\trefreshNotes(clickedObject)\n\tend\nend\n\nfunction LL(clickedObject, playerColor)\n\tlocal text = Global.getTable('text')\n\tXX(clickedObject, playerColor, '[0080F8]' .. text.liberalLetter .. text.liberalLetter .. '[-]')\nend\n\nfunction FL(clickedObject, playerColor)\n\tlocal text = Global.getTable('text')\n\tXX(clickedObject, playerColor, '[FF0000]' .. text.fascistLetter .. '[-][0080F8]' .. text.liberalLetter .. '[-]')\nend\n\nfunction FF(clickedObject, playerColor)\n\tlocal text = Global.getTable('text')\n\tXX(clickedObject, playerColor, '[FF0000]' .. text.fascistLetter .. text.fascistLetter .. '[-]')\nend\n\nfunction QQ(clickedObject, playerColor)\n\tXX(clickedObject, playerColor, '??')\nend\n\nfunction XX(clickedObject, playerColor, text)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tif not editMode or (noteTakerNotes[noteTakerCurrLine].claim2 == ''\n\t\t\tand noteTakerConflict(noteTakerCurrLine)) then\n\t\t\tif noteTakerNotes[noteTakerCurrLine].claim2 == text then\n\t\t\t\tnoteTakerNotes[noteTakerCurrLine].claim2 = ''\n\t\t\telse\n\t\t\t\tnoteTakerNotes[noteTakerCurrLine].claim2 = text\n\t\t\tend\n\t\telse\n\t\t\tif noteTakerNotes[noteTakerCurrLine].claim1 == text then\n\t\t\t\tnoteTakerNotes[noteTakerCurrLine].claim1 = ''\n\t\t\telse\n\t\t\t\tnoteTakerNotes[noteTakerCurrLine].claim1 = text\n\t\t\tend\n\t\tend\n\t\trefreshNotes(clickedObject)\n\tend\nend\n\nfunction L(clickedObject, playerColor)\n\tlocal text = Global.getTable('text')\n\tX(clickedObject, playerColor, '[0080F8]' .. text.liberalLetter .. '[-]')\nend\n\nfunction F(clickedObject, playerColor)\n\tlocal text = Global.getTable('text')\n\tX(clickedObject, playerColor, '[FF0000]' .. text.fascistLetter .. '[-]')\nend\n\nfunction X(clickedObject, playerColor, text)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tif noteTakerNotes[noteTakerCurrLine].result == text then\n\t\t\tnoteTakerNotes[noteTakerCurrLine].result = ''\n\t\telse\n\t\t\tnoteTakerNotes[noteTakerCurrLine].result = text\n\t\t\tif noteTakerCurrLine == #noteTakerNotes and\n\t\t\t\t((noteTakerNotes[noteTakerCurrLine].claim1 ~= ''\n\t\t\t\t  and noteTakerNotes[noteTakerCurrLine].claim3 ~= '')\n\t\t\t\t or noteTakerNotes[noteTakerCurrLine].action == 'Topdeck:'\n\t\t\t\t or noteTakerNotes[noteTakerCurrLine].action == 'examines deck:') then\n\t\t\t\taddNewLine()\n\t\t\tend\n\t\t\tresetTracker()\n\t\tend\n\t\trefreshNotes(clickedObject)\n\tend\nend\n\nfunction vetoButton(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tnoteTakerNotes[noteTakerCurrLine].result = 'Veto!'\n\t\taddNewLine()\n\t\trefreshNotes(clickedObject)\n\t\tincTracker()\n\tend\nend\n\n--Bottom\nfunction exDiscardButton(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tif noteTakerNotes[noteTakerCurrLine].action == 'examines discard:' then\n\t\t\tnoteTakerNotes[noteTakerCurrLine].action = '>'\n\t\telse\n\t\t\tnoteTakerNotes[noteTakerCurrLine].action = 'examines discard:'\n\t\t\tnoteTakerNotes[noteTakerCurrLine].color2 = ''\n\t\tend\n\t\tif noteTakerNotes[noteTakerCurrLine].result ~= '' then\n\t\t\taddNewLine()\n\t\tend\n\t\trefreshNotes(clickedObject)\n\tend\nend\n\nfunction discardsButton(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tif noteTakerNotes[noteTakerCurrLine].action == 'discards:' then\n\t\t\tnoteTakerNotes[noteTakerCurrLine].action = '>'\n\t\telse\n\t\t\tnoteTakerNotes[noteTakerCurrLine].action = 'discards:'\n\t\t\tnoteTakerNotes[noteTakerCurrLine].color2 = ''\n\t\tend\n\t\tif noteTakerNotes[noteTakerCurrLine].result ~= '' then\n\t\t\taddNewLine()\n\t\tend\n\t\trefreshNotes(clickedObject)\n\tend\nend\n\nfunction addsButton(clickedObject, playerColor)\n\tif clickedObject.getVar('playerNoteTaker') == playerColor or Player[playerColor].admin then\n\t\tif noteTakerNotes[noteTakerCurrLine].action == 'adds to deck:' then\n\t\t\tnoteTakerNotes[noteTakerCurrLine].action = '>'\n\t\telse\n\t\t\tnoteTakerNotes[noteTakerCurrLine].action = 'adds to deck:'\n\t\t\tnoteTakerNotes[noteTakerCurrLine].color2 = ''\n\t\tend\n\t\tif noteTakerNotes[noteTakerCurrLine].result ~= '' then\n\t\t\taddNewLine()\n\t\tend\n\t\trefreshNotes(clickedObject)\n\tend\nend\n\nfunction incTracker()\n\tlocal tracker = getObjectFromGUID(ELECTION_TRACKER_GUID)\n\tif moveTracker and tracker then\n\t\ttracker.translate({electionTrackerMoveX, 0, 0})\n\tend\nend\n\nfunction resetTracker()\n\tlocal tracker = getObjectFromGUID(ELECTION_TRACKER_GUID)\n\tif moveTracker and tracker then\n\t\ttracker.setPositionSmooth(electionTrackerOrgPos)\n\t\ttracker.setRotationSmooth({0, 315, 0})\n\tend\nend\n\nfunction defaultLine()\n\treturn {conflict = '', color1 = '', action = '', color2 = '', claim3 = '', claim2 = '', claim1 = '', result = ''}\nend\n\nfunction noteTakerNotesString(maxLinesIn, showArrow, useColorIn)\n\tlocal stringOut = ''\n\tlocal startLine = 1\n\tlocal lastLine = #noteTakerNotes\n\n\tif maxLinesIn < #noteTakerNotes then\n\t\tstartLine = #noteTakerNotes - maxLinesIn + 1\n\tend\n\tif startLine > noteTakerCurrLine then\n\t\tstartLine = noteTakerCurrLine\n\t\tlastLine = startLine + maxLinesIn - 1\n\t\tif lastLine > #noteTakerNotes then\n\t\t\tlastLine = #noteTakerNotes\n\t\tend\n\tend\n\n\tfor i = startLine, lastLine, 1 do\n\t\tif noteTakerCurrLine == i and showArrow then\n\t\t\tif editMode then\n\t\t\t\tstringOut = stringOut .. right_unicode .. ' '\n\t\t\telse\n\t\t\t\tstringOut = stringOut .. left_unicode .. ' '\n\t\t\tend\n\t\tend\n\t\tstringOut = stringOut .. noteTakerNotesLine(i, useColorIn)\n\tend\n\n\tif not useColorIn then\n\t\tstringOut = string.gsub(stringOut, '0080F8]', textColorReplace) -- Liberal color\n\t\tstringOut = string.gsub(stringOut, 'FF0000]', textColorReplace) -- Fascist color\n\t\tstringOut = string.gsub(stringOut, '222222]', textColorReplace) -- Downvote color\n\tend\n\n\treturn stringOut\nend\n\nfunction noteTakerNotesLine(lineIn, useColorIn)\n\tlocal bulletInfo = Global.getTable('bulletInfo')\n\tlocal stringOut = ''\n\n\tif noteTakerNotes[lineIn].conflict ~= '' then\n\t\tstringOut = stringOut .. noteTakerNotes[lineIn].conflict .. ' '\n\tend\n\tif noteTakerNotes[lineIn].color1 ~= '' then\n\t\tlocal text = noteTakerNotes[lineIn].color1\n\t\tif useNames then\n\t\t\tlocal playerObj = nil\n\t\t\tif greyPlayer(noteTakerNotes[lineIn].color1) then\n\t\t\t\tplayerObj = getPlayerObj(noteTakerNotes[lineIn].color1)\n\t\t\telse\n\t\t\t\tplayerObj = Player[noteTakerNotes[lineIn].color1]\n\t\t\tend\n\t\t\tif playerObj then text = string.sub(playerObj.steam_name, 1, 7) end\n\t\tend\n\t\tif useColorIn then\n\t\t\ttext = '[' .. stringColorToHex(noteTakerNotes[lineIn].color1) .. ']' .. text .. '[-]'\n\t\tend\n\t\tstringOut = stringOut .. '[i]' .. text .. '[/i]' .. ' '\n\tend\n\tif noteTakerNotes[lineIn].action ~= '' then\n\t\tstringOut = stringOut .. noteTakerNotes[lineIn].action .. ' '\n\tend\n\tif noteTakerNotes[lineIn].color2 ~= '' then\n\t\tlocal text = noteTakerNotes[lineIn].color2\n\t\tif useNames then\n\t\t\tlocal playerObj = nil\n\t\t\tif greyPlayer(noteTakerNotes[lineIn].color2) then\n\t\t\t\tplayerObj = getPlayerObj(noteTakerNotes[lineIn].color2)\n\t\t\telse\n\t\t\t\tplayerObj = Player[noteTakerNotes[lineIn].color2]\n\t\t\tend\n\t\t\tif playerObj then text = string.sub(playerObj.steam_name, 1, 7) end\n\t\tend\n\t\tif useColorIn then\n\t\t\ttext = '[' .. stringColorToHex(noteTakerNotes[lineIn].color2) .. ']' .. text .. '[-]'\n\t\tend\n\t\tstringOut = stringOut .. '[i]' .. text .. '[/i]'\n\t\tif noteTakerNotes[lineIn].action ~= 'gives pres to'\n\t\t\tand noteTakerNotes[lineIn].action ~= string.lower(bulletInfo.action)\n\t\t\tand noteTakerNotes[lineIn].action ~= string.lower(imprisonInfo.action) then\n\t\t\tstringOut = stringOut .. ': '\n\t\telseif noteTakerNotes[lineIn].claim3 ~= ''\n\t\t\t\tor noteTakerNotes[lineIn].claim2 ~= ''\n\t\t\t\tor noteTakerNotes[lineIn].claim1 ~= ''\n\t\t\t\tor noteTakerNotes[lineIn].result ~= '' then\n\t\t\tstringOut = stringOut .. ' '\n\t\tend\n\tend\n\tif noteTakerNotes[lineIn].claim3 ~= '' then\n\t\tstringOut = stringOut .. noteTakerNotes[lineIn].claim3 .. ' > '\n\tend\n\tif noteTakerNotes[lineIn].claim2 ~= '' then\n\t\tstringOut = stringOut .. noteTakerNotes[lineIn].claim2 .. ' > '\n\tend\n\tif noteTakerNotes[lineIn].claim1 ~= '' then\n\t\tstringOut = stringOut .. noteTakerNotes[lineIn].claim1 .. ' > '\n\tend\n\tif noteTakerNotes[lineIn].result ~= '' then\n\t\tstringOut = stringOut .. noteTakerNotes[lineIn].result\n\tend\n\tstringOut = stringOut .. '\\n'\n\n\treturn stringOut\nend\n\nfunction noteTakerConflict(currLineIn)\n\tif noteTakerNotes[currLineIn].conflict == '(Conflict)' then\n\t\treturn true\n\telseif noteTakerNotes[currLineIn].conflict == '(Rev Con)' then\n\t\treturn true\n\tend\n\n\treturn false\nend\n\nfunction notateInfo(color1In, actionIn, color2In, resultIn, updateLaterIn)\n\tlocal lineSave = noteTakerCurrLine\n\tnoteTakerCurrLine = #noteTakerNotes\n\tif not noteTakerBlankLine(noteTakerCurrLine) then\n\t\taddNewLine()\n\t\tnoteTakerCurrLine = #noteTakerNotes\n\tend\n\tnoteTakerNotes[noteTakerCurrLine].color1 = color1In\n\tnoteTakerNotes[noteTakerCurrLine].action = actionIn\n\tnoteTakerNotes[noteTakerCurrLine].color2 = color2In\n\tnoteTakerNotes[noteTakerCurrLine].result = resultIn\n\tif updateLaterIn then\n\t\tnotate.line = noteTakerCurrLine\n\t\tnotate.action = actionIn\n\tend\n\tnoteTakerCurrLine = lineSave\n\trefreshNotes(nil)\nend\n\nfunction noteTakerBlankLine(currLineIn)\n\tif noteTakerNotes[noteTakerCurrLine].conflict == ''\n\t\tand noteTakerNotes[noteTakerCurrLine].color1 == ''\n\t\tand noteTakerNotes[noteTakerCurrLine].action == ''\n\t\tand noteTakerNotes[noteTakerCurrLine].color2 == ''\n\t\tand noteTakerNotes[noteTakerCurrLine].claim3 == ''\n\t\tand noteTakerNotes[noteTakerCurrLine].claim2 == ''\n\t\tand noteTakerNotes[noteTakerCurrLine].claim1 == ''\n\t\tand noteTakerNotes[noteTakerCurrLine].result == '' then\n\t\t\treturn true\n\tend\n\n\treturn false\nend\n\nfunction noteTakerSetNotes(stringIn)\n\tlocal options = Global.getTable('options')\n\tif options.scriptedVoting then\n\t\tGlobal.setVar('mainNotes', stringIn)\n\t\tsetNotes(Global.getVar('voteNotes') .. '\\n\\n' .. stringIn)\n\telse\n\t\tsetNotes(stringIn)\n\tend\nend\n\nfunction newNoteTakerLuaScript(playerNoteTakerIn, useColorIn, cooperativeIn, colorMatchIn, useNamesIn, swapLFIn, moveTrackerIn)\n\tlocal mainScript = Global.getLuaScript()\n\tlocal cutHerePos = string.find(mainScript, '--CUT HERE')\n\n\treturn 'useColor = ' .. useColorIn .. '\\r\\n' ..\n\t'cooperative = ' .. cooperativeIn .. '\\r\\n' ..\n\t'colorMatch = ' .. colorMatchIn .. '\\r\\n' ..\n\t'useNames = ' .. useNamesIn .. '\\r\\n' ..\n\t'playerNoteTaker = \\'' .. playerNoteTakerIn .. '\\'\\r\\n' ..\n\t'privateFogGUID = nil\\r\\n' ..\n\t'privateScreenGUID = nil\\r\\n' ..\n\t'swapLF = ' .. swapLFIn .. '\\r\\n' ..\n\t'moveTracker = ' .. moveTrackerIn .. '\\r\\n' ..\n\t'prevPresColor = nil\\r\\n' ..\n\t'prevChanColor = nil\\r\\n' ..\n\t'nextPost = nil\\r\\n' ..\n\t'forceMenu = nil\\r\\n' ..\n\t'lastGUID = nil\\r\\n' ..\n\t'\\r\\n' ..\n\t'function onLoad(saveString)\\r\\n' ..\n\t'\tnoteTakerOnLoad(saveString)\\r\\n' ..\n\t'end\\r\\n' ..\n\t'\\r\\n' ..\n\t'function onSave()\\r\\n' ..\n\t'\treturn notetakerOnSave()\\r\\n' ..\n\t'end\\r\\n' ..\n\t'\\r\\n' ..\n\t'function onDestroy()\\r\\n' ..\n\t'\tnotetakerOnDestroy()\\r\\n' ..\n\t'end\\r\\n' ..\n\tstring.sub(mainScript, cutHerePos, string.len(mainScript))\nend\n\nfunction respawnNoteTakerLuaScript()\n\tlocal mainScript = self.getLuaScript()\n\tlocal cutHerePos = string.find(mainScript, '--CUT HERE')\n\n\treturn 'useColor = ' .. tostring(useColor) .. '\\r\\n' ..\n\t'cooperative = ' .. tostring(cooperative) .. '\\r\\n' ..\n\t'colorMatch = ' .. tostring(colorMatch) .. '\\r\\n' ..\n\t'useNames = ' .. tostring(useNames) .. '\\r\\n' ..\n\t'playerNoteTaker = ' .. easyQuotes(playerNoteTaker) .. '\\r\\n' ..\n\t'privateFogGUID = ' .. easyQuotes(privateFogGUID) .. '\\r\\n' ..\n\t'privateScreenGUID = ' .. easyQuotes(privateScreenGUID) .. '\\r\\n' ..\n\t'swapLF = ' .. tostring(swapLF) .. '\\r\\n' ..\n\t'moveTracker = ' .. tostring(moveTracker) .. '\\r\\n' ..\n\t'prevPresColor = ' .. easyQuotes(prevPresColor) .. '\\r\\n' ..\n\t'prevChanColor = ' .. easyQuotes(prevChanColor) .. '\\r\\n' ..\n\t'nextPost = ' .. tostring(nextPost) .. '\\r\\n' ..\n\t'forceMenu = ' ..  tostring(forceMenu) .. '\\r\\n' ..\n\t'lastGUID = ' .. easyQuotes(self.getGUID()) .. '\\r\\n' ..\n\t'\\r\\n' ..\n\t'function onLoad(saveString)\\r\\n' ..\n\t'\tnoteTakerOnLoad(saveString)\\r\\n' ..\n\t'end\\r\\n' ..\n\t'\\r\\n' ..\n\t'function onSave()\\r\\n' ..\n\t'\treturn notetakerOnSave()\\r\\n' ..\n\t'end\\r\\n' ..\n\t'\\r\\n' ..\n\t'function onDestroy()\\r\\n' ..\n\t'\tnotetakerOnDestroy()\\r\\n' ..\n\t'end\\r\\n' ..\n\tstring.sub(mainScript, cutHerePos, string.len(mainScript))\nend\n\nfunction easyQuotes(stringIn)\n\tif stringIn then\n\t\treturn string.char(39) .. stringIn .. string.char(39)\n\telse\n\t\treturn 'nil'\n\tend\nend\n\n----#include \\SecretHitlerCE\\notetaker.ttslua\n----#include \\SecretHitlerCE\\common.ttslua\n--Static\nALL_PLAYABLE_COLORS = {\"White\", \"Brown\", \"Red\", \"Orange\", \"Yellow\", \"Green\", \"Teal\", \"Blue\", \"Purple\", \"Pink\", \"Tan\", \"Maroon\"}\nMAIN_PLAYABLE_COLORS = {\"White\", \"Brown\", \"Red\", \"Orange\", \"Yellow\", \"Green\", \"Teal\", \"Blue\", \"Purple\", \"Pink\"}\n\nGREY_PLAYABLE_COLORS = {\"Tan\", \"Maroon\"}\nGREY_PLAYABLE_COLORS_RGB = {Tan = {r = 210/255, g = 180/255, b = 140/255}, Maroon = {r = 128/255, g = 0/255, b = 0/255}}\nGREY_AVATAR_POS = {Tan = {29.30, 9.4, -54}, Maroon = {0, 9.4, -54}}\nGREY_HAND_ZONE_GUIDS = {Maroon = \"b9a8d0\", Tan = \"409da9\"}\nGREY_TEXT_GUIDS = {Tan = \"37d7b5\", Maroon = \"13f08c\"}\nGREY_VOTE_POS = {Tan = {29.30, 1.05, -35.50}, Maroon = {0, 1.05, -35.50}}\n-- FIXME don't hardcode GREY_ABILITY_POS\nGREY_ABILITY_POS = {Tan = {37, 1.2, -41}, Maroon = {12.60, 1.2, -41}}\nGREY_FORWARD = 0\nGREY_RIGHT = 0\nGREY_UP = 0.3\n\nNO_ROT = {x = 0, y = 0, z = 0}\nFACE_UP_ROT = {x = 0, y = 180, z = 0}\nFACE_DOWN_ROT = {x = 0, y = 180, z = 180}\n\nfunction getPlayerPosRotVectors(playerColor)\n\tlocal returnVal = {}\n\n\tif greyPlayer(playerColor) then\n\t\tlocal ph = getObjectFromGUID(greyPlayerHandGuids[playerColor])\n\t\tif ph then\n\t\t\tlocal pos = ph.getPosition()\n\t\t\treturnVal.pos = {x = pos[\"x\"], y = pos[\"y\"], z = pos[\"z\"] - 2.26}\n\t\t\treturnVal.rot = ph.getRotation()\n\t\t\treturnVal.vForward = ph.getTransformForward()\n\t\t\treturnVal.vRight = ph.getTransformRight()\n\t\t\treturnVal.vUp = ph.getTransformUp()\n\t\tend\n\telse\n\t\tlocal ph = Player[playerColor].getPlayerHand();\n\t\tif ph then\n\t\t\treturnVal.pos = {x = ph[\"pos_x\"], y = ph[\"pos_y\"], z = ph[\"pos_z\"]}\n\t\t\treturnVal.rot = {x = ph[\"rot_x\"], y = ph[\"rot_y\"], z = ph[\"rot_z\"]}\n\t\t\treturnVal.vForward = {x = ph[\"trigger_forward_x\"], y = ph[\"trigger_forward_y\"], z = ph[\"trigger_forward_z\"]}\n\t\t\treturnVal.vRight = {x = ph[\"trigger_right_x\"], y = ph[\"trigger_right_y\"], z = ph[\"trigger_right_z\"]}\n\t\t\treturnVal.vUp = {x = ph[\"trigger_up_x\"], y = ph[\"trigger_up_y\"], z = ph[\"trigger_up_z\"]}\n\t\tend\n\tend\n\n\treturn returnVal\nend\n\n--function giveObjectToPlayer(object, playerColor, posAdd, rotAdd, collide, fast)\nfunction giveObjectToPlayer(object, playerColor, posAdd, rotAdd, ...)\n\tlocal info = getPlayerPosRotVectors(playerColor)\n\tif info then\n\t\tif rotAdd[\"exactRot\"] then\n\t\t\tobject.setRotationSmooth({rotAdd[\"x\"], rotAdd[\"y\"], rotAdd[\"z\"]}, ...)\n\t\telse\n\t\t\tobject.setRotationSmooth({info.rot[\"x\"] + rotAdd[\"x\"], info.rot[\"y\"] + rotAdd[\"y\"], info.rot[\"z\"] + rotAdd[\"z\"]}, ...)\n\t\tend\n\t\tif posAdd[\"forceHeight\"] then\n\t\t\tobject.setPositionSmooth({info.pos[\"x\"] + info.vForward[\"x\"] * posAdd[\"forward\"] + info.vRight[\"x\"] * posAdd[\"right\"] + info.vUp[\"x\"] * posAdd[\"up\"],\n\t\t\t\t\t\t\t\t\t\t\t  posAdd[\"forceHeight\"],\n\t\t\t\t\t\t\t\t\t\t\t  info.pos[\"z\"] + info.vForward[\"z\"] * posAdd[\"forward\"] + info.vRight[\"z\"] * posAdd[\"right\"] + info.vUp[\"z\"] * posAdd[\"up\"]}, ...)\n\t\telse\n\t\t\tobject.setPositionSmooth({info.pos[\"x\"] + info.vForward[\"x\"] * posAdd[\"forward\"] + info.vRight[\"x\"] * posAdd[\"right\"] + info.vUp[\"x\"] * posAdd[\"up\"],\n\t\t\t\t\t\t\t\t\t\t\t  info.pos[\"y\"] + info.vForward[\"y\"] * posAdd[\"forward\"] + info.vRight[\"y\"] * posAdd[\"right\"] + info.vUp[\"y\"] * posAdd[\"up\"],\n\t\t\t\t\t\t\t\t\t\t\t  info.pos[\"z\"] + info.vForward[\"z\"] * posAdd[\"forward\"] + info.vRight[\"z\"] * posAdd[\"right\"] + info.vUp[\"z\"] * posAdd[\"up\"]}, ...)\n\t\tend\n\tend\nend\n\nfunction forceObjectToPlayer(object, playerColor, posAdd, rotAdd)\n\tlocal info = getPlayerPosRotVectors(playerColor)\n\tif info then\n\t\tif rotAdd[\"exactRot\"] then\n\t\t\tobject.setRotation({rotAdd[\"x\"], rotAdd[\"y\"], rotAdd[\"z\"]})\n\t\telse\n\t\t\tobject.setRotation({info.rot[\"x\"] + rotAdd[\"x\"], info.rot[\"y\"] + rotAdd[\"y\"], info.rot[\"z\"] + rotAdd[\"z\"]})\n\t\tend\n\t\tif posAdd[\"forceHeight\"] then\n\t\t\tobject.setPosition({info.pos[\"x\"] + info.vForward[\"x\"] * posAdd[\"forward\"] + info.vRight[\"x\"] * posAdd[\"right\"] + info.vUp[\"x\"] * posAdd[\"up\"],\n\t\t\t\t\t\t\t\t\t  posAdd[\"forceHeight\"],\n\t\t\t\t\t\t\t\t\t  info.pos[\"z\"] + info.vForward[\"z\"] * posAdd[\"forward\"] + info.vRight[\"z\"] * posAdd[\"right\"] + info.vUp[\"z\"] * posAdd[\"up\"]})\n\t\telse\n\t\t\tobject.setPosition({info.pos[\"x\"] + info.vForward[\"x\"] * posAdd[\"forward\"] + info.vRight[\"x\"] * posAdd[\"right\"] + info.vUp[\"x\"] * posAdd[\"up\"],\n\t\t\t\t\t\t\t\t\t  info.pos[\"y\"] + info.vForward[\"y\"] * posAdd[\"forward\"] + info.vRight[\"y\"] * posAdd[\"right\"] + info.vUp[\"y\"] * posAdd[\"up\"],\n\t\t\t\t\t\t\t\t\t  info.pos[\"z\"] + info.vForward[\"z\"] * posAdd[\"forward\"] + info.vRight[\"z\"] * posAdd[\"right\"] + info.vUp[\"z\"] * posAdd[\"up\"]})\n\t\tend\n\tend\nend\n\n--tableIn = {guid = , max = , forward = , height = }\nfunction moveObjectToPlayerByGUID(tableIn)\n\tlocal object = getObjectFromGUID(tableIn.guid)\n\tif object then\n\t\tlocal playerColor = closestPlayer(object, players, tableIn.max)\n\t\tif playerColor then\n\t\t\tgiveObjectToPlayer(object, playerColor, {forward = tableIn.forward, right = 0, up = 0, forceHeight = tableIn.height}, NO_ROT, false, true)\n\t\tend\n\tend\nend\n\nfunction findDistance(posA, posB)\n\treturn math.sqrt((posA[\"x\"] - posB[\"x\"])^2 +\n\t\t\t\t\t\t  (posA[\"y\"] - posB[\"y\"])^2 +\n\t\t\t\t\t\t  (posA[\"z\"] - posB[\"z\"])^2)\nend\n\nfunction closestPlayer(objectIn, playerListIn, maxIn)\n\tlocal playerColorOut = nil\n\tlocal pos = nil\n\n\tlocal lastDistance = maxIn\n\tif objectIn then\n\t\tlocal tempPos = objectIn.getPosition()\n\t\tfor i, playerColor in ipairs(playerListIn) do\n\t\t\tif greyPlayer(playerColor) then\n\t\t\t\tph = getObjectFromGUID(greyPlayerHandGuids[playerColor])\n\t\t\t\tif ph then\n\t\t\t\t\tpos = ph.getPosition()\n\t\t\t\t\tpos = {x = pos[\"x\"], y = pos[\"y\"], z = pos[\"z\"] - 2.26}\n\t\t\t\tend\n\t\t\telse\n\t\t\t\tlocal ph = Player[playerColor].getPlayerHand()\n\t\t\t\tif ph then\n\t\t\t\t\tpos = {x = ph[\"pos_x\"], y = ph[\"pos_y\"], z = ph[\"pos_z\"]}\n\t\t\t\tend\n\t\t\tend\n\t\t\tif pos then\n\t\t\t\tlocal distance = findDistance(tempPos, pos);\n\t\t\t\tif distance < lastDistance then\n\t\t\t\t\tlastDistance = distance\n\t\t\t\t\tplayerColorOut = playerColor\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\n\treturn playerColorOut\nend\n\nfunction sleep(numSeconds)\n\tlocal t0 = os.clock()\n\twhile os.clock() - t0 <= numSeconds do coroutine.yield(0) end\nend\n\nfunction wait(numFrames)\n\tfor i=1,numFrames,1 do coroutine.yield(0) end\nend\n\nfunction destroyObjectByGUID(guidIn)\n\tlocal dObject = getObjectFromGUID(guidIn)\n\tif dObject then destroyObject(dObject) end\nend\n\nfunction rgbToHex(c)\n\treturn string.format(\"%02x%02x%02x\", c[\"r\"] * 255 , c[\"g\"] * 255, c[\"b\"] * 255)\nend\n\nfunction stringColorToHex(color)\n\treturn rgbToHex(stringColorToRGBExtra(color))\nend\n\nfunction stringColorToRGBExtra(color)\n\tif greyPlayer(color) then\n\t\treturn GREY_PLAYABLE_COLORS_RGB[color]\n\telse\n\t\treturn stringColorToRGB(color)\n\tend\nend\n\nfunction removeBBCode(stringIn)\n\tlocal out = \"\"\n\tlocal formating = false\n\n\tfor i = 1, string.len(stringIn) do\n\t\tlocal tmpChar = string.sub(stringIn, i, i)\n\t\tif tmpChar == \"[\" then\n\t\t\tformating = true\n\t\telseif tmpChar == \"]\" then\n\t\t\tformating = false\n\t\telse\n\t\t\tif not formating then out = out .. tmpChar end\n\t\tend\n\tend\n\n\treturn out\nend\n\nfunction getPositionByGUID(guidIn)\n\tlocal tmpObj = getObjectFromGUID(guidIn)\n\treturn tmpObj.getPosition()\nend\n\nfunction getPositionByGUIDOffsetZ(guidIn, offsetZ)\n\tlocal tmpObj = getObjectFromGUID(guidIn)\n\tlocal pos = tmpObj.getPosition()\n\tpos[\"z\"] = pos[\"z\"] + offsetZ\n\treturn pos\nend\n\nfunction getDeckFromZoneByGUID(guidIn)\n\tlocal deck = nil\n\tlocal deck_ct = 0\n\tlocal zone = getObjectFromGUID(guidIn)\n\tlocal object\n\n\tif zone then\n\t\tlocal inZone = zone.getObjects()\n\t\tfor _, object in ipairs(inZone) do\n\t\t\tif object.tag == \"Card\" then\n\t\t\t\tdeck_ct = 2\n\t\t\telseif object.tag == \"Deck\" then\n\t\t\t\tdeck = object\n\t\t\t\tdeck_ct = deck_ct + 1\n\t\t\tend\n\t\tend\n\tend\n\tif deck_ct == 1 then\n\t\treturn deck\n\tend\n\treturn nil\nend\n\nfunction inTable(tableIn, valueIn)\n\tlocal value\n\tif tableIn then\n\t\tfor _, value in pairs(tableIn) do\n\t\t\tif value == valueIn then\n\t\t\t\treturn true\n\t\t\tend\n\t\tend\n\tend\n\treturn false\nend\n\nfunction smartTableInsert(tableIn, valueIn)\n\tif not inTable(tableIn, valueIn) then\n\t\ttable.insert(tableIn, valueIn)\n\tend\nend\n\nfunction versionInfo()\n\tlocal msg\n\n\tmsg = _VERSION -- Lua info\n\tif MOD_NAME then\n\t\tmsg = msg .. \"\\nMOD_NAME = \" .. MOD_NAME\n\telse\n\t\tmsg = msg .. \"\\nMOD_NAME = nil\"\n\tend\n\tif UPDATE_VERSION then\n\t\tmsg = msg .. \"\\nUPDATE_VERSION = \" .. UPDATE_VERSION\n\telse\n\t\tmsg = msg .. \"\\nUPDATE_VERSION = nil\"\n\tend\n\tmsg = msg .. \"\\nGlobal Lua length \" .. string.len(Global.getLuaScript())\n\n\treturn msg\nend\n\nfunction nullFunction()\n\t--nothing here\nend\n\n-- This allows outside objects to call any function from this code.\n-- Global.call(\"callFunction\", { fcn = \"drawCards\", params = {amountToDraw, color} })\nfunction callFunction(packet)\n    assert(type(_G[packet.fcn]) == \"function\", \"No function named \" .. packet.fcn .. \" exists!\")\n    return table.pack(_G[packet.fcn](unpack(packet.params or {})))\nend\n\nfunction tableToString(tbl, indent)\n\tif not indent then indent = 0 end\n\tlocal out = \"\"\n\n\tfor k, v in pairs(tbl) do\n   \tformatting = string.rep(\"  \", indent) .. k .. \": \"\n   \tif type(v) == \"table\" then\n      \tout = out .. formatting .. \"\\n\" .. tableToString(v, indent + 1)\n   \telseif type(v) == \"boolean\" then\n      \tout = out .. formatting .. tostring(v) .. \"\\n\"\n   \telse\n\t\t\tout = out .. formatting .. v .. \"\\n\"\n    end\n  end\n\n  return out\nend\n\nfunction generateAvatarImageUrl(steamId)\n   return string.format(\"http://steam-tts.bclass.info/avatar/?i=%s&s=l\", steamId)\nend\n\nfunction greyPlayer(color)\n\tif type(color) == \"table\" then\n\t\tcolor = color[1]\n\tend\n\tif inTable(GREY_PLAYABLE_COLORS, color) then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\nend\n\nfunction getPlayerObj(color)\n\tif greyPlayer(color) then\n\t\tlocal playerFound = nil\n\t\tsteamId = greyPlayerSteamIds[color]\n\t\tfor _, player in ipairs(Player.getSpectators()) do\n\t\t\tif steamId == player.steam_id then\n\t\t\t\tplayerFound = player\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\treturn playerFound\n\telse\n\t\treturn Player[color]\n\tend\nend\n\nfunction getGreyColor(steamId)\n\tlocal colorFound = nil\n \tfor testColor, testSteamId in pairs(greyPlayerSteamIds) do\n\t\tif steamId == testSteamId then\n\t\t\tcolorFound = testColor\n\t\t\tbreak\n\t\tend\n\tend\n\treturn colorFound\nend\n\n--Returns a simple table with all objects and their container GUIDs\nfunction getObjsFromZone(zoneGUID)\n\tlocal zoneObj = getObjectFromGUID(zoneGUID)\n\tlocal objs = zoneObj.getObjects()\n\tlocal returnTable = {}\n\tlocal deckTab = {}\n\tlocal deckGUID\n\n\tfor k1,v1 in pairs(objs) do\n\t\tif v1.tag == \"Card\" then\n\t\t\ttable.insert(returnTable, {\n\t\t\t\tname = v1.getName(),\n\t\t\t\tdescription = v1.getDescription(),\n\t\t\t\tdeck_guid = nil,\n\t\t\t\tindex = nil,\n\t\t\t\tguid = v1.getGUID()\n\t\t\t})\n\t\telseif v1.tag == \"Deck\" then\n\t\t\tdeckGuid = v1.getGUID()\n\t\t\tdeckTab = v1.getObjects()\n\t\t\tfor k2, v2 in pairs(deckTab) do\n\t\t\t\ttable.insert(returnTable, {\n\t\t\t\t\tname = v2.nickname,\n\t\t\t\t\tdescription = v2.description,\n\t\t\t\t\tdeck_guid = deckGuid,\n\t\t\t\t\tindex = v2.index,\n\t\t\t\t\tguid = v2.guid\n\t\t\t\t})\n\t\t\tend\n\t\tend\n\tend\n\treturn returnTable\nend\n\nfunction shufflePosition(objects)\n\tlocal positionA\n\tlocal positionB\n\n\tfor i = 1, #objects * 5 do\n\t\tlocal a = math.random(#objects)\n\t\tlocal b = math.random(#objects)\n\t\tpositionA = objects[a].getPosition()\n\t\tpositionB = objects[b].getPosition()\n\t\tobjects[b].setPosition(positionA)\n\t\tobjects[a].setPosition(positionB)\n\tend\nend\n\nfunction shuffleTable(objects)\n\tfor i = 1, #objects * 5 do\n\t\tlocal a = math.random(#objects)\n\t\tlocal b = math.random(#objects)\n\t\tobjects[a], objects[b] = objects[b], objects[a]\n\tend\nend\n\nfunction string:tokenize(sep)\n    local sep, fields = sep or \":\", {}\n    local pattern = string.format(\"([^%s]+)\", sep)\n    self:gsub(pattern, function(c) fields[#fields+1] = c end)\n    return fields\nend\n\nfunction string:titlecase()\n\treturn string.upper(string.sub(self, 1, 1)) .. string.lower(string.sub(self, 2))\nend\n\nfunction bigBroadcast(msgIn, playerObjIn)\n\tlocal messageTable = string.tokenize(msgIn, \"\\n\")\n\n\tfor i=#messageTable, 1, -1 do\n\t\tplayerObjIn:broadcast(messageTable[i])\n\tend\nend\n\nfunction getPlayerByName(playerName, playerList)\n   local amountOfPlayersFound = 0\n   local playerToReturn = nil\n\n\tif playerName then\n\t   for index, name in pairs(playerList) do\n\t   \tif string.match(string.lower(playerList[index].steam_name), string.lower(playerName)) then\n\t         playerToReturn = playerList[index]\n\t\t\t\tamountOfPlayersFound = amountOfPlayersFound + 1\n\t\t\tend\n\t\tend\n\n\t   if amountOfPlayersFound == 1 then\n\t\t\treturn playerToReturn\n\t\tend\n\tend\n\n\treturn nil\nend\n\nfunction getPlayerByNameSteamID(playerNameSteamID, playerList)\n\tif playerNameSteamID then\n\t\tlocal playerFound = getPlayerByName(playerNameSteamID, playerList)\n\t\tif playerFound then\n\t\t\treturn playerFound\n\t\telse\n\t\t\tfor _, p in pairs(playerList) do\n\t\t\t\tif p.steam_id == playerNameSteamID then\n\t\t\t\t\treturn p\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\n\treturn nil\nend\n\nfunction smartBroadcastToColor(msg, playerColor, msgColor)\n\tif greyPlayer(playerColor) then\n\t\tlocal player = getPlayerObj(playerColor)\n\t\tif player then\n\t\t\tplayer.broadcast(msg, msgColor)\n\t\tend\n\telse\n\t\tbroadcastToColor(msg, playerColor, msgColor)\n\tend\nend\n\n----#include \\SecretHitlerCE\\common.ttslua",
  "LuaScriptState": "{\"b\":[],\"bi\":{\"action\":\"Shoots\",\"colorTint\":[0,0,0.0382530019],\"convex\":true,\"diffuse\":\"\",\"fresnel_strength\":0,\"material\":2,\"mesh\":\"http://cloud-3.steamusercontent.com/ugc/487893695357489958/2749FC201350D558AC9DF373861E4323C8B354BB/\",\"scale\":[0.75,0.75,0.75],\"specular_color\":[1,1,0.5882353],\"specular_intensity\":1.7,\"specular_sharpness\":8,\"status\":\"Dead\",\"type\":\"Custom_Model\",\"use_grid\":false},\"f\":[],\"gag\":[],\"gp\":[],\"gphg\":[],\"h\":[],\"ii\":{\"action\":\"Imprisons\",\"colorTint\":[1,1,1],\"convex\":true,\"diffuse\":\"http://cloud-3.steamusercontent.com/ugc/993492686551247160/63699220060380A49761207FF81A12E1AB00A597/\",\"fresnel_strength\":0,\"material\":2,\"mesh\":\"http://cloud-3.steamusercontent.com/ugc/993492686551248783/B83B87475B885192F8F820E381F1D70A2E3F1919/\",\"scale\":[4,4,4],\"specular_color\":[0.737,0.737,0.737],\"specular_intensity\":0.9,\"specular_sharpness\":7,\"status\":\"Imprisoned\",\"type\":\"Custom_Model\",\"use_grid\":false},\"in\":[],\"ja\":[],\"lfp\":0,\"llp\":0,\"lv\":\"\",\"mn\":\"[FFFF00]Secret Hitler: Consolidator Edition\\nVersion 109 (234112)\\n\\n[-]Based on the board game:\\n\\n[FF0000]Secret Hitler[-]\\ndesigned by\\n[0080F8]Max Temkin[-],\\n[0080F8]Mike Boxleiter[-],\\n[0080F8]Tommy Maranges[-]\\nand Illustrated by\\n[0080F8]Mackenzie Schubert.[-]\\n\\nCheck the notebook for additional\\ninformation and subscribe on the\\nworkshop to make sure you have the\\nlatest version.\\n\\nOnly the president can draw cards.\\n\\nTo topdeck a card move the election tracker\\nto the \\\"REVEAL & PASS TOP POLICY\\\" circle.\\n\\n\",\"nein\":[],\"note\":{\"action\":\"\"},\"ntcl\":1,\"ntn\":[{\"action\":\"\",\"claim1\":\"\",\"claim2\":\"\",\"claim3\":\"\",\"color1\":\"\",\"color2\":\"\",\"conflict\":\"\",\"result\":\"\"}],\"o\":{\"autoNotate\":false,\"dealPartyCards\":false,\"dealRoleCards\":false,\"expansionAmount\":2,\"expansionOptionEnabled\":0,\"expansionOptionStatus\":0,\"expansionOptionText\":[\"Pres -> Chan\",\"Chan -> Pres\",\"Clockwise\",\"Counterclockwise\"],\"fascistCards\":11,\"gameType\":0,\"greyCards\":0,\"liberalCards\":6,\"noteType\":1,\"policySafety\":true,\"scriptedVoting\":true,\"shuffleHost\":true,\"shufflePlayers\":false,\"voteHistory\":false,\"zoneType\":4},\"p\":[],\"prcg\":[],\"ps\":{\"Blue\":1,\"Brown\":1,\"Green\":1,\"Maroon\":1,\"Orange\":1,\"Pink\":1,\"Purple\":1,\"Red\":1,\"Tan\":1,\"Teal\":1,\"White\":1,\"Yellow\":1},\"psbg\":[],\"r\":[],\"t\":{\"fascist\":\"Fascist\",\"fascistAbbr\":\"Fascist\",\"fascistArticle\":\"a\",\"fascistLetter\":\"F\",\"grey\":\"Grey\",\"greyAbbr\":\"Grey\",\"greyArticle\":\"a\",\"greyLetter\":\"G\",\"hitler\":\"Hitler\",\"liberal\":\"Liberal\",\"liberalAbbr\":\"Liberal\",\"liberalArticle\":\"a\",\"liberalLetter\":\"L\",\"policy\":\"policy\"},\"vn\":\"\",\"vnb\":\"\"}",
  "Grid": {
    "Type": 0,
    "Lines": false,
    "Color": {
      "r": 0.0,
      "g": 0.0,
      "b": 0.0
    },
    "Opacity": 0.75,
    "ThickLines": false,
    "Snapping": true,
    "Offset": false,
    "BothSnapping": false,
    "xSize": 2.0,
    "ySize": 2.0,
    "PosOffset": {
      "x": 0.0,
      "y": 1.0,
      "z": 0.0
    }
  },
  "Lighting": {
    "LightIntensity": 0.54,
    "LightColor": {
      "r": 1.0,
      "g": 0.9804,
      "b": 0.8902
    },
    "AmbientIntensity": 1.3,
    "AmbientType": 0,
    "AmbientSkyColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "AmbientEquatorColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "AmbientGroundColor": {
      "r": 0.5,
      "g": 0.5,
      "b": 0.5
    },
    "ReflectionIntensity": 1.0,
    "LutIndex": 0,
    "LutContribution": 1.0
  },
  "Hands": {
    "Enable": true,
    "DisableUnused": false,
    "Hiding": 0,
    "HandTransforms": [
      {
        "Color": "Blue",
        "Transform": {
          "posX": 29.3000031,
          "posY": 4.016585,
          "posZ": 34.43,
          "rotX": 0.0,
          "rotY": 180.0,
          "rotZ": 0.0,
          "scaleX": 15.3329,
          "scaleY": 7.002465,
          "scaleZ": 6.34853172
        }
      },
      {
        "Color": "Brown",
        "Transform": {
          "posX": 0.0,
          "posY": 4.016585,
          "posZ": -34.43,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 15.3268919,
          "scaleY": 7.002465,
          "scaleZ": 6.35014534
        }
      },
      {
        "Color": "Green",
        "Transform": {
          "posX": -29.3000031,
          "posY": 4.016585,
          "posZ": 34.43,
          "rotX": 0.0,
          "rotY": 180.0,
          "rotZ": 0.0,
          "scaleX": 15.3329,
          "scaleY": 7.002465,
          "scaleZ": 6.34853172
        }
      },
      {
        "Color": "Orange",
        "Transform": {
          "posX": -51.6596222,
          "posY": 4.016585,
          "posZ": -11.7299976,
          "rotX": 0.0,
          "rotY": 90.0,
          "rotZ": 0.0,
          "scaleX": 15.2255812,
          "scaleY": 7.002465,
          "scaleZ": 6.4177866
        }
      },
      {
        "Color": "Pink",
        "Transform": {
          "posX": 51.6600037,
          "posY": 4.016585,
          "posZ": -11.7299976,
          "rotX": 0.0,
          "rotY": 270.0,
          "rotZ": 0.0,
          "scaleX": 15.2249174,
          "scaleY": 7.002465,
          "scaleZ": 6.41743231
        }
      },
      {
        "Color": "Purple",
        "Transform": {
          "posX": 51.6600037,
          "posY": 4.016585,
          "posZ": 11.7299976,
          "rotX": 0.0,
          "rotY": 270.0,
          "rotZ": 0.0,
          "scaleX": 15.2245684,
          "scaleY": 7.002465,
          "scaleZ": 6.41724348
        }
      },
      {
        "Color": "Red",
        "Transform": {
          "posX": -29.3000031,
          "posY": 4.016585,
          "posZ": -34.43,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 15.3329,
          "scaleY": 7.002465,
          "scaleZ": 6.34853172
        }
      },
      {
        "Color": "Teal",
        "Transform": {
          "posX": 0.0,
          "posY": 4.016585,
          "posZ": 34.45,
          "rotX": 0.0,
          "rotY": 180.0,
          "rotZ": 0.0,
          "scaleX": 15.3329468,
          "scaleY": 7.002465,
          "scaleZ": 6.3485384
        }
      },
      {
        "Color": "White",
        "Transform": {
          "posX": 29.3000031,
          "posY": 4.016585,
          "posZ": -34.43,
          "rotX": 0.0,
          "rotY": 0.0,
          "rotZ": 0.0,
          "scaleX": 15.3329,
          "scaleY": 7.002465,
          "scaleZ": 6.34853172
        }
      },
      {
        "Color": "Yellow",
        "Transform": {
          "posX": -51.6596222,
          "posY": 4.016585,
          "posZ": 11.7299976,
          "rotX": 0.0,
          "rotY": 90.0,
          "rotZ": 0.0,
          "scaleX": 15.2254448,
          "scaleY": 7.002465,
          "scaleZ": 6.41772127
        }
      }
    ]
  },
  "Turns": {
    "Enable": false,
    "Type": 0,
    "TurnOrder": [],
    "Reverse": false,
    "SkipEmpty": false,
    "DisableInteractions": false,
    "PassTurns": true,
    "TurnColor": ""
  },
  "ObjectStates": [
    {
      "Name": "FogOfWarTrigger",
      "Transform": {
        "posX": 29.65,
        "posY": 3.51,
        "posZ": 31.9,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 28.4,
        "scaleY": 5.1,
        "scaleZ": 11.8
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.117999978,
        "g": 0.53,
        "b": 1.0,
        "a": 0.75
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Blue",
      "FogHidePointers": true,
      "FogReverseHiding": false,
      "FogSeethrough": true,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "dbd95e"
    },
    {
      "Name": "FogOfWarTrigger",
      "Transform": {
        "posX": 50.2,
        "posY": 3.51,
        "posZ": 19.25,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 9.55,
        "scaleY": 5.1,
        "scaleZ": 37.25
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.627,
        "g": 0.124999978,
        "b": 0.941,
        "a": 0.75
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Purple",
      "FogHidePointers": true,
      "FogReverseHiding": false,
      "FogSeethrough": true,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "cc1b94"
    },
    {
      "Name": "FogOfWarTrigger",
      "Transform": {
        "posX": 50.2,
        "posY": 3.51,
        "posZ": -19.25,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 9.55,
        "scaleY": 5.1,
        "scaleZ": 37.25
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.96,
        "g": 0.438999981,
        "b": 0.807,
        "a": 0.75
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Pink",
      "FogHidePointers": true,
      "FogReverseHiding": false,
      "FogSeethrough": true,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "d954ee"
    },
    {
      "Name": "FogOfWarTrigger",
      "Transform": {
        "posX": 29.65,
        "posY": 3.51,
        "posZ": -31.9,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 28.4,
        "scaleY": 5.1,
        "scaleZ": 11.8
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.25
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "White",
      "FogHidePointers": true,
      "FogReverseHiding": false,
      "FogSeethrough": true,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "f13d0b"
    },
    {
      "Name": "FogOfWarTrigger",
      "Transform": {
        "posX": 0.0,
        "posY": 3.51,
        "posZ": -31.9,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 28.4,
        "scaleY": 5.1,
        "scaleZ": 11.8
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.442999959,
        "g": 0.230999947,
        "b": 0.0899999961,
        "a": 0.75
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Brown",
      "FogHidePointers": true,
      "FogReverseHiding": false,
      "FogSeethrough": true,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "90049b"
    },
    {
      "Name": "FogOfWarTrigger",
      "Transform": {
        "posX": -29.65,
        "posY": 3.51,
        "posZ": -31.9,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 28.4,
        "scaleY": 5.1,
        "scaleZ": 11.8
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.856,
        "g": 0.09999997,
        "b": 0.09399996,
        "a": 0.75
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Red",
      "FogHidePointers": true,
      "FogReverseHiding": false,
      "FogSeethrough": true,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "134297"
    },
    {
      "Name": "FogOfWarTrigger",
      "Transform": {
        "posX": -50.2,
        "posY": 3.51,
        "posZ": -19.25,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 9.55,
        "scaleY": 5.1,
        "scaleZ": 37.25
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.9559999,
        "g": 0.39199996,
        "b": 0.112999953,
        "a": 0.75
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Orange",
      "FogHidePointers": true,
      "FogReverseHiding": false,
      "FogSeethrough": true,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "344002"
    },
    {
      "Name": "FogOfWarTrigger",
      "Transform": {
        "posX": -50.2,
        "posY": 3.51,
        "posZ": 19.25,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 9.55,
        "scaleY": 5.1,
        "scaleZ": 37.25
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.905,
        "g": 0.898,
        "b": 0.171999961,
        "a": 0.75
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Yellow",
      "FogHidePointers": true,
      "FogReverseHiding": false,
      "FogSeethrough": true,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "9b5558"
    },
    {
      "Name": "FogOfWarTrigger",
      "Transform": {
        "posX": -29.65,
        "posY": 3.51,
        "posZ": 31.9,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 28.4,
        "scaleY": 5.1,
        "scaleZ": 11.8
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.191999972,
        "g": 0.701,
        "b": 0.167999953,
        "a": 0.75
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Green",
      "FogHidePointers": true,
      "FogReverseHiding": false,
      "FogSeethrough": true,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "7a8301"
    },
    {
      "Name": "FogOfWarTrigger",
      "Transform": {
        "posX": 0.0,
        "posY": 3.51,
        "posZ": 31.9,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 28.4,
        "scaleY": 5.1,
        "scaleZ": 11.8
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.128999949,
        "g": 0.694,
        "b": 0.606999934,
        "a": 0.75
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "FogColor": "Teal",
      "FogHidePointers": true,
      "FogReverseHiding": false,
      "FogSeethrough": true,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "568a75"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": 145.0,
        "posY": -10.0,
        "posZ": 145.0,
        "rotX": 0.0,
        "rotY": 224.999985,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "Dual Banner",
      "ColorDiffuse": {
        "r": 0.9999998,
        "g": 0.992160261,
        "b": 0.9999998
      },
      "Locked": true,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://cloud-3.steamusercontent.com/ugc/487893695356608353/3A0A7A1DCA78130E44568A1C30620461B150E3E2/",
        "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/487893695356609153/209B6DDC56019A27B473CC230E9217827CAC6EA4/",
        "NormalURL": "",
        "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/487893695356616224/E3E39A827C062914E4185D8757A81D4D14892B8B/",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 1,
        "CastShadows": true
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "6d5247"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": -145.0,
        "posY": -10.0,
        "posZ": -145.0,
        "rotX": 0.0,
        "rotY": 45.0000038,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "Dual Banner",
      "ColorDiffuse": {
        "r": 0.9999998,
        "g": 0.992160261,
        "b": 0.9999998
      },
      "Locked": true,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://cloud-3.steamusercontent.com/ugc/487893695356608353/3A0A7A1DCA78130E44568A1C30620461B150E3E2/",
        "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/487893695356609153/209B6DDC56019A27B473CC230E9217827CAC6EA4/",
        "NormalURL": "",
        "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/487893695356616224/E3E39A827C062914E4185D8757A81D4D14892B8B/",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 1,
        "CastShadows": true
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "aa23ae"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": 145.0,
        "posY": -10.0,
        "posZ": -145.0,
        "rotX": 0.0,
        "rotY": 315.000031,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "Dual Banner",
      "ColorDiffuse": {
        "r": 0.9999998,
        "g": 0.992160261,
        "b": 0.9999998
      },
      "Locked": true,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://cloud-3.steamusercontent.com/ugc/487893695356608353/3A0A7A1DCA78130E44568A1C30620461B150E3E2/",
        "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/487893695356609153/209B6DDC56019A27B473CC230E9217827CAC6EA4/",
        "NormalURL": "",
        "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/487893695356616224/E3E39A827C062914E4185D8757A81D4D14892B8B/",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 1,
        "CastShadows": true
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "15583c"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": -145.0,
        "posY": -10.0,
        "posZ": 145.0,
        "rotX": 0.0,
        "rotY": 135.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "Dual Banner",
      "ColorDiffuse": {
        "r": 0.9999998,
        "g": 0.992160261,
        "b": 0.9999998
      },
      "Locked": true,
      "Grid": false,
      "Snap": false,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://cloud-3.steamusercontent.com/ugc/487893695356608353/3A0A7A1DCA78130E44568A1C30620461B150E3E2/",
        "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/487893695356609153/209B6DDC56019A27B473CC230E9217827CAC6EA4/",
        "NormalURL": "",
        "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/487893695356616224/E3E39A827C062914E4185D8757A81D4D14892B8B/",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 1,
        "CastShadows": true
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "4aeb2b"
    },
    {
      "Name": "Deck",
      "Transform": {
        "posX": 0.0,
        "posY": 11.0,
        "posZ": 0.0,
        "rotX": 0.0,
        "rotY": 180.000778,
        "rotZ": 180.000778,
        "scaleX": 1.51,
        "scaleY": 1.0,
        "scaleZ": 1.51
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": false,
      "SidewaysCard": false,
      "DeckIDs": [
        109500,
        64201,
        24500,
        24601
      ],
      "CustomDeck": {
        "1095": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
          "NumWidth": 4,
          "NumHeight": 3,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "642": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/492401650180628533/5900E7D25B5FDD53C4FE06B974A9F49262944DB7/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061409390371/ED89BABA304C2ED50EBCDC14FA6A5DA60734A72D/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "245": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "246": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        }
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "Name": "Card",
          "Transform": {
            "posX": -31.6802673,
            "posY": 1.18027222,
            "posZ": 14.3834286,
            "rotX": 1.50675237E-06,
            "rotY": 180.000259,
            "rotZ": 8.460662E-06,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Hitler Role Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 109500,
          "SidewaysCard": false,
          "CustomDeck": {
            "43": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
              "NumWidth": 4,
              "NumHeight": 3,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "05df3f"
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": 26.3731117,
            "posY": 2.00819635,
            "posZ": -11.1727438,
            "rotX": -2.289709E-07,
            "rotY": 180.000046,
            "rotZ": -8.88603253E-08,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Fascist Party Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 64201,
          "SidewaysCard": false,
          "CustomDeck": {
            "42": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/492401650180628533/5900E7D25B5FDD53C4FE06B974A9F49262944DB7/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061409390371/ED89BABA304C2ED50EBCDC14FA6A5DA60734A72D/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "7f6315"
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": -32.3563957,
            "posY": 1.18049955,
            "posZ": 13.480978,
            "rotX": -1.66922855E-05,
            "rotY": 179.999481,
            "rotZ": -1.53445E-05,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Ja Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 24500,
          "SidewaysCard": false,
          "CustomDeck": {
            "109": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": ""
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": -32.3653259,
            "posY": 1.19459212,
            "posZ": 14.7611685,
            "rotX": 359.992462,
            "rotY": 179.999512,
            "rotZ": 0.0001713242,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Nein Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 24601,
          "SidewaysCard": false,
          "CustomDeck": {
            "108": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": ""
        }
      ],
      "GUID": "5997ea"
    },
    {
      "Name": "Deck",
      "Transform": {
        "posX": 0.0,
        "posY": 10.0,
        "posZ": 0.0,
        "rotX": 0.0,
        "rotY": 180.000778,
        "rotZ": 180.000778,
        "scaleX": 1.51,
        "scaleY": 1.0,
        "scaleZ": 1.51
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": false,
      "SidewaysCard": false,
      "DeckIDs": [
        11301,
        64301,
        24700,
        24801
      ],
      "CustomDeck": {
        "113": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
          "NumWidth": 4,
          "NumHeight": 3,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "643": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/492401650180628533/5900E7D25B5FDD53C4FE06B974A9F49262944DB7/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061409390371/ED89BABA304C2ED50EBCDC14FA6A5DA60734A72D/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "247": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "248": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        }
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "Name": "Card",
          "Transform": {
            "posX": -25.83587,
            "posY": 1.18046069,
            "posZ": 14.9573736,
            "rotX": -0.00161045906,
            "rotY": 179.998123,
            "rotZ": 0.004526386,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Fascist Role Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 11301,
          "SidewaysCard": false,
          "CustomDeck": {
            "43": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
              "NumWidth": 4,
              "NumHeight": 3,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "02b663"
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": 27.23192,
            "posY": 2.00800347,
            "posZ": -10.7025,
            "rotX": 1.90446471E-07,
            "rotY": 180.000061,
            "rotZ": 1.05186743E-07,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Fascist Party Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 64301,
          "SidewaysCard": false,
          "CustomDeck": {
            "42": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/492401650180628533/5900E7D25B5FDD53C4FE06B974A9F49262944DB7/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061409390371/ED89BABA304C2ED50EBCDC14FA6A5DA60734A72D/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "2768aa"
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": -25.4587479,
            "posY": 1.18049812,
            "posZ": 12.6705971,
            "rotX": 2.17946072E-05,
            "rotY": 179.999268,
            "rotZ": -0.000219548936,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Ja Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 24700,
          "SidewaysCard": false,
          "CustomDeck": {
            "109": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": ""
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": -24.5449848,
            "posY": 1.19460726,
            "posZ": 12.3240366,
            "rotX": 359.9923,
            "rotY": 179.999985,
            "rotZ": 1.311314E-06,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Nein Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 24801,
          "SidewaysCard": false,
          "CustomDeck": {
            "108": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": ""
        }
      ],
      "GUID": "5f2055"
    },
    {
      "Name": "Deck",
      "Transform": {
        "posX": 0.0,
        "posY": 9.0,
        "posZ": 0.0,
        "rotX": 0.0,
        "rotY": 180.000778,
        "rotZ": 180.000778,
        "scaleX": 1.51,
        "scaleY": 1.0,
        "scaleZ": 1.51
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": false,
      "SidewaysCard": false,
      "DeckIDs": [
        64402,
        64501,
        24900,
        25001
      ],
      "CustomDeck": {
        "644": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
          "NumWidth": 4,
          "NumHeight": 3,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "645": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/492401650180628533/5900E7D25B5FDD53C4FE06B974A9F49262944DB7/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061409390371/ED89BABA304C2ED50EBCDC14FA6A5DA60734A72D/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "249": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "250": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        }
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "Name": "Card",
          "Transform": {
            "posX": -32.3255119,
            "posY": 1.4694767,
            "posZ": 7.56118155,
            "rotX": 5.09845,
            "rotY": 180.013474,
            "rotZ": -0.00241089775,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Fascist Role Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 64402,
          "SidewaysCard": false,
          "CustomDeck": {
            "43": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
              "NumWidth": 4,
              "NumHeight": 3,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "7b4b45"
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": 25.99473,
            "posY": 2.008068,
            "posZ": -9.60588551,
            "rotX": -2.38905926E-07,
            "rotY": 180.000061,
            "rotZ": -3.70438215E-07,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Fascist Party Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 64501,
          "SidewaysCard": false,
          "CustomDeck": {
            "42": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/492401650180628533/5900E7D25B5FDD53C4FE06B974A9F49262944DB7/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061409390371/ED89BABA304C2ED50EBCDC14FA6A5DA60734A72D/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "d489e4"
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": -32.01727,
            "posY": 1.18010914,
            "posZ": 8.203441,
            "rotX": 359.992126,
            "rotY": 179.992554,
            "rotZ": 0.0185554773,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Ja Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 24900,
          "SidewaysCard": false,
          "CustomDeck": {
            "109": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": ""
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": -31.1466484,
            "posY": 1.19462788,
            "posZ": 6.831365,
            "rotX": 359.9923,
            "rotY": 180.011,
            "rotZ": 359.993958,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Nein Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 25001,
          "SidewaysCard": false,
          "CustomDeck": {
            "108": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": ""
        }
      ],
      "GUID": "fb58cf"
    },
    {
      "Name": "Deck",
      "Transform": {
        "posX": 0.0,
        "posY": 8.0,
        "posZ": 0.0,
        "rotX": 0.0,
        "rotY": 180.000778,
        "rotZ": 180.000778,
        "scaleX": 1.51,
        "scaleY": 1.0,
        "scaleZ": 1.51
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": false,
      "SidewaysCard": false,
      "DeckIDs": [
        11703,
        64601,
        25100,
        25201
      ],
      "CustomDeck": {
        "117": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
          "NumWidth": 4,
          "NumHeight": 3,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "646": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/492401650180628533/5900E7D25B5FDD53C4FE06B974A9F49262944DB7/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061409390371/ED89BABA304C2ED50EBCDC14FA6A5DA60734A72D/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "251": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "252": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        }
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "Name": "Card",
          "Transform": {
            "posX": -25.0963821,
            "posY": 1.240596,
            "posZ": 7.505698,
            "rotX": 1.057071,
            "rotY": 180.1086,
            "rotZ": 0.02024361,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Fascist Role Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 11703,
          "SidewaysCard": false,
          "CustomDeck": {
            "43": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
              "NumWidth": 4,
              "NumHeight": 3,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "0a595f"
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": 24.8245831,
            "posY": 2.00815034,
            "posZ": -8.559618,
            "rotX": -1.364898E-07,
            "rotY": 180.000061,
            "rotZ": -2.28727785E-07,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Fascist Party Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 64601,
          "SidewaysCard": false,
          "CustomDeck": {
            "42": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/492401650180628533/5900E7D25B5FDD53C4FE06B974A9F49262944DB7/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061409390371/ED89BABA304C2ED50EBCDC14FA6A5DA60734A72D/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "057722"
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": -26.2312164,
            "posY": 1.18048835,
            "posZ": 7.421409,
            "rotX": 0.000166961152,
            "rotY": 179.9961,
            "rotZ": 0.00108356052,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Ja Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 25100,
          "SidewaysCard": false,
          "CustomDeck": {
            "109": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": ""
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": -24.993248,
            "posY": 1.19394541,
            "posZ": 6.27663755,
            "rotX": -1.42889587E-06,
            "rotY": 179.999756,
            "rotZ": -1.7045495E-05,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Nein Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 25201,
          "SidewaysCard": false,
          "CustomDeck": {
            "108": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": ""
        }
      ],
      "GUID": "4a3cf4"
    },
    {
      "Name": "Deck",
      "Transform": {
        "posX": 0.0,
        "posY": 7.0,
        "posZ": 0.0,
        "rotX": 0.0,
        "rotY": 180.000778,
        "rotZ": 180.000778,
        "scaleX": 1.51,
        "scaleY": 1.0,
        "scaleZ": 1.51
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": false,
      "SidewaysCard": false,
      "DeckIDs": [
        11904,
        64700,
        25300,
        25401
      ],
      "CustomDeck": {
        "119": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
          "NumWidth": 4,
          "NumHeight": 3,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "647": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/492401650180628533/5900E7D25B5FDD53C4FE06B974A9F49262944DB7/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061409390371/ED89BABA304C2ED50EBCDC14FA6A5DA60734A72D/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "253": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "254": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        }
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "Name": "Card",
          "Transform": {
            "posX": -30.6644135,
            "posY": 1.18029726,
            "posZ": -0.73888725,
            "rotX": 0.0007872123,
            "rotY": 179.995285,
            "rotZ": 0.002993344,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Liberal Role Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 11904,
          "SidewaysCard": false,
          "CustomDeck": {
            "43": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
              "NumWidth": 4,
              "NumHeight": 3,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "675a6e"
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": 25.9222,
            "posY": 2.00809455,
            "posZ": -9.155567,
            "rotX": 1.42984442E-08,
            "rotY": 180.000031,
            "rotZ": -7.804081E-08,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Liberal Party Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 64700,
          "SidewaysCard": false,
          "CustomDeck": {
            "42": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/492401650180628533/5900E7D25B5FDD53C4FE06B974A9F49262944DB7/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061409390371/ED89BABA304C2ED50EBCDC14FA6A5DA60734A72D/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "e94c08"
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": -31.6014118,
            "posY": 1.1805017,
            "posZ": -0.2383472,
            "rotX": 7.993238E-05,
            "rotY": 179.999115,
            "rotZ": -0.000419725169,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Ja Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 25300,
          "SidewaysCard": false,
          "CustomDeck": {
            "109": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": ""
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": -32.6271477,
            "posY": 1.19394529,
            "posZ": 0.07494056,
            "rotX": 1.08592495E-07,
            "rotY": 179.999817,
            "rotZ": 6.243721E-07,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Nein Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 25401,
          "SidewaysCard": false,
          "CustomDeck": {
            "108": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": ""
        }
      ],
      "GUID": "b156f7"
    },
    {
      "Name": "Deck",
      "Transform": {
        "posX": 0.0,
        "posY": 6.0,
        "posZ": 0.0,
        "rotX": 0.0,
        "rotY": 180.000778,
        "rotZ": 180.000778,
        "scaleX": 1.51,
        "scaleY": 1.0,
        "scaleZ": 1.51
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": false,
      "SidewaysCard": false,
      "DeckIDs": [
        70505,
        64800,
        25500,
        25601
      ],
      "CustomDeck": {
        "705": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
          "NumWidth": 4,
          "NumHeight": 3,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "648": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/492401650180628533/5900E7D25B5FDD53C4FE06B974A9F49262944DB7/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061409390371/ED89BABA304C2ED50EBCDC14FA6A5DA60734A72D/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "255": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "256": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        }
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "Name": "Card",
          "Transform": {
            "posX": -25.94515,
            "posY": 1.25488877,
            "posZ": 0.335132837,
            "rotX": -0.0023525185,
            "rotY": 180.015213,
            "rotZ": 358.2533,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Liberal Role Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 70505,
          "SidewaysCard": false,
          "CustomDeck": {
            "43": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
              "NumWidth": 4,
              "NumHeight": 3,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "c23099"
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": 28.9066544,
            "posY": 2.00822783,
            "posZ": -8.130736,
            "rotX": 1.716658E-07,
            "rotY": 180.000046,
            "rotZ": 2.61202985E-07,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Liberal Party Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 64800,
          "SidewaysCard": false,
          "CustomDeck": {
            "42": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/492401650180628533/5900E7D25B5FDD53C4FE06B974A9F49262944DB7/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061409390371/ED89BABA304C2ED50EBCDC14FA6A5DA60734A72D/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "9e23fd"
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": -26.14563,
            "posY": 1.18049979,
            "posZ": 1.10734367,
            "rotX": 6.11133544E-07,
            "rotY": 179.999557,
            "rotZ": 5.100977E-05,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Ja Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 25500,
          "SidewaysCard": false,
          "CustomDeck": {
            "109": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": ""
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": -25.7869473,
            "posY": 1.194598,
            "posZ": -0.2544573,
            "rotX": 359.99234,
            "rotY": 179.999374,
            "rotZ": 0.0007400887,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Nein Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 25601,
          "SidewaysCard": false,
          "CustomDeck": {
            "108": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": ""
        }
      ],
      "GUID": "d1735a"
    },
    {
      "Name": "Deck",
      "Transform": {
        "posX": 0.0,
        "posY": 5.0,
        "posZ": 0.0,
        "rotX": 0.0,
        "rotY": 180.000778,
        "rotZ": 180.000778,
        "scaleX": 1.51,
        "scaleY": 1.0,
        "scaleZ": 1.51
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": false,
      "SidewaysCard": false,
      "DeckIDs": [
        12306,
        64900,
        25700,
        25801
      ],
      "CustomDeck": {
        "123": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
          "NumWidth": 4,
          "NumHeight": 3,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "649": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/492401650180628533/5900E7D25B5FDD53C4FE06B974A9F49262944DB7/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061409390371/ED89BABA304C2ED50EBCDC14FA6A5DA60734A72D/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "257": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "258": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        }
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "Name": "Card",
          "Transform": {
            "posX": -30.7876987,
            "posY": 1.94701529,
            "posZ": -7.262434,
            "rotX": 346.337524,
            "rotY": 180.010712,
            "rotZ": 0.0264768563,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Liberal Role Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 12306,
          "SidewaysCard": false,
          "CustomDeck": {
            "43": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
              "NumWidth": 4,
              "NumHeight": 3,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "16e47f"
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": 30.2513142,
            "posY": 2.00826263,
            "posZ": -7.25671053,
            "rotX": -2.26242832E-07,
            "rotY": 180.000046,
            "rotZ": -2.32673E-07,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Liberal Party Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 64900,
          "SidewaysCard": false,
          "CustomDeck": {
            "42": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/492401650180628533/5900E7D25B5FDD53C4FE06B974A9F49262944DB7/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061409390371/ED89BABA304C2ED50EBCDC14FA6A5DA60734A72D/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "7b91e8"
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": -32.40423,
            "posY": 1.18049085,
            "posZ": -6.54397154,
            "rotX": -0.0009542788,
            "rotY": 179.9888,
            "rotZ": -0.00375088956,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Ja Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 25700,
          "SidewaysCard": false,
          "CustomDeck": {
            "109": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": ""
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": -31.742506,
            "posY": 1.1946131,
            "posZ": -6.58875275,
            "rotX": 359.992432,
            "rotY": 179.999252,
            "rotZ": 0.000359571,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Nein Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 25801,
          "SidewaysCard": false,
          "CustomDeck": {
            "108": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": ""
        }
      ],
      "GUID": "c8ab2a"
    },
    {
      "Name": "Deck",
      "Transform": {
        "posX": 0.0,
        "posY": 4.0,
        "posZ": 0.0,
        "rotX": 0.0,
        "rotY": 180.000778,
        "rotZ": 180.000778,
        "scaleX": 1.51,
        "scaleY": 1.0,
        "scaleZ": 1.51
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": false,
      "SidewaysCard": false,
      "DeckIDs": [
        70607,
        65000,
        25900,
        26001
      ],
      "CustomDeck": {
        "706": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
          "NumWidth": 4,
          "NumHeight": 3,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "650": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/492401650180628533/5900E7D25B5FDD53C4FE06B974A9F49262944DB7/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061409390371/ED89BABA304C2ED50EBCDC14FA6A5DA60734A72D/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "259": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "260": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        }
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "Name": "Card",
          "Transform": {
            "posX": -24.9572258,
            "posY": 1.18003476,
            "posZ": -8.0459,
            "rotX": 359.991852,
            "rotY": 179.999924,
            "rotZ": 0.00421406748,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Liberal Role Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 70607,
          "SidewaysCard": false,
          "CustomDeck": {
            "43": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
              "NumWidth": 4,
              "NumHeight": 3,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "ccb7ec"
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": 26.4452171,
            "posY": 2.00826573,
            "posZ": -7.615019,
            "rotX": -2.49024737E-07,
            "rotY": 180.000046,
            "rotZ": -2.84136064E-07,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Liberal Party Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 65000,
          "SidewaysCard": false,
          "CustomDeck": {
            "42": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/492401650180628533/5900E7D25B5FDD53C4FE06B974A9F49262944DB7/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061409390371/ED89BABA304C2ED50EBCDC14FA6A5DA60734A72D/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "f988af"
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": -26.2814255,
            "posY": 1.18049812,
            "posZ": -7.286897,
            "rotX": 4.835812E-06,
            "rotY": 179.999619,
            "rotZ": 4.04804123E-05,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Ja Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 25900,
          "SidewaysCard": false,
          "CustomDeck": {
            "109": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": ""
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": -25.73265,
            "posY": 1.27128732,
            "posZ": -6.25207853,
            "rotX": 1.36124671,
            "rotY": 180.00444,
            "rotZ": 0.000448320585,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Nein Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 26001,
          "SidewaysCard": false,
          "CustomDeck": {
            "108": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": ""
        }
      ],
      "GUID": "b2873d"
    },
    {
      "Name": "Deck",
      "Transform": {
        "posX": 0.0,
        "posY": 3.0,
        "posZ": 0.0,
        "rotX": 0.0,
        "rotY": 180.000778,
        "rotZ": 180.000778,
        "scaleX": 1.51,
        "scaleY": 1.0,
        "scaleZ": 1.51
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": false,
      "SidewaysCard": false,
      "DeckIDs": [
        65108,
        65200,
        26100,
        26201
      ],
      "CustomDeck": {
        "651": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
          "NumWidth": 4,
          "NumHeight": 3,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "652": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/492401650180628533/5900E7D25B5FDD53C4FE06B974A9F49262944DB7/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061409390371/ED89BABA304C2ED50EBCDC14FA6A5DA60734A72D/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "261": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "262": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        }
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "Name": "Card",
          "Transform": {
            "posX": -32.37738,
            "posY": 1.18027937,
            "posZ": -13.9441185,
            "rotX": 0.000351146533,
            "rotY": 179.997345,
            "rotZ": 0.00105096155,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Liberal Role Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 65108,
          "SidewaysCard": false,
          "CustomDeck": {
            "43": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
              "NumWidth": 4,
              "NumHeight": 3,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "98f4dc"
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": 26.8657055,
            "posY": 2.00826573,
            "posZ": -3.972586,
            "rotX": 2.051109E-07,
            "rotY": 180.000046,
            "rotZ": 5.58548656E-08,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Liberal Party Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 65200,
          "SidewaysCard": false,
          "CustomDeck": {
            "42": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/492401650180628533/5900E7D25B5FDD53C4FE06B974A9F49262944DB7/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061409390371/ED89BABA304C2ED50EBCDC14FA6A5DA60734A72D/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "773694"
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": -32.15818,
            "posY": 1.18022382,
            "posZ": -13.1600084,
            "rotX": 0.00605877535,
            "rotY": 179.999435,
            "rotZ": 0.000456606533,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Ja Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 26100,
          "SidewaysCard": false,
          "CustomDeck": {
            "109": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": ""
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": -31.4661522,
            "posY": 1.19451511,
            "posZ": -14.6735373,
            "rotX": 359.993958,
            "rotY": 180.000046,
            "rotZ": 1.1207756E-05,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Nein Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 26201,
          "SidewaysCard": false,
          "CustomDeck": {
            "108": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": ""
        }
      ],
      "GUID": "313939"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": 0.0,
        "posY": 1.05,
        "posZ": 6.0,
        "rotX": 0.0,
        "rotY": 180.000778,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "Fascist Track",
      "ColorDiffuse": {
        "r": 0.9999998,
        "g": 0.992160261,
        "b": 0.9999998
      },
      "Locked": true,
      "Grid": true,
      "Snap": false,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://cloud-3.steamusercontent.com/ugc/493521040874890894/115614CA7EE655E9EB09B8640CEC08B94AD8194D/",
        "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/493520552407948654/1FA580824CD17C073684841D5BDC30ACC29D259A/",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 4,
        "CastShadows": true
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "PhysicsMaterial": {
        "StaticFriction": 0.4,
        "DynamicFriction": 0.4,
        "Bounciness": 0.0,
        "FrictionCombine": 0,
        "BounceCombine": 0
      },
      "Rigidbody": {
        "Mass": 10.0,
        "Drag": 0.1,
        "AngularDrag": 0.1,
        "UseGravity": true
      },
      "GUID": "c09dbd",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": 11.85,
            "y": 0.1,
            "z": 0.0
          },
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Position": {
            "x": 11.85,
            "y": 0.1,
            "z": 2.1
          },
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Position": {
            "x": 7.95,
            "y": 0.1,
            "z": 0.0
          },
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Position": {
            "x": 7.95,
            "y": 0.1,
            "z": 2.1
          },
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Position": {
            "x": 4.0,
            "y": 0.1,
            "z": 0.0
          },
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Position": {
            "x": 4.0,
            "y": 0.1,
            "z": 2.1
          },
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Position": {
            "x": 0.0,
            "y": 0.1,
            "z": 0.0
          },
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Position": {
            "x": 0.0,
            "y": 0.1,
            "z": 2.1
          },
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Position": {
            "x": -3.9,
            "y": 0.1,
            "z": 0.0
          },
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Position": {
            "x": -3.9,
            "y": 0.1,
            "z": 2.1
          },
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Position": {
            "x": -7.9,
            "y": 0.1,
            "z": 0.0
          },
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Position": {
            "x": -7.9,
            "y": 0.1,
            "z": 2.1
          },
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Position": {
            "x": -11.95,
            "y": 0.1,
            "z": 0.0
          },
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Position": {
            "x": -11.95,
            "y": 0.1,
            "z": 2.1
          },
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        }
      ]
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": -4.69947651E-07,
        "posY": 1.06000018,
        "posZ": -6.000004,
        "rotX": 0.0,
        "rotY": 180.000778,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "Liberal Track",
      "ColorDiffuse": {
        "r": 0.9999998,
        "g": 0.992160261,
        "b": 0.9999998
      },
      "Locked": true,
      "Grid": true,
      "Snap": false,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://cloud-3.steamusercontent.com/ugc/493521040874890894/115614CA7EE655E9EB09B8640CEC08B94AD8194D/",
        "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/493520552409218829/47433942581049D999EECC6F50083D09B6F62A6C/",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 4,
        "CastShadows": true
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "PhysicsMaterial": {
        "StaticFriction": 0.4,
        "DynamicFriction": 0.4,
        "Bounciness": 0.0,
        "FrictionCombine": 0,
        "BounceCombine": 0
      },
      "Rigidbody": {
        "Mass": 10.0,
        "Drag": 0.1,
        "AngularDrag": 0.1,
        "UseGravity": true
      },
      "GUID": "1943fd",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": 3.97,
            "y": 0.1,
            "z": 3.385
          }
        },
        {
          "Position": {
            "x": 1.29,
            "y": 0.1,
            "z": 3.385
          }
        },
        {
          "Position": {
            "x": -1.41,
            "y": 0.1,
            "z": 3.385
          }
        },
        {
          "Position": {
            "x": -4.1,
            "y": 0.1,
            "z": 3.385
          }
        },
        {
          "Position": {
            "x": 9.9,
            "y": 0.1,
            "z": -0.1
          },
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Position": {
            "x": 9.9,
            "y": 0.1,
            "z": 2.0
          },
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Position": {
            "x": 5.95,
            "y": 0.1,
            "z": -0.1
          },
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Position": {
            "x": 5.95,
            "y": 0.1,
            "z": 2.0
          },
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Position": {
            "x": 2.0,
            "y": 0.1,
            "z": -0.1
          },
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Position": {
            "x": 2.0,
            "y": 0.1,
            "z": 2.0
          },
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Position": {
            "x": -1.95,
            "y": 0.1,
            "z": -0.1
          },
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Position": {
            "x": -1.95,
            "y": 0.1,
            "z": 2.0
          },
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Position": {
            "x": -6.0,
            "y": 0.1,
            "z": -0.1
          },
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Position": {
            "x": -6.0,
            "y": 0.1,
            "z": 2.0
          },
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Position": {
            "x": -9.95,
            "y": 0.1,
            "z": -0.1
          },
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        },
        {
          "Position": {
            "x": -9.95,
            "y": 0.1,
            "z": 2.0
          },
          "Rotation": {
            "x": 0.0,
            "y": 0.0,
            "z": 0.0
          }
        }
      ]
    },
    {
      "Name": "Deck",
      "Transform": {
        "posX": 0.0,
        "posY": 2.0,
        "posZ": 0.0,
        "rotX": 0.0,
        "rotY": 180.000778,
        "rotZ": 180.000778,
        "scaleX": 1.51,
        "scaleY": 1.0,
        "scaleZ": 1.51
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": false,
      "SidewaysCard": false,
      "DeckIDs": [
        17209,
        65300,
        26300,
        26401
      ],
      "CustomDeck": {
        "172": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
          "NumWidth": 4,
          "NumHeight": 3,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "653": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/492401650180628533/5900E7D25B5FDD53C4FE06B974A9F49262944DB7/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061409390371/ED89BABA304C2ED50EBCDC14FA6A5DA60734A72D/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "263": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "264": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        }
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "Name": "Card",
          "Transform": {
            "posX": -25.5978622,
            "posY": 1.18050921,
            "posZ": -14.3713646,
            "rotX": -2.32917537E-05,
            "rotY": 180.000153,
            "rotZ": 0.000138346819,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Liberal Role Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 17209,
          "SidewaysCard": false,
          "CustomDeck": {
            "43": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
              "NumWidth": 4,
              "NumHeight": 3,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "32843f"
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": 35.271862,
            "posY": 2.00826573,
            "posZ": 3.95915,
            "rotX": 1.59127964E-07,
            "rotY": 180.000046,
            "rotZ": 1.90130621E-07,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Liberal Party Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 65300,
          "SidewaysCard": false,
          "CustomDeck": {
            "42": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/492401650180628533/5900E7D25B5FDD53C4FE06B974A9F49262944DB7/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061409390371/ED89BABA304C2ED50EBCDC14FA6A5DA60734A72D/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "564a73"
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": -25.5442123,
            "posY": 1.18032944,
            "posZ": -14.0084591,
            "rotX": -0.000813649443,
            "rotY": 179.990509,
            "rotZ": -0.00180632784,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Ja Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 26300,
          "SidewaysCard": false,
          "CustomDeck": {
            "109": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": ""
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": -25.6649284,
            "posY": 1.24106038,
            "posZ": -13.473444,
            "rotX": 0.826783955,
            "rotY": 180.033264,
            "rotZ": 0.008089778,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Nein Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 26401,
          "SidewaysCard": false,
          "CustomDeck": {
            "108": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": ""
        }
      ],
      "GUID": "40d8f5"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": 20.0,
        "posY": 1.06000006,
        "posZ": -6.0,
        "rotX": -1.01801936E-06,
        "rotY": 179.99411,
        "rotZ": 180.000778,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "0",
      "Description": "Discard Pile",
      "ColorDiffuse": {
        "r": 0.9999998,
        "g": 0.992160261,
        "b": 0.9999998
      },
      "Locked": true,
      "Grid": true,
      "Snap": false,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://cloud-3.steamusercontent.com/ugc/487893695356644836/6F5D2BC3DEFB2C8B3B881E97C10EA5B4A4348265/",
        "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/487893695356644292/42C47439AECD61034EA9A64440E654CC702BF51E/",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 4,
        "CastShadows": true
      },
      "XmlUI": "",
      "LuaScript": "--Static\r\nZONE_NAME = \"DISCARD_ZONE_GUID\"\r\nPRINT_NAME = \"Discard Pile\"\r\n\r\n--Variable\r\nloadDone = false\r\nwaitId = nil\r\n\r\nfunction onLoad()\r\n\tloadDone = true\r\nend\r\n\r\nfunction onCollisionEnter(info)\r\n\tif loadDone then\r\n\t\tGlobal.call(\"createPolicyCardWait\")\r\n\t\tcountCards(false)\r\n\tend\r\nend\r\n\r\nfunction onCollisionExit(info)\r\n\tif loadDone then\r\n\t\tGlobal.call(\"createPolicyCardWait\")\r\n\t\tcountCards(false)\r\n\tend\r\nend\r\n\r\nfunction secondCheck()\r\n\tcountCards(true)\r\nend\r\n\r\nfunction countCards(secondCheck)\r\n\tlocal deck = nil\r\n\tlocal deck_ct = 0\r\n\tlocal card_ct = 0\r\n\tlocal zone = getObjectFromGUID(Global.getVar(ZONE_NAME))\r\n\tlocal object\r\n\r\n\tif zone then\r\n\t\tlocal inZone = zone.getObjects()\r\n\t\tfor _, object in ipairs(inZone) do\r\n\t\t\tif object.tag == \"Card\" then\r\n\t\t\t\tcard_ct = card_ct + 1\r\n\t\t\telseif object.tag == \"Deck\" then\r\n\t\t\t\tdeck = object\r\n\t\t\t\tdeck_ct = deck_ct + 1\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\n\tif deck_ct == 0 and card_ct == 0 then\r\n\t\tself.setName(0)\r\n\telseif deck_ct == 0 and card_ct == 1 then\r\n\t\tself.setName(1)\r\n\telseif deck_ct == 1 and card_ct == 0 then\r\n\t\tself.setName(#deck.getObjects())\r\n\telse\r\n\t\tself.setName(\"Unknown\")\r\n\t\tif secondCheck then\r\n\t\t\tbroadcastToAll(\"WARNING: \" .. PRINT_NAME .. \" is not a single deck.\", {1, 0, 0})\r\n\t\telse\r\n\t\t\tif waitId then\r\n\t\t\t\tWait.stop(waitId)\r\n\t\t\tend\r\n\t\t\twaitId = Wait.time(function() countCards(true) end, 3)\r\n\t\tend\r\n\tend\r\nend",
      "LuaScriptState": "",
      "PhysicsMaterial": {
        "StaticFriction": 0.4,
        "DynamicFriction": 0.4,
        "Bounciness": 0.0,
        "FrictionCombine": 0,
        "BounceCombine": 0
      },
      "Rigidbody": {
        "Mass": 5.0,
        "Drag": 0.1,
        "AngularDrag": 0.1,
        "UseGravity": true
      },
      "GUID": "3e225f",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": 0.00338573358,
            "y": 0.100000076,
            "z": -0.3169564
          },
          "Rotation": {
            "x": 1.90922336E-07,
            "y": 0.05601249,
            "z": 180.001465
          }
        }
      ]
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": -20.0,
        "posY": 1.06000018,
        "posZ": -6.0,
        "rotX": -6.89671253E-07,
        "rotY": 179.971725,
        "rotZ": 1.00968919E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "0",
      "Description": "Draw Pile\nClick the button to draw!",
      "ColorDiffuse": {
        "r": 0.9999998,
        "g": 0.992160261,
        "b": 0.9999998
      },
      "Locked": true,
      "Grid": true,
      "Snap": false,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://cloud-3.steamusercontent.com/ugc/487893695356644836/6F5D2BC3DEFB2C8B3B881E97C10EA5B4A4348265/",
        "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/487893695357072850/998421A2E131CE65811DAC5F8A4774BB01BCF440/",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 4,
        "CastShadows": true
      },
      "XmlUI": "",
      "LuaScript": "--Static\r\nZONE_NAME = \"DRAW_ZONE_GUID\"\r\nPRINT_NAME = \"Draw Pile\"\r\n\r\n--Variable\r\nloadDone = false\r\nwaitId = nil\r\n\r\nfunction onLoad()\r\n\tloadDone = true\r\nend\r\n\r\nfunction onCollisionEnter(info)\r\n\tif loadDone then\r\n\t\tGlobal.call(\"createPolicyCardWait\")\r\n\t\tcountCards(false)\r\n\tend\r\nend\r\n\r\nfunction onCollisionExit(info)\r\n\tif loadDone then\r\n\t\tGlobal.call(\"createPolicyCardWait\")\r\n\t\tcountCards(false)\r\n\tend\r\nend\r\n\r\nfunction countCards(secondCheck)\r\n\tlocal deck = nil\r\n\tlocal deck_ct = 0\r\n\tlocal card_ct = 0\r\n\tlocal zone = getObjectFromGUID(Global.getVar(ZONE_NAME))\r\n\tlocal object\r\n\r\n\tif zone then\r\n\t\tlocal inZone = zone.getObjects()\r\n\t\tfor _, object in ipairs(inZone) do\r\n\t\t\tif object.tag == \"Card\" then\r\n\t\t\t\tcard_ct = card_ct + 1\r\n\t\t\telseif object.tag == \"Deck\" then\r\n\t\t\t\tdeck = object\r\n\t\t\t\tdeck_ct = deck_ct + 1\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\n\tif deck_ct == 0 and card_ct == 0 then\r\n\t\tself.setName(0)\r\n\telseif deck_ct == 0 and card_ct == 1 then\r\n\t\tself.setName(1)\r\n\telseif deck_ct == 1 and card_ct == 0 then\r\n\t\tself.setName(#deck.getObjects())\r\n\telse\r\n\t\tself.setName(\"Unknown\")\r\n\t\tif secondCheck then\r\n\t\t\tbroadcastToAll(\"WARNING: \" .. PRINT_NAME .. \" is not a single deck.\", {1, 0, 0})\r\n\t\telse\r\n\t\t\tif waitId then\r\n\t\t\t\tWait.stop(waitId)\r\n\t\t\tend\r\n\t\t\twaitId = Wait.time(function() countCards(true) end, 3)\r\n\t\tend\r\n\tend\r\nend",
      "LuaScriptState": "",
      "PhysicsMaterial": {
        "StaticFriction": 0.4,
        "DynamicFriction": 0.4,
        "Bounciness": 0.0,
        "FrictionCombine": 0,
        "BounceCombine": 0
      },
      "Rigidbody": {
        "Mass": 5.0,
        "Drag": 0.1,
        "AngularDrag": 0.1,
        "UseGravity": true
      },
      "GUID": "a5b10f",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": 0.00338573358,
            "y": 0.100000076,
            "z": -0.3169564
          },
          "Rotation": {
            "x": 1.90922336E-07,
            "y": 0.05601249,
            "z": 180.00148
          }
        }
      ]
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": -20.0035362,
        "posY": 3.65,
        "posZ": -5.68,
        "rotX": 0.0,
        "rotY": 359.832733,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 5.1,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "6463d3"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 20.0035362,
        "posY": 3.65,
        "posZ": -5.68,
        "rotX": 0.0,
        "rotY": 359.832733,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 5.1,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "b9bd6e"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 4.13882,
        "posY": 3.65,
        "posZ": -9.360994,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 5.1,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "c0b577"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": -11.85,
        "posY": 3.65,
        "posZ": 5.9,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 5.1,
        "scaleZ": 5.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "1f0149"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": -7.95,
        "posY": 3.65,
        "posZ": 5.9,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 5.1,
        "scaleZ": 5.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "390247"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": -4.0,
        "posY": 3.65,
        "posZ": 5.9,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 5.1,
        "scaleZ": 5.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "6c3840"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 0.0,
        "posY": 3.65,
        "posZ": 5.9,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 5.1,
        "scaleZ": 5.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "13e460"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 3.9,
        "posY": 3.65,
        "posZ": 5.9,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 5.1,
        "scaleZ": 5.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "441bbf"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 7.9,
        "posY": 3.65,
        "posZ": 5.9,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 5.1,
        "scaleZ": 5.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "6a906e"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 11.95,
        "posY": 3.65,
        "posZ": 5.95,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 5.1,
        "scaleZ": 5.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "488053"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": -9.9,
        "posY": 3.65,
        "posZ": -5.9,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 5.1,
        "scaleZ": 5.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "12b8ce"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": -5.73,
        "posY": 3.65,
        "posZ": -5.9,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 5.1,
        "scaleZ": 5.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "3cabfa"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": -1.93,
        "posY": 3.65,
        "posZ": -5.9,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 5.1,
        "scaleZ": 5.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "6f02b7"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 2.05,
        "posY": 3.65,
        "posZ": -5.9,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 5.1,
        "scaleZ": 5.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "939e6d"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 6.0,
        "posY": 3.65,
        "posZ": -5.9,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 5.1,
        "scaleZ": 5.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "3f80ba"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 10.0,
        "posY": 3.65,
        "posZ": -5.9,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 5.1,
        "scaleZ": 5.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "a6b76f"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": 16.5,
        "posY": 1.06,
        "posZ": -16.9999981,
        "rotX": -5.891129E-07,
        "rotY": 90.0000153,
        "rotZ": 8.42735446E-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "Previously Elected\nChancellor",
      "ColorDiffuse": {
        "r": 0.9999998,
        "g": 0.992160261,
        "b": 0.9999998
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://cloud-3.steamusercontent.com/ugc/487893695357318766/9B57AEFF6E2B10409A4EE57CF1E6766EE916D519/",
        "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/487893695357319590/2ACD160262A9173B0D3DA2BB39F4CB64DBD05746/",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 1,
        "TypeIndex": 4,
        "CastShadows": true
      },
      "XmlUI": "",
      "LuaScript": "function onDrop(player_color)\r\n\tGlobal.call('moveObjectToPlayerByGUID', {guid = self.getGUID(), forward = 11, height = 1.1, max = 18})\r\nend",
      "LuaScriptState": "",
      "GUID": "448483"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": -16.5,
        "posY": 1.06,
        "posZ": -17.0,
        "rotX": -1.1385999E-07,
        "rotY": 270.0,
        "rotZ": -2.29358278E-07,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "Previously Elected\nPresident",
      "ColorDiffuse": {
        "r": 0.9999998,
        "g": 0.992160261,
        "b": 0.9999998
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://cloud-3.steamusercontent.com/ugc/487893695357318766/9B57AEFF6E2B10409A4EE57CF1E6766EE916D519/",
        "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/487893695357324305/404778C406FD1D5E42878DBC919A2C702ECFBD69/",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 4,
        "CustomShader": {
          "SpecularColor": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "SpecularIntensity": 0.05,
          "SpecularSharpness": 7.0,
          "FresnelStrength": 0.4
        },
        "CastShadows": true
      },
      "XmlUI": "",
      "LuaScript": "function onDrop(player_color)\r\n\tGlobal.call('moveObjectToPlayerByGUID', {guid = self.getGUID(), forward = 11, height = 1.1, max = 18})\r\nend",
      "LuaScriptState": "",
      "GUID": "780217"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": -16.5,
        "posY": 2.08014941,
        "posZ": 17.0,
        "rotX": 1.63783061E-05,
        "rotY": 270.0,
        "rotZ": -1.59044328E-06,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "Presidency Placard",
      "ColorDiffuse": {
        "r": 0.9999998,
        "g": 0.992160261,
        "b": 0.9999998
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://cloud-3.steamusercontent.com/ugc/487893695357328317/E4BE8BAD2AAF1DF1E3701CC9F81E26D5EE8ECBA1/",
        "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/487893695357329148/7AD67B1F399FF0DAFA7DCD1042F496F2DE808EF5/",
        "NormalURL": "",
        "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/487893695357328317/E4BE8BAD2AAF1DF1E3701CC9F81E26D5EE8ECBA1/",
        "Convex": true,
        "MaterialIndex": 0,
        "TypeIndex": 4,
        "CustomShader": {
          "SpecularColor": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0
          },
          "SpecularIntensity": 0.05,
          "SpecularSharpness": 7.0,
          "FresnelStrength": 0.4
        },
        "CastShadows": true
      },
      "XmlUI": "",
      "LuaScript": "--Variable\r\nlastPres = nil\r\nloadDone = false\r\n\r\nfunction onLoad()\r\n\tloadDone = true\r\nend\r\n\r\nfunction onDrop(playerColor)\r\n\tlocal options = Global.getTable('options')\r\n\tGlobal.call('moveObjectToPlayerByGUID', {guid = self.getGUID(), forward = 11, height = 2.2, max = 18})\r\n\tif options.scriptedVoting then\r\n\t\tlocal currentPres = Global.call('getPres')\r\n\t\tif lastPres ~= currentPres then\r\n\t\t\tGlobal.setVar('disableVote', false)\r\n\t\t\tGlobal.setVar('votePassed', false)\r\n\t\t\tGlobal.call('returnVoteCardsToHand')\r\n\t\tend\r\n\t\tlastPres = currentPres\r\n\tend\r\nend\r\n\r\nfunction onCollisionEnter(collisionInfo)\r\n\tif collisionInfo and loadDone then\r\n\t\tlocal options = Global.getTable('options')\r\n\t\tif options.autoNotate then\r\n\t\t\tlocal notate = Global.getTable('notate')\r\n\t\t\tif notate.line and notate.action == 'gives pres to' then\r\n\t\t\t\tGlobal.call('notateColor2ByObject', {self})\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\nend",
      "LuaScriptState": "",
      "GUID": "4d3d8f"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": 16.5,
        "posY": 2.08,
        "posZ": 17.0,
        "rotX": 0.0,
        "rotY": 90.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "Chancellorship Placard",
      "ColorDiffuse": {
        "r": 0.9999998,
        "g": 0.992160261,
        "b": 0.9999998
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://cloud-3.steamusercontent.com/ugc/487893695357343978/5228C8D8C72C5210139EE69714F8B579A6C44D41/",
        "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/487893695357344772/0483EE4D833039AE838E2772F9EE8885A04FC934/",
        "NormalURL": "",
        "ColliderURL": "http://cloud-3.steamusercontent.com/ugc/487893695357344398/D4079A1675624B66BB33D66ABD9CEA1206BBD054/",
        "Convex": true,
        "MaterialIndex": 1,
        "TypeIndex": 4,
        "CastShadows": true
      },
      "XmlUI": "",
      "LuaScript": "function onDrop(player_color)\r\n\tGlobal.call('moveObjectToPlayerByGUID', {guid = self.getGUID(), forward = 11, height = 2.8, max = 18})\r\n\tGlobal.setVar('blockDraw', false)\r\nend",
      "LuaScriptState": "",
      "GUID": "7dba7e"
    },
    {
      "Name": "Card",
      "Transform": {
        "posX": 0.51,
        "posY": -27.8296528,
        "posZ": -16.19951,
        "rotX": -2.27755041E-08,
        "rotY": 120.000008,
        "rotZ": 2.27588277E-08,
        "scaleX": 1.51,
        "scaleY": 1.0,
        "scaleZ": 1.51
      },
      "Nickname": "",
      "Description": "Liberal Role Card",
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 11904,
      "SidewaysCard": false,
      "CustomDeck": {
        "119": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
          "NumWidth": 4,
          "NumHeight": 3,
          "BackIsHidden": false,
          "UniqueBack": false
        }
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "675a6f"
    },
    {
      "Name": "Card",
      "Transform": {
        "posX": 9.37,
        "posY": -27.8296528,
        "posZ": -4.006281,
        "rotX": 0.0,
        "rotY": 105.0,
        "rotZ": 0.0,
        "scaleX": 1.51,
        "scaleY": 1.0,
        "scaleZ": 1.51
      },
      "Nickname": "",
      "Description": "Hitler Role Card",
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 109600,
      "SidewaysCard": false,
      "CustomDeck": {
        "1096": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
          "NumWidth": 4,
          "NumHeight": 3,
          "BackIsHidden": false,
          "UniqueBack": false
        }
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "05df40"
    },
    {
      "Name": "Card",
      "Transform": {
        "posX": 13.13,
        "posY": -27.8296528,
        "posZ": 7.580923,
        "rotX": 0.0,
        "rotY": 75.0,
        "rotZ": 0.0,
        "scaleX": 1.51,
        "scaleY": 1.0,
        "scaleZ": 1.51
      },
      "Nickname": "",
      "Description": "Fascist Role Card",
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 65402,
      "SidewaysCard": false,
      "CustomDeck": {
        "654": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
          "NumWidth": 4,
          "NumHeight": 3,
          "BackIsHidden": false,
          "UniqueBack": false
        }
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "7b4b46"
    },
    {
      "Name": "Card",
      "Transform": {
        "posX": 1.38,
        "posY": -27.8296528,
        "posZ": 11.0842342,
        "rotX": 0.0,
        "rotY": 135.0,
        "rotZ": 0.0,
        "scaleX": 1.51,
        "scaleY": 1.0,
        "scaleZ": 1.51
      },
      "Nickname": "",
      "Description": "Liberal Role Card",
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 70705,
      "SidewaysCard": false,
      "CustomDeck": {
        "707": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
          "NumWidth": 4,
          "NumHeight": 3,
          "BackIsHidden": false,
          "UniqueBack": false
        }
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "c2309a"
    },
    {
      "Name": "Card",
      "Transform": {
        "posX": -1.52,
        "posY": -27.8296528,
        "posZ": 2.99024,
        "rotX": 0.0,
        "rotY": 105.0,
        "rotZ": 0.0,
        "scaleX": 1.51,
        "scaleY": 1.0,
        "scaleZ": 1.51
      },
      "Nickname": "",
      "Description": "Liberal Role Card",
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 65508,
      "SidewaysCard": false,
      "CustomDeck": {
        "655": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
          "NumWidth": 4,
          "NumHeight": 3,
          "BackIsHidden": false,
          "UniqueBack": false
        }
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "98f4dd"
    },
    {
      "Name": "Card",
      "Transform": {
        "posX": 0.51,
        "posY": -27.8296528,
        "posZ": -5.64508247,
        "rotX": 0.0,
        "rotY": 150.0,
        "rotZ": 0.0,
        "scaleX": 1.51,
        "scaleY": 1.0,
        "scaleZ": 1.51
      },
      "Nickname": "",
      "Description": "Liberal Role Card",
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 17209,
      "SidewaysCard": false,
      "CustomDeck": {
        "172": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
          "NumWidth": 4,
          "NumHeight": 3,
          "BackIsHidden": false,
          "UniqueBack": false
        }
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "328440"
    },
    {
      "Name": "Card",
      "Transform": {
        "posX": -8.23,
        "posY": -27.8296528,
        "posZ": 10.9963741,
        "rotX": 0.0,
        "rotY": 135.0,
        "rotZ": 0.0,
        "scaleX": 1.51,
        "scaleY": 1.0,
        "scaleZ": 1.51
      },
      "Nickname": "",
      "Description": "Liberal Role Card",
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 70807,
      "SidewaysCard": false,
      "CustomDeck": {
        "708": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
          "NumWidth": 4,
          "NumHeight": 3,
          "BackIsHidden": false,
          "UniqueBack": false
        }
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "ccb7ed"
    },
    {
      "Name": "Card",
      "Transform": {
        "posX": -10.37,
        "posY": -27.8296528,
        "posZ": -0.202920914,
        "rotX": 0.0,
        "rotY": 120.000008,
        "rotZ": 0.0,
        "scaleX": 1.51,
        "scaleY": 1.0,
        "scaleZ": 1.51
      },
      "Nickname": "",
      "Description": "Fascist Role Card",
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 11301,
      "SidewaysCard": false,
      "CustomDeck": {
        "113": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
          "NumWidth": 4,
          "NumHeight": 3,
          "BackIsHidden": false,
          "UniqueBack": false
        }
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "02b664"
    },
    {
      "Name": "Card",
      "Transform": {
        "posX": -14.03,
        "posY": -27.8296528,
        "posZ": -8.762842,
        "rotX": 0.0,
        "rotY": 105.0,
        "rotZ": 0.0,
        "scaleX": 1.51,
        "scaleY": 1.0,
        "scaleZ": 1.51
      },
      "Nickname": "",
      "Description": "Liberal Role Card",
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 12306,
      "SidewaysCard": false,
      "CustomDeck": {
        "123": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
          "NumWidth": 4,
          "NumHeight": 3,
          "BackIsHidden": false,
          "UniqueBack": false
        }
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "16e480"
    },
    {
      "Name": "Card",
      "Transform": {
        "posX": -18.42,
        "posY": -27.8296528,
        "posZ": -2.49021339,
        "rotX": 0.0,
        "rotY": 90.0,
        "rotZ": 0.0,
        "scaleX": 1.51,
        "scaleY": 1.0,
        "scaleZ": 1.51
      },
      "Nickname": "",
      "Description": "Fascist Role Card",
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 11703,
      "SidewaysCard": false,
      "CustomDeck": {
        "117": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
          "NumWidth": 4,
          "NumHeight": 3,
          "BackIsHidden": false,
          "UniqueBack": false
        }
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "0a5960"
    },
    {
      "Name": "3DText",
      "Transform": {
        "posX": 0.0,
        "posY": 10.0000134,
        "posZ": 144.0001,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "Text": {
        "Text": "Last Vote",
        "colorstate": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "fontSize": 256
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "88c953"
    },
    {
      "Name": "3DText",
      "Transform": {
        "posX": 0.0,
        "posY": 10.0000134,
        "posZ": -144.0001,
        "rotX": 0.0,
        "rotY": 180.000778,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "Text": {
        "Text": "Last Vote",
        "colorstate": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "fontSize": 256
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "ba4919"
    },
    {
      "Name": "3DText",
      "Transform": {
        "posX": 144.0001,
        "posY": 10.0000134,
        "posZ": 0.0,
        "rotX": 0.0,
        "rotY": 90.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "Text": {
        "Text": "Last Vote",
        "colorstate": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "fontSize": 256
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "b7dcde"
    },
    {
      "Name": "3DText",
      "Transform": {
        "posX": -144.0001,
        "posY": 10.0000134,
        "posZ": 0.0,
        "rotX": 0.0,
        "rotY": 270.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "Text": {
        "Text": "Last Vote",
        "colorstate": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0
        },
        "fontSize": 256
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "4598da"
    },
    {
      "Name": "backgammon_piece_white",
      "Transform": {
        "posX": -3.970005,
        "posY": 1.27525151,
        "posZ": -9.385001,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "Election Tracker",
      "ColorDiffuse": {
        "r": 0.0,
        "g": 0.30587405,
        "b": 0.42744264
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "dd57c4"
    },
    {
      "Name": "Card",
      "Transform": {
        "posX": 13.5,
        "posY": -27.8268318,
        "posZ": -12.2999992,
        "rotX": -8.14143846E-07,
        "rotY": 40.0000038,
        "rotZ": 180.000412,
        "scaleX": 1.51,
        "scaleY": 1.0,
        "scaleZ": 1.51
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 17302,
      "SidewaysCard": false,
      "CustomDeck": {
        "173": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/492401650180628533/5900E7D25B5FDD53C4FE06B974A9F49262944DB7/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061409390371/ED89BABA304C2ED50EBCDC14FA6A5DA60734A72D/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        }
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "55d1c3"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": -20.0,
        "posY": 3.65,
        "posZ": 6.1,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 5.1,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "eea120"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 20.0,
        "posY": 3.65,
        "posZ": 6.1,
        "rotX": 0.0,
        "rotY": -3.19132027E-07,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 5.1,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "374a16"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": 32.911747,
        "posY": 1.0475018,
        "posZ": 0.0,
        "rotX": 1.68436749E-08,
        "rotY": 180.000778,
        "rotZ": -1.3709005E-09,
        "scaleX": 0.8750002,
        "scaleY": 0.8750002,
        "scaleZ": 0.8750002
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.9999998,
        "g": 0.992160261,
        "b": 0.9999998
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://cloud-3.steamusercontent.com/ugc/478893369645758279/27A53856DDB93448D88351E67184EDC0B4EEF2BD/",
        "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/937184731423515154/F6691FD050599E5767A14E158D88948E1F233791/",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 4,
        "CastShadows": true
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "39d283"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 29.3,
        "posY": 3.51121688,
        "posZ": -34.43,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 15.3,
        "scaleY": 5.1,
        "scaleZ": 6.4
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "e99663"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 0.0,
        "posY": 3.51,
        "posZ": -34.43,
        "rotX": 0.0,
        "rotY": 0.166777566,
        "rotZ": 0.0,
        "scaleX": 15.3,
        "scaleY": 5.1,
        "scaleZ": 6.4
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "13b335"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": -29.4,
        "posY": 3.51,
        "posZ": -34.43,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 15.3,
        "scaleY": 5.1,
        "scaleZ": 6.4
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "d7774a"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": -51.66,
        "posY": 3.51,
        "posZ": -11.73,
        "rotX": 0.0,
        "rotY": 90.0,
        "rotZ": 0.0,
        "scaleX": 15.3,
        "scaleY": 5.1,
        "scaleZ": 6.4
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "f601b1"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": -51.66,
        "posY": 3.51,
        "posZ": 11.73,
        "rotX": 0.0,
        "rotY": 90.0,
        "rotZ": 0.0,
        "scaleX": 15.3,
        "scaleY": 5.1,
        "scaleZ": 6.4
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "620e09"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": -29.3,
        "posY": 3.51,
        "posZ": 34.43,
        "rotX": 0.0,
        "rotY": 180.0,
        "rotZ": 0.0,
        "scaleX": 15.3,
        "scaleY": 5.1,
        "scaleZ": 6.4
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "b7c2d8"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 0.0,
        "posY": 3.51,
        "posZ": 34.43,
        "rotX": 0.0,
        "rotY": 180.0,
        "rotZ": 0.0,
        "scaleX": 15.3,
        "scaleY": 5.1,
        "scaleZ": 6.4
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "162d55"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 29.3,
        "posY": 3.51,
        "posZ": 34.43,
        "rotX": 0.0,
        "rotY": 180.0,
        "rotZ": 0.0,
        "scaleX": 15.3,
        "scaleY": 5.1,
        "scaleZ": 6.4
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "0aa61b"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 51.66,
        "posY": 3.51,
        "posZ": 11.73,
        "rotX": 0.0,
        "rotY": 270.0,
        "rotZ": 0.0,
        "scaleX": 15.3,
        "scaleY": 5.1,
        "scaleZ": 6.4
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "fdc17a"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 51.66,
        "posY": 3.51,
        "posZ": -11.73,
        "rotX": 0.0,
        "rotY": 270.0,
        "rotZ": 0.0,
        "scaleX": 15.3,
        "scaleY": 5.1,
        "scaleZ": 6.4
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "c4d8e8"
    },
    {
      "Name": "Card",
      "Transform": {
        "posX": 26.57914,
        "posY": -27.8296528,
        "posZ": -9.605438,
        "rotX": 6.159933E-08,
        "rotY": 134.9914,
        "rotZ": -3.83715246E-08,
        "scaleX": 1.51,
        "scaleY": 1.0,
        "scaleZ": 1.51
      },
      "Nickname": "",
      "Description": "Liberal Party Card",
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 65300,
      "SidewaysCard": false,
      "CustomDeck": {
        "653": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/492401650180628533/5900E7D25B5FDD53C4FE06B974A9F49262944DB7/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061409390371/ED89BABA304C2ED50EBCDC14FA6A5DA60734A72D/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        }
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "a73564"
    },
    {
      "Name": "Card",
      "Transform": {
        "posX": 25.9259548,
        "posY": -27.8296528,
        "posZ": -0.09910844,
        "rotX": -3.660917E-08,
        "rotY": 74.9958,
        "rotZ": -1.83619051E-07,
        "scaleX": 1.51,
        "scaleY": 1.0,
        "scaleZ": 1.51
      },
      "Nickname": "",
      "Description": "Fascist Party Card",
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Locked": false,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": true,
      "CardID": 64501,
      "SidewaysCard": false,
      "CustomDeck": {
        "645": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/492401650180628533/5900E7D25B5FDD53C4FE06B974A9F49262944DB7/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061409390371/ED89BABA304C2ED50EBCDC14FA6A5DA60734A72D/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        }
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "e4d489"
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": 19.99734,
        "posY": 1.06000018,
        "posZ": 6.0,
        "rotX": 1.36098436E-07,
        "rotY": 180.013657,
        "rotZ": 4.4379977E-08,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "0",
      "Description": "Effects and Artifacts Pile",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": false,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://cloud-3.steamusercontent.com/ugc/487893695356644836/6F5D2BC3DEFB2C8B3B881E97C10EA5B4A4348265/",
        "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/933809569632275589/158E39D097DBC02755A884A813ED14E080BACBBB/",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 4,
        "CastShadows": true
      },
      "XmlUI": "",
      "LuaScript": "--Static\r\nZONE_NAME = \"EFFECTSPILE_ZONE_GUID\"\r\nPRINT_NAME = \"Effects and Artifacts Pile\"\r\n\r\n--Variable\r\nloadDone = false\r\nwaitId = nil\r\n\r\nfunction onLoad()\r\n\tloadDone = true\r\nend\r\n\r\nfunction onCollisionEnter(info)\r\n\tif info and loadDone then\r\n\t\tlocal target = getObjectFromGUID(info.collision_object.guid)\r\n\r\n\t\tif target then\r\n\t\t\tif target.tag == \"Deck\" then\r\n\t\t\t\tlocal tmpObj = getObjectFromGUID(Global.getVar(\"settingsPannel_guid\"))\r\n\t\t\t\tif tmpObj then\r\n\t\t\t\t\tGlobal.call(\"settingsPannelMakeButtons\")\r\n\t\t\t\tend\r\n\t\t\tend\r\n\t\tend\r\n\t\tcountCards(false)\r\n\tend\r\nend\r\n\r\nfunction onCollisionExit(info)\r\n\tif loadDone then\r\n\t\tcountCards(false)\r\n\tend\r\nend\r\n\r\nfunction countCards(secondCheck)\r\n\tlocal deck = nil\r\n\tlocal deck_ct = 0\r\n\tlocal card_ct = 0\r\n\tlocal zone = getObjectFromGUID(Global.getVar(ZONE_NAME))\r\n\tlocal object\r\n\r\n\tif zone then\r\n\t\tlocal inZone = zone.getObjects()\r\n\t\tfor _, object in ipairs(inZone) do\r\n\t\t\tif object.tag == \"Card\" then\r\n\t\t\t\tcard_ct = card_ct + 1\r\n\t\t\telseif object.tag == \"Deck\" then\r\n\t\t\t\tdeck = object\r\n\t\t\t\tdeck_ct = deck_ct + 1\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\n\tif deck_ct == 0 and card_ct == 0 then\r\n\t\tself.setName(0)\r\n\telseif deck_ct == 0 and card_ct == 1 then\r\n\t\tself.setName(1)\r\n\telseif deck_ct == 1 and card_ct == 0 then\r\n\t\tself.setName(#deck.getObjects())\r\n\telse\r\n\t\tself.setName(\"Unknown\")\r\n\t\tif secondCheck then\r\n\t\t\tbroadcastToAll(\"WARNING: \" .. PRINT_NAME .. \" is not a single deck.\", {1, 0, 0})\r\n\t\telse\r\n\t\t\tif waitId then\r\n\t\t\t\tWait.stop(waitId)\r\n\t\t\tend\r\n\t\t\twaitId = Wait.time(function() countCards(true) end, 3)\r\n\t\tend\r\n\tend\r\nend",
      "LuaScriptState": "",
      "PhysicsMaterial": {
        "StaticFriction": 0.4,
        "DynamicFriction": 0.4,
        "Bounciness": 0.0,
        "FrictionCombine": 0,
        "BounceCombine": 0
      },
      "Rigidbody": {
        "Mass": 5.0,
        "Drag": 0.1,
        "AngularDrag": 0.1,
        "UseGravity": true
      },
      "GUID": "4738c3",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": 0.00338573358,
            "y": 0.100000076,
            "z": -0.3169564
          },
          "Rotation": {
            "x": 1.90922336E-07,
            "y": 0.05601249,
            "z": 180.001465
          }
        }
      ]
    },
    {
      "Name": "Custom_Model",
      "Transform": {
        "posX": -20.0,
        "posY": 1.06000006,
        "posZ": 6.0,
        "rotX": -3.38809372E-08,
        "rotY": 180.0,
        "rotZ": 180.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "0",
      "Description": "Abilities Pile",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": false,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "CustomMesh": {
        "MeshURL": "http://cloud-3.steamusercontent.com/ugc/487893695356644836/6F5D2BC3DEFB2C8B3B881E97C10EA5B4A4348265/",
        "DiffuseURL": "http://cloud-3.steamusercontent.com/ugc/933809569632275589/158E39D097DBC02755A884A813ED14E080BACBBB/",
        "NormalURL": "",
        "ColliderURL": "",
        "Convex": true,
        "MaterialIndex": 3,
        "TypeIndex": 4,
        "CastShadows": true
      },
      "XmlUI": "",
      "LuaScript": "--Static\r\nZONE_NAME = \"ABILITIESPILE_ZONE_GUID\"\r\nPRINT_NAME = \"Abilities Pile\"\r\n\r\n--Variable\r\nloadDone = false\r\nwaitId = nil\r\n\r\nfunction onLoad()\r\n\tloadDone = true\r\nend\r\n\r\nfunction onCollisionEnter(info)\r\n\tif loadDone then\r\n\t\tcountCards(false)\r\n\tend\r\nend\r\n\r\nfunction onCollisionExit(info)\r\n\tif loadDone then\r\n\t\tcountCards(false)\r\n\tend\r\nend\r\n\r\nfunction countCards(secondCheck)\r\n\tlocal deck = nil\r\n\tlocal deck_ct = 0\r\n\tlocal card_ct = 0\r\n\tlocal zone = getObjectFromGUID(Global.getVar(ZONE_NAME))\r\n\tlocal object\r\n\r\n\tif zone then\r\n\t\tlocal inZone = zone.getObjects()\r\n\t\tfor _, object in ipairs(inZone) do\r\n\t\t\tif object.tag == \"Card\" then\r\n\t\t\t\tcard_ct = card_ct + 1\r\n\t\t\telseif object.tag == \"Deck\" then\r\n\t\t\t\tdeck = object\r\n\t\t\t\tdeck_ct = deck_ct + 1\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\n\tif deck_ct == 0 and card_ct == 0 then\r\n\t\tself.setName(0)\r\n\telseif deck_ct == 0 and card_ct == 1 then\r\n\t\tself.setName(1)\r\n\telseif deck_ct == 1 and card_ct == 0 then\r\n\t\tself.setName(#deck.getObjects())\r\n\telse\r\n\t\tself.setName(\"Unknown\")\r\n\t\tif secondCheck then\r\n\t\t\tbroadcastToAll(\"WARNING: \" .. PRINT_NAME .. \" is not a single deck.\", {1, 0, 0})\r\n\t\telse\r\n\t\t\tif waitId then\r\n\t\t\t\tWait.stop(waitId)\r\n\t\t\tend\r\n\t\t\twaitId = Wait.time(function() countCards(true) end, 3)\r\n\t\tend\r\n\tend\r\nend",
      "LuaScriptState": "",
      "PhysicsMaterial": {
        "StaticFriction": 0.4,
        "DynamicFriction": 0.4,
        "Bounciness": 0.0,
        "FrictionCombine": 0,
        "BounceCombine": 0
      },
      "Rigidbody": {
        "Mass": 5.0,
        "Drag": 0.1,
        "AngularDrag": 0.1,
        "UseGravity": true
      },
      "GUID": "b525aa",
      "AttachedSnapPoints": [
        {
          "Position": {
            "x": 0.00338573358,
            "y": 0.100000076,
            "z": -0.3169564
          },
          "Rotation": {
            "x": 1.90922336E-07,
            "y": 0.05601249,
            "z": 180.001465
          }
        }
      ]
    },
    {
      "Name": "Deck",
      "Transform": {
        "posX": 0.0,
        "posY": 12.0,
        "posZ": 0.0,
        "rotX": 0.0,
        "rotY": 180.000778,
        "rotZ": 180.000778,
        "scaleX": 1.51,
        "scaleY": 1.0,
        "scaleZ": 1.51
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": false,
      "SidewaysCard": false,
      "DeckIDs": [
        11703,
        64601,
        25100,
        25201
      ],
      "CustomDeck": {
        "117": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
          "NumWidth": 4,
          "NumHeight": 3,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "646": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/492401650180628533/5900E7D25B5FDD53C4FE06B974A9F49262944DB7/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061409390371/ED89BABA304C2ED50EBCDC14FA6A5DA60734A72D/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "251": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "252": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        }
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "Name": "Card",
          "Transform": {
            "posX": -25.0963821,
            "posY": 1.240596,
            "posZ": 7.505698,
            "rotX": 1.057071,
            "rotY": 180.1086,
            "rotZ": 0.02024361,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Fascist Role Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 11703,
          "SidewaysCard": false,
          "CustomDeck": {
            "43": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
              "NumWidth": 4,
              "NumHeight": 3,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "0a595f"
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": 24.8245831,
            "posY": 2.00815034,
            "posZ": -8.559618,
            "rotX": -1.364898E-07,
            "rotY": 180.000061,
            "rotZ": -2.28727785E-07,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Fascist Party Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 64601,
          "SidewaysCard": false,
          "CustomDeck": {
            "42": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/492401650180628533/5900E7D25B5FDD53C4FE06B974A9F49262944DB7/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061409390371/ED89BABA304C2ED50EBCDC14FA6A5DA60734A72D/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "057722"
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": -26.2312164,
            "posY": 1.18048835,
            "posZ": 7.421409,
            "rotX": 0.000166961152,
            "rotY": 179.9961,
            "rotZ": 0.00108356052,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Ja Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 25100,
          "SidewaysCard": false,
          "CustomDeck": {
            "109": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": ""
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": -24.993248,
            "posY": 1.19394541,
            "posZ": 6.27663755,
            "rotX": -1.42889587E-06,
            "rotY": 179.999756,
            "rotZ": -1.7045495E-05,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Nein Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 25201,
          "SidewaysCard": false,
          "CustomDeck": {
            "108": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": ""
        }
      ],
      "GUID": "d60f75"
    },
    {
      "Name": "Deck",
      "Transform": {
        "posX": 0.0,
        "posY": 13.0,
        "posZ": 0.0,
        "rotX": 0.0,
        "rotY": 180.000778,
        "rotZ": 180.000778,
        "scaleX": 1.51,
        "scaleY": 1.0,
        "scaleZ": 1.51
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 0.713235259,
        "g": 0.713235259,
        "b": 0.713235259
      },
      "Locked": true,
      "Grid": false,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": true,
      "Hands": false,
      "SidewaysCard": false,
      "DeckIDs": [
        11904,
        64700,
        25300,
        25401
      ],
      "CustomDeck": {
        "119": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
          "NumWidth": 4,
          "NumHeight": 3,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "647": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/492401650180628533/5900E7D25B5FDD53C4FE06B974A9F49262944DB7/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061409390371/ED89BABA304C2ED50EBCDC14FA6A5DA60734A72D/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "253": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        },
        "254": {
          "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
          "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
          "NumWidth": 2,
          "NumHeight": 2,
          "BackIsHidden": false,
          "UniqueBack": false
        }
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "ContainedObjects": [
        {
          "Name": "Card",
          "Transform": {
            "posX": -30.6644135,
            "posY": 1.18029726,
            "posZ": -0.73888725,
            "rotX": 0.0007872123,
            "rotY": 179.995285,
            "rotZ": 0.002993344,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Liberal Role Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 11904,
          "SidewaysCard": false,
          "CustomDeck": {
            "43": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/486767061412116401/336CAFD99D8CF70D8371094E048AB7B2CDD23DC3/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061412115929/FBB86CA2DAEF0B27A2643AC720B8212CDF10E0FA/",
              "NumWidth": 4,
              "NumHeight": 3,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "675a6e"
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": 25.9222,
            "posY": 2.00809455,
            "posZ": -9.155567,
            "rotX": 1.42984442E-08,
            "rotY": 180.000031,
            "rotZ": -7.804081E-08,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Liberal Party Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 64700,
          "SidewaysCard": false,
          "CustomDeck": {
            "42": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/492401650180628533/5900E7D25B5FDD53C4FE06B974A9F49262944DB7/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/486767061409390371/ED89BABA304C2ED50EBCDC14FA6A5DA60734A72D/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": "e94c08"
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": -31.6014118,
            "posY": 1.1805017,
            "posZ": -0.2383472,
            "rotX": 7.993238E-05,
            "rotY": 179.999115,
            "rotZ": -0.000419725169,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Ja Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 25300,
          "SidewaysCard": false,
          "CustomDeck": {
            "109": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": ""
        },
        {
          "Name": "Card",
          "Transform": {
            "posX": -32.6271477,
            "posY": 1.19394529,
            "posZ": 0.07494056,
            "rotX": 1.08592495E-07,
            "rotY": 179.999817,
            "rotZ": 6.243721E-07,
            "scaleX": 2.0858562,
            "scaleY": 1.0,
            "scaleZ": 2.0858562
          },
          "Nickname": "",
          "Description": "Nein Card",
          "ColorDiffuse": {
            "r": 0.713235259,
            "g": 0.713235259,
            "b": 0.713235259
          },
          "Locked": false,
          "Grid": false,
          "Snap": true,
          "IgnoreFoW": false,
          "Autoraise": true,
          "Sticky": true,
          "Tooltip": true,
          "GridProjection": false,
          "CardID": 25401,
          "SidewaysCard": false,
          "CustomDeck": {
            "108": {
              "FaceURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363209/86078D3725CDE2B860059AF6ADEC9C0DF2B9D786/",
              "BackURL": "http://cloud-3.steamusercontent.com/ugc/487893695357363653/E92709D8795B0637D18C6910013EEDF96A1480A3/",
              "NumWidth": 2,
              "NumHeight": 2,
              "BackIsHidden": false,
              "UniqueBack": false
            }
          },
          "XmlUI": "",
          "LuaScript": "",
          "LuaScriptState": "",
          "GUID": ""
        }
      ],
      "GUID": "304115"
    },
    {
      "Name": "3DText",
      "Transform": {
        "posX": 0.0,
        "posY": 1.5000006,
        "posZ": -53.0,
        "rotX": 90.0,
        "rotY": 180.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "Text": {
        "Text": " ",
        "colorstate": {
          "r": 0.6666667,
          "g": 0.0,
          "b": 0.0
        },
        "fontSize": 150
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "13f08c"
    },
    {
      "Name": "3DText",
      "Transform": {
        "posX": 29.3,
        "posY": 1.5000006,
        "posZ": -53.0,
        "rotX": 90.0,
        "rotY": 180.0,
        "rotZ": 0.0,
        "scaleX": 1.0,
        "scaleY": 1.0,
        "scaleZ": 1.0
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "Text": {
        "Text": " ",
        "colorstate": {
          "r": 0.905882359,
          "g": 0.7764706,
          "b": 0.6039216
        },
        "fontSize": 150
      },
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "37d7b5"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 29.3,
        "posY": 3.51,
        "posZ": -49.4,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 28.4,
        "scaleY": 5.1,
        "scaleZ": 10.8
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "409da9"
    },
    {
      "Name": "ScriptingTrigger",
      "Transform": {
        "posX": 0.0,
        "posY": 3.51,
        "posZ": -49.4,
        "rotX": 0.0,
        "rotY": 0.0,
        "rotZ": 0.0,
        "scaleX": 28.4,
        "scaleY": 5.1,
        "scaleZ": 10.8
      },
      "Nickname": "",
      "Description": "",
      "ColorDiffuse": {
        "r": 1.0,
        "g": 1.0,
        "b": 1.0,
        "a": 0.509803951
      },
      "Locked": true,
      "Grid": true,
      "Snap": true,
      "IgnoreFoW": false,
      "Autoraise": true,
      "Sticky": true,
      "Tooltip": true,
      "GridProjection": false,
      "HideWhenFaceDown": false,
      "Hands": false,
      "XmlUI": "",
      "LuaScript": "",
      "LuaScriptState": "",
      "GUID": "b9a8d0"
    }
  ],
  "DecalPallet": [],
  "TabStates": {
    "0": {
      "title": "Secret Hitler",
      "body": "[i]The year is 1932. The place is pre-WWII Germany. In Secret Hitler, players are German politicians attempting to hold a fragile Liberal government together and stem the rising tide of Fascism. Watch out though—there are secret Fascists among you, and one player is Secret Hitler.[/i]\n\n[u][b]OVERVIEW[/b][/u]\n\nAt the beginning of the game, each player is secretly assigned to one of three roles: [b]Liberal[/b], [b]Fascist[/b], or [b]Hitler[/b]. The Liberals have a majority, but they don’t know for sure who anyone is; Fascists must resort to secrecy and sabotage to accomplish their goals. Hitler plays for the Fascist team, and the Fascists know Hitler’s identity from the outset, but Hitler doesn’t know the Fascists and must work to figure them out.\n\n[b]The Liberals win by enacting five Liberal Policies or killing Hitler. The Fascists win by enacting six Fascist Policies, or if Hitler is elected Chancellor after three Fascist Policies have been enacted.[/b]\n\nWhenever a Fascist Policy is enacted, the government becomes more powerful, and the President is granted a single-use power which must be used before the next round can begin. It doesn’t matter what team the President is on; in fact, even Liberal players might be tempted to enact a Fascist Policy to gain new powers.",
      "color": "Grey",
      "visibleColor": {
        "r": 0.5,
        "g": 0.5,
        "b": 0.5
      },
      "id": 0
    },
    "1": {
      "title": "Object",
      "body": "[u][b]OBJECT[/b][/u]\n\nEvery player has a secret identity as a member of either the Liberal team or the Fascist team.\n\nPlayers on the Liberal team win if either:\n\n    • Five Liberal Policies are enacted.\n    or\n    • Hitler is assassinated.\n\nPlayers on the Fascist team win if either:\n\n    • Six Fascist Policies are enacted\n    or\n    • Hitler is elected Chancellor any time after the\n    third Fascist Policy has been enacted.",
      "color": "Grey",
      "visibleColor": {
        "r": 0.5,
        "g": 0.5,
        "b": 0.5
      },
      "id": 1
    },
    "2": {
      "title": "Gameplay",
      "body": "[u][b]GAMEPLAY[/b][/u]\n\nSecret Hitler is played in rounds. Each round has an [b]Election[/b] to form a government, a Legislative Session to enact a new Policy, and an Executive Action to exercise governmental power.\n\n[u][b]ELECTION[/b][/u]\n\n1. [b]Pass the Presidential Candidacy[/b]\nAt the beginning of a new round, the President placard moves clockwise to the next player, who is the new Presidential Candidate.\n\n2. [b]Nominate a Chancellor[/b]\nThe Presidential Candidate chooses a Chancellor Candidate by passing the Chancellor placard to any other eligible player. The Presidential Candidate is free to discuss Chancellor options with the table to build consensus and make it more likely the Government gets elected.\n\n[b]Eligibility:[/b]\nThe last [i]elected[/i] President and Chancellor are “term-limited,” and ineligible to be nominated as Chancellor Candidate.\n\n> ON ELIGIBILITY:\n>\n> • Term limits apply to the President and\n> Chancellor who were last elected, not to the last > pair nominated.\n>\n> • Term limits only affect nominations to the\n> Chancellorship; anyone can be President, even\n> someone who was just Chancellor.\n>\n> • If there are only five players left in the game,\n> only the last elected Chancellor is ineligible to be\n> Chancellor Candidate; the last President may be\n> nominated.\n>\n> • There are some other rules that affect eligibility\n> in specific ways: the Veto Power and the Election\n> Tracker. You don’t need to worry about those yet,\n> and we’ll talk about each one in its relevant\n> section.\n\n3. [b]Vote on the government[/b]\nOnce the Presidential Candidate has chosen an eligible Chancellor Candidate, players may discuss the proposed government until everyone is ready to vote. Every player, [i]including the Candidates[/i], votes on the proposed government. Once everyone is ready to vote, reveal your Ballot cards simultaneously so that everyone’s vote is public.\n\n[b]If the vote is a tie, or if a majority of players votes no:[/b]\n\nThe vote fails. The Presidential Candidate misses this chance to be elected, and the President placard moves clockwise to the next player. The Election Tracker is advanced by one Election.\n\n[b]Election Tracker:[/b] If the group rejects three governments in a row, the country is thrown into chaos. Immediately reveal the Policy on top of the Policy deck and enact it. Any power granted by this Policy is ignored, but the Election Tracker resets, and existing term-limits are forgotten. All players become eligible to hold the office of Chancellor for the next Election. If there are fewer than three tiles remaining in the Policy deck at this point, shuffle them with the Discard pile to create a new Policy deck.\n\n[i]Any time a new Policy tile is played face-up, the Election Tracker is reset, whether it was enacted by an elected government or enacted by the frustrated populace.[/i]\n\n[b]If a majority of players votes yes:[/b]\n\nThe Presidential Candidate and Chancellor Candidate become the new President and Chancellor, respectively.\n\n    If three or more Fascist Policies have been\n    enacted already:\n\n    Ask if the new Chancellor is Hitler. If so, the\n    game is over and the Fascists win. Otherwise,\n    other players know for sure the Chancellor is not\n    Hitler.\n\nProceed as usual to the Legislative Session.",
      "color": "Grey",
      "visibleColor": {
        "r": 0.5,
        "g": 0.5,
        "b": 0.5
      },
      "id": 2
    },
    "3": {
      "title": "Legislative Session",
      "body": "[u][b]LEGISLATIVE SESSION[/u][/b]\n\nDuring the Legislative Session, the President and Chancellor work together to enact a new Policy in secret. The President draws the top three tiles from the Policy deck, looks at them in secret, and discards one tile face down into the Discard pile. The remaining two tiles go to the Chancellor, who looks in secret, discards one Policy tile face down, and enacts the remaining Policy by placing the tile face up on the corresponding track.\n\nVerbal and nonverbal communication between the President and Chancellor is forbidden. The President and Chancellor MAY NOT pick Policies to play at random, shuffle the tiles before discarding one, or do anything else clever to avoid secretly and intentionally selecting a Policy. Additionally, the President should hand both Policies over at the same time, rather than one at a time to gauge the Chancellor’s reaction. Attempting to telegraph the contents of your hand using randomness or any other unusual selection procedure violates the spirit of the game. Don’t do it.\n\n[b]Discarded Policy tiles should never be revealed to the group. Players must rely on the word of the President and Chancellor, who are free to lie.[/b]\n\n> [b]ABOUT LYING:[/b] Often, some players learn\n> things that the rest of the players don’t know,\n> like when the President and Chancellor get to see > Policy tiles, or when a President uses the\n> Investigate power to see someone’s Party\n> Membership card. You can always lie about\n> hidden knowledge in Secret Hitler. The only time\n> players MUST tell the truth is in game-ending,\n> Hitler-related scenarios: a player who is Hitler\n> must say so if assassinated or if elected\n> Chancellor after three Fascist Policies have been\n> enacted.\n\n[b]If there are fewer than three tiles remaining in the Policy deck at the end of a Legislative Session,[/b] shuffle them with the Discard pile to create a new Policy deck. Unused Policy tiles should never be revealed, and they should not be simply placed on top of the new Policy deck.\n\n[b]If the government enacted a Fascist Policy that covered up a Presidential Power,[/b] the sitting President gets to use that power. Proceed to the Executive Action.\n\n[b]If the government enacted a Liberal Policy or a Fascist Policy that grants no Presidential Power,[/b] begin a new round with a new Election.",
      "color": "Grey",
      "visibleColor": {
        "r": 0.5,
        "g": 0.5,
        "b": 0.5
      },
      "id": 3
    },
    "4": {
      "title": "Executive Action",
      "body": "[u][b]EXECUTIVE ACTION[/u][/b]\n\nIf the newly-enacted Fascist Policy grants a Presidential Power, the President must use it before the next round can begin. Before using a power, the President is free to discuss the issue with other players, but ultimately the President gets to decide how and when the power is used. Gameplay cannot continue until the President uses the power. Presidential Powers are used only once; they don’t stack or roll over to future turns.",
      "color": "Grey",
      "visibleColor": {
        "r": 0.5,
        "g": 0.5,
        "b": 0.5
      },
      "id": 4
    },
    "5": {
      "title": "Presidential Powers",
      "body": "[u][b]PRESIDENTIAL POWERS[/u][/b]\n\n[b]Investigate Loyalty[/b]\nThe President chooses a player to investigate. Investigated players should hand their Party Membership card (not Secret Role card!) to the President, who checks the player’s loyalty in secret and then returns the card to the player. The President may share (or lie about!) the results of their investigation at their discretion. No player may be investigated twice in the same game.\n\n[b]Call Special Election[/b]\nThe President chooses any other player at the table to be the next Presidential Candidate by passing that player the President placard. Any player can become President—even players that are term-limited. The new President nominates an eligible player as Chancellor Candidate and the Election proceeds as usual.\n\n[b]A Special Election does not skip any players. After a Special Election, the President placard returns to the left of the President who enacted the Special Election.[/b]\n\nIf the President passes the presidency to the next player in the rotation, that player would get to run for President twice in a row: once for the Special Election and once for their normal shift in the Presidential rotation.\n\n[b]Policy Peek[/b]\nThe President secretly looks at the top three tiles in the Policy deck and then returns them to the top of the deck without changing the order.\n\n[b]Execution[/b]\nThe President executes one player at the table by saying “I formally execute [player name].” If that player is Hitler, the game ends in a Liberal victory. If the executed player is [b]not[/b] Hitler, the table should not learn whether a Fascist or a Liberal has been killed; players must try to work out for themselves the new table balance. Executed players are removed from the game and may not speak, vote, or run for office.",
      "color": "Grey",
      "visibleColor": {
        "r": 0.5,
        "g": 0.5,
        "b": 0.5
      },
      "id": 5
    },
    "6": {
      "title": "Veto Power",
      "body": "[u][b]VETO POWER[/u][/b]\n\nThe Veto Power is a special rule that comes into effect after five Fascist Policies have been enacted. For all Legislative Sessions after the fifth* Fascist Policy is enacted, the Executive branch gains a [i]permanent new ability[/i] to discard all three Policy tiles if [b]both[/b] the Chancellor and President agree.\n\nThe President draws three Policy tiles, discards one, and passes the remaining two to the Chancellor as usual. Then Chancellor may, instead of enacting either Policy, say “I wish to veto this agenda.” If the President consents by saying, “I agree to the veto,” both Policies are discarded and the President placard passes to the left as usual. If the President does not consent, the Chancellor must enact a Policy as normal.\n\nEach use of the Veto Power represents an inactive government and advances the Election Tracker by one.",
      "color": "Grey",
      "visibleColor": {
        "r": 0.5,
        "g": 0.5,
        "b": 0.5
      },
      "id": 6
    },
    "7": {
      "title": "Strategy Notes",
      "body": "[u][b]STRATEGY NOTES[/u][/b]\n\n• [b]Everyone should claim to be a Liberal.[/b] Since the Liberal team has a voting majority, it can easily shut out any player claiming to be a Fascist. As a Fascist, there is no advantage to outing yourself to the majority. Additionally, Liberals should usually tell the truth. Liberals are trying to figure out the game like a puzzle, so lying can put their team at a significant disadvantage.\n\n• [b]If this is your first time playing Hitler, just remember: be as Liberal as possible.[/b] Enact Liberal Policies. Vote for Liberal governments. Kiss babies. Trust your fellow Fascists to create opportunities for you to enact Liberal Policies and to advance Fascism on their turns. The Fascists win by subtly manipulating the table and waiting for the right cover to enact Fascist Policies, not by overtly playing as evil.\n\n• [b]Liberals frequently benefit from slowing play down and discussing the available information.[/b] Fascists frequently benefit from rushing votes and creating confusion.\n\n• [b]Fascists most often win by electing Hitler, not by enacting six Policies![/b] Electing Hitler isn’t an optional or secondary win condition, it’s the core of a successful Fascist strategy. Hitler should always play as a Liberal, and should generally avoid lying or getting into fights and disagreements with other players. When the time comes, Hitler needs the Liberals’ trust to get elected. Even if Hitler isn’t ultimately elected, the distrust sown among Liberals is key to getting Fascists elected late in the game.\n\n• [b]Ask other players to explain why they took an action.[/b] This is especially important with Presidential Powers—in fact, ask ahead of time whom a candidate is thinking of investigating/appointing/assassinating.\n\n• [b]If a Fascist Policy comes up, there are only three possible culprits: The President, the Chancellor, or the Policy Deck.[/b] Try to figure out who (or what!) put you in this position. ",
      "color": "Grey",
      "visibleColor": {
        "r": 0.5,
        "g": 0.5,
        "b": 0.5
      },
      "id": 7
    },
    "8": {
      "title": "Custom",
      "body": "Custom includes additional presidential powers that you can place anywhere, allows changing the number of policy slots on the fascist and liberal tracks with not used cards and enables changing the number of policy cards.  Some presidential powers need fan expansion cards that are not included.\r\n\r\nTo make an extended game use the extra slot on the both tracks.  Add 2 Fascist and 1 Liberal policy cards and then add an orange \"The president examines the top card.\" power.\r\n\r\nGrey policy cards can be played on Fascist or Liberal tracks.  Try removing a liberal policy and adding a grey one.\r",
      "color": "Grey",
      "visibleColor": {
        "r": 0.5,
        "g": 0.5,
        "b": 0.5
      },
      "id": 8
    },
    "9": {
      "title": "Credits",
      "body": "[b]Secret Hitler[/b] was designed by [b][i]Max Temkin[/i][/b] (Cards Against Humanity, Humans vs. Zombies) [b][i]Mike Boxleiter[/i][/b] (Solipskier, TouchTone), [b][i]Tommy Maranges[/i][/b] (Philosophy Bro) and illustrated by [b][i]Mackenzie Schubert[/i][/b] (Letter Tycoon, Penny Press).\n\n[u]Secret Hitler homepage:[/u]\nhttp://secrethitler.com\n\n[b][i]Secret Hitler: Consolidator Edition by Lost Savage[/b][/i] is based on the following mods: \r\n\r\n[b][i]Secret Hitler by skkeeper[/b][/i]\r\nThe first Secret Hitler for TTS based on the print and play version. \r\n\r\n[b][i]Secret Hitler by FragaholiC[/i][/b]\r\nAll Secret Hitler TTS mods are based off of this one (except for the one above). \r\n\r\n[b][i]Secret Hitler Scripted by Lycake[/i][/b]\r\nFirst scripted version. Now removed from Steam.\r\n\r\n[b][i]Secret Hitler Rescripted by LostGod[/i][/b]\r\nMy scripting is based off of this mod. This is the version that picks the president automatically. \r\n\r\n[b][i]Secret Hitler Scripted with 10 player variant by The Blind Dragon and Mr. White[/i][/b]\r\nUsed the extended boards (7 slot Fascist and 6 slot Liberal). \r\n\r\n[b][i]Secret Hitler: Customizable Board (Game not Included) by Corruptor0127[/i][/b]\r\nMost of the work for the custom boards. \r\n\r\n[b][i]Secret Hitler: Remastered by The Trust Melon[/i][/b]\r\nThe idea of a darker table top. \r\n\r\n[b][i]Secret Hitler (Anonymous Voting) by Hobo[/i][/b]\r\nUsed the hidden zones and the idea of card buttons.\r\n\r\n[b][i]Secret Hitler Scripted Note Taker Machine by Max[/i][/b]\r\nThe original note taker. \r\n\n[b][i]Secret Hitler Note Taker by The Blind Dragon[/i][/b]\r\nThe updated note taker. \r\n\n[b][i]Adv Secret Hitler Note Taker by smiling Aktheon[/i][/b]\r\nThe best note taker. My note taker is based on this one. \n\n[b][i]Secret Hitler Cheat/Troll Proof by SwiftPanda[/i][/b]\r\nAuto pres/chan for the note taker and other ideas. \r\n\r\n[b][i]Card Counter by Rodney[/i][/b]\r\nMy counting code is based on this.\n\n[b][i]Assorted Models by Bobirov[/i][/b]\nUsed the bars for imprisonment.\n\n[b][i]Shuffle Players Button by Markimus[/i][/b]\nThe start of the new shuffle functions.\n\n[b][i]Table Extension Shelves by Demian[/i][/b]\r\nMakes the table bigger for 12 Player.\r\n\r\n[b][i]12 Player avatar and hidden zone by CHRY[/i][/b]\r\nMore stuff for 12 Player.\n\n[u][b]OTHER CREDITS[/b][/u]\n\nEarth background is based on the specular map by [b][i]James Hastings-Trew[/i][/b].\r\n",
      "color": "Grey",
      "visibleColor": {
        "r": 0.5,
        "g": 0.5,
        "b": 0.5
      },
      "id": 9
    },
    "10": {
      "title": "License",
      "body": "Secret Hitler and this derivative are \nlicensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.\n\nhttps://creativecommons.org/licenses/by-nc-sa/4.0/legalcode",
      "color": "Grey",
      "visibleColor": {
        "r": 0.5,
        "g": 0.5,
        "b": 0.5
      },
      "id": 10
    }
  },
  "CameraStates": [
    null,
    {
      "Position": {
        "x": 0.0,
        "y": -2.5,
        "z": 0.0
      },
      "Rotation": {
        "x": 90.0,
        "y": 0.0,
        "z": 0.0
      },
      "Distance": 77.4675,
      "Zoomed": false
    },
    {
      "Position": {
        "x": 29.36134,
        "y": -2.5,
        "z": -57.1900826
      },
      "Rotation": {
        "x": 90.0,
        "y": 0.0,
        "z": 0.0
      },
      "Distance": 67.81616,
      "Zoomed": false
    },
    {
      "Position": {
        "x": -0.00034258407,
        "y": -2.5,
        "z": 140.0
      },
      "Rotation": {
        "x": 10.0,
        "y": -0.000106550047,
        "z": 0.0
      },
      "Distance": 77.4675,
      "Zoomed": false
    },
    {
      "Position": {
        "x": 104.838669,
        "y": -2.5,
        "z": 21.6634178
      },
      "Rotation": {
        "x": 90.0,
        "y": 2.73298133E-06,
        "z": 0.0
      },
      "Distance": 72.0548553,
      "Zoomed": false
    },
    {
      "Position": {
        "x": 102.023315,
        "y": -2.5,
        "z": -21.0045624
      },
      "Rotation": {
        "x": 90.0,
        "y": 2.73298133E-06,
        "z": 0.0
      },
      "Distance": 27.8096485,
      "Zoomed": false
    },
    {
      "Position": {
        "x": 90.55828,
        "y": -2.5,
        "z": -64.82294
      },
      "Rotation": {
        "x": 90.0,
        "y": 2.73298133E-06,
        "z": 0.0
      },
      "Distance": 52.3860664,
      "Zoomed": false
    },
    {
      "Position": {
        "x": 0.0,
        "y": -2.5,
        "z": 0.0
      },
      "Rotation": {
        "x": 90.0,
        "y": 90.00007,
        "z": 0.0
      },
      "Distance": 116.234146,
      "Zoomed": false
    },
    {
      "Position": {
        "x": 0.0,
        "y": -2.5,
        "z": 0.0
      },
      "Rotation": {
        "x": 90.0,
        "y": 179.999985,
        "z": 0.0
      },
      "Distance": 77.5125046,
      "Zoomed": false
    },
    {
      "Position": {
        "x": 0.0,
        "y": -2.5,
        "z": 0.0
      },
      "Rotation": {
        "x": 90.0,
        "y": 269.999969,
        "z": 0.0
      },
      "Distance": 116.235008,
      "Zoomed": false
    }
  ],
  "VersionNumber": "v12.1.1"
}